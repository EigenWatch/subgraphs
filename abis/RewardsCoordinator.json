{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IRewardsCoordinatorTypes.RewardsCoordinatorConstructorParams",
          "components": [
            {
              "name": "delegationManager",
              "type": "address",
              "internalType": "contract IDelegationManager"
            },
            {
              "name": "strategyManager",
              "type": "address",
              "internalType": "contract IStrategyManager"
            },
            {
              "name": "allocationManager",
              "type": "address",
              "internalType": "contract IAllocationManager"
            },
            {
              "name": "pauserRegistry",
              "type": "address",
              "internalType": "contract IPauserRegistry"
            },
            {
              "name": "permissionController",
              "type": "address",
              "internalType": "contract IPermissionController"
            },
            {
              "name": "CALCULATION_INTERVAL_SECONDS",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "MAX_REWARDS_DURATION",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "MAX_RETROACTIVE_LENGTH",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "MAX_FUTURE_LENGTH",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "GENESIS_REWARDS_TIMESTAMP",
              "type": "uint32",
              "internalType": "uint32"
            },
            { "name": "version", "type": "string", "internalType": "string" }
          ]
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "CALCULATION_INTERVAL_SECONDS",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "GENESIS_REWARDS_TIMESTAMP",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_FUTURE_LENGTH",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_RETROACTIVE_LENGTH",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_REWARDS_DURATION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "activationDelay",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "allocationManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAllocationManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "beaconChainETHStrategy",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IStrategy" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateEarnerLeafHash",
      "inputs": [
        {
          "name": "leaf",
          "type": "tuple",
          "internalType": "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
          "components": [
            { "name": "earner", "type": "address", "internalType": "address" },
            {
              "name": "earnerTokenRoot",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "calculateTokenLeafHash",
      "inputs": [
        {
          "name": "leaf",
          "type": "tuple",
          "internalType": "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf",
          "components": [
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            {
              "name": "cumulativeEarnings",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "checkClaim",
      "inputs": [
        {
          "name": "claim",
          "type": "tuple",
          "internalType": "struct IRewardsCoordinatorTypes.RewardsMerkleClaim",
          "components": [
            { "name": "rootIndex", "type": "uint32", "internalType": "uint32" },
            {
              "name": "earnerIndex",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "earnerTreeProof",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "earnerLeaf",
              "type": "tuple",
              "internalType": "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
              "components": [
                {
                  "name": "earner",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "earnerTokenRoot",
                  "type": "bytes32",
                  "internalType": "bytes32"
                }
              ]
            },
            {
              "name": "tokenIndices",
              "type": "uint32[]",
              "internalType": "uint32[]"
            },
            {
              "name": "tokenTreeProofs",
              "type": "bytes[]",
              "internalType": "bytes[]"
            },
            {
              "name": "tokenLeaves",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]",
              "components": [
                {
                  "name": "token",
                  "type": "address",
                  "internalType": "contract IERC20"
                },
                {
                  "name": "cumulativeEarnings",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "claimerFor",
      "inputs": [
        { "name": "earner", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "claimer", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "createAVSRewardsSubmission",
      "inputs": [
        {
          "name": "rewardsSubmissions",
          "type": "tuple[]",
          "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            { "name": "duration", "type": "uint32", "internalType": "uint32" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createOperatorDirectedAVSRewardsSubmission",
      "inputs": [
        { "name": "avs", "type": "address", "internalType": "address" },
        {
          "name": "operatorDirectedRewardsSubmissions",
          "type": "tuple[]",
          "internalType": "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission[]",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            {
              "name": "operatorRewards",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.OperatorReward[]",
              "components": [
                {
                  "name": "operator",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            { "name": "duration", "type": "uint32", "internalType": "uint32" },
            {
              "name": "description",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createOperatorDirectedOperatorSetRewardsSubmission",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            { "name": "avs", "type": "address", "internalType": "address" },
            { "name": "id", "type": "uint32", "internalType": "uint32" }
          ]
        },
        {
          "name": "operatorDirectedRewardsSubmissions",
          "type": "tuple[]",
          "internalType": "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission[]",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            {
              "name": "operatorRewards",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.OperatorReward[]",
              "components": [
                {
                  "name": "operator",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            { "name": "duration", "type": "uint32", "internalType": "uint32" },
            {
              "name": "description",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createRewardsForAllEarners",
      "inputs": [
        {
          "name": "rewardsSubmissions",
          "type": "tuple[]",
          "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            { "name": "duration", "type": "uint32", "internalType": "uint32" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createRewardsForAllSubmission",
      "inputs": [
        {
          "name": "rewardsSubmissions",
          "type": "tuple[]",
          "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            { "name": "duration", "type": "uint32", "internalType": "uint32" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "cumulativeClaimed",
      "inputs": [
        { "name": "earner", "type": "address", "internalType": "address" },
        {
          "name": "token",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "outputs": [
        { "name": "totalClaimed", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "currRewardsCalculationEndTimestamp",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "defaultOperatorSplitBips",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "delegationManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IDelegationManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "disableRoot",
      "inputs": [
        { "name": "rootIndex", "type": "uint32", "internalType": "uint32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getCurrentClaimableDistributionRoot",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IRewardsCoordinatorTypes.DistributionRoot",
          "components": [
            { "name": "root", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "rewardsCalculationEndTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "activatedAt",
              "type": "uint32",
              "internalType": "uint32"
            },
            { "name": "disabled", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCurrentDistributionRoot",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IRewardsCoordinatorTypes.DistributionRoot",
          "components": [
            { "name": "root", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "rewardsCalculationEndTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "activatedAt",
              "type": "uint32",
              "internalType": "uint32"
            },
            { "name": "disabled", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDistributionRootAtIndex",
      "inputs": [
        { "name": "index", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IRewardsCoordinatorTypes.DistributionRoot",
          "components": [
            { "name": "root", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "rewardsCalculationEndTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "activatedAt",
              "type": "uint32",
              "internalType": "uint32"
            },
            { "name": "disabled", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDistributionRootsLength",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorAVSSplit",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "avs", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorPISplit",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorSetSplit",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            { "name": "avs", "type": "address", "internalType": "address" },
            { "name": "id", "type": "uint32", "internalType": "uint32" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRootIndexFromHash",
      "inputs": [
        { "name": "rootHash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "initialOwner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_rewardsUpdater",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_activationDelay",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "_defaultSplitBips",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isAVSRewardsSubmissionHash",
      "inputs": [
        { "name": "avs", "type": "address", "internalType": "address" },
        { "name": "hash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "valid", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperatorDirectedAVSRewardsSubmissionHash",
      "inputs": [
        { "name": "avs", "type": "address", "internalType": "address" },
        { "name": "hash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "valid", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperatorDirectedOperatorSetRewardsSubmissionHash",
      "inputs": [
        { "name": "avs", "type": "address", "internalType": "address" },
        { "name": "hash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "valid", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isRewardsForAllSubmitter",
      "inputs": [
        { "name": "submitter", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "valid", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isRewardsSubmissionForAllEarnersHash",
      "inputs": [
        { "name": "avs", "type": "address", "internalType": "address" },
        { "name": "hash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "valid", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isRewardsSubmissionForAllHash",
      "inputs": [
        { "name": "avs", "type": "address", "internalType": "address" },
        { "name": "hash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "valid", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pauseAll",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [{ "name": "index", "type": "uint8", "internalType": "uint8" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauserRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "permissionController",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPermissionController"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "processClaim",
      "inputs": [
        {
          "name": "claim",
          "type": "tuple",
          "internalType": "struct IRewardsCoordinatorTypes.RewardsMerkleClaim",
          "components": [
            { "name": "rootIndex", "type": "uint32", "internalType": "uint32" },
            {
              "name": "earnerIndex",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "earnerTreeProof",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "earnerLeaf",
              "type": "tuple",
              "internalType": "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
              "components": [
                {
                  "name": "earner",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "earnerTokenRoot",
                  "type": "bytes32",
                  "internalType": "bytes32"
                }
              ]
            },
            {
              "name": "tokenIndices",
              "type": "uint32[]",
              "internalType": "uint32[]"
            },
            {
              "name": "tokenTreeProofs",
              "type": "bytes[]",
              "internalType": "bytes[]"
            },
            {
              "name": "tokenLeaves",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]",
              "components": [
                {
                  "name": "token",
                  "type": "address",
                  "internalType": "contract IERC20"
                },
                {
                  "name": "cumulativeEarnings",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        },
        { "name": "recipient", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "processClaims",
      "inputs": [
        {
          "name": "claims",
          "type": "tuple[]",
          "internalType": "struct IRewardsCoordinatorTypes.RewardsMerkleClaim[]",
          "components": [
            { "name": "rootIndex", "type": "uint32", "internalType": "uint32" },
            {
              "name": "earnerIndex",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "earnerTreeProof",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "earnerLeaf",
              "type": "tuple",
              "internalType": "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
              "components": [
                {
                  "name": "earner",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "earnerTokenRoot",
                  "type": "bytes32",
                  "internalType": "bytes32"
                }
              ]
            },
            {
              "name": "tokenIndices",
              "type": "uint32[]",
              "internalType": "uint32[]"
            },
            {
              "name": "tokenTreeProofs",
              "type": "bytes[]",
              "internalType": "bytes[]"
            },
            {
              "name": "tokenLeaves",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]",
              "components": [
                {
                  "name": "token",
                  "type": "address",
                  "internalType": "contract IERC20"
                },
                {
                  "name": "cumulativeEarnings",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        },
        { "name": "recipient", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "rewardsUpdater",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setActivationDelay",
      "inputs": [
        {
          "name": "_activationDelay",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setClaimerFor",
      "inputs": [
        { "name": "claimer", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setClaimerFor",
      "inputs": [
        { "name": "earner", "type": "address", "internalType": "address" },
        { "name": "claimer", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setDefaultOperatorSplit",
      "inputs": [
        { "name": "split", "type": "uint16", "internalType": "uint16" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setOperatorAVSSplit",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "avs", "type": "address", "internalType": "address" },
        { "name": "split", "type": "uint16", "internalType": "uint16" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setOperatorPISplit",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "split", "type": "uint16", "internalType": "uint16" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setOperatorSetSplit",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            { "name": "avs", "type": "address", "internalType": "address" },
            { "name": "id", "type": "uint32", "internalType": "uint32" }
          ]
        },
        { "name": "split", "type": "uint16", "internalType": "uint16" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRewardsForAllSubmitter",
      "inputs": [
        { "name": "_submitter", "type": "address", "internalType": "address" },
        { "name": "_newValue", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRewardsUpdater",
      "inputs": [
        {
          "name": "_rewardsUpdater",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "strategyManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IStrategyManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "submissionNonce",
      "inputs": [
        { "name": "avs", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "nonce", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "submitRoot",
      "inputs": [
        { "name": "root", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "rewardsCalculationEndTimestamp",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AVSRewardsSubmissionCreated",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "submissionNonce",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "rewardsSubmissionHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "rewardsSubmission",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            { "name": "duration", "type": "uint32", "internalType": "uint32" }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ActivationDelaySet",
      "inputs": [
        {
          "name": "oldActivationDelay",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        },
        {
          "name": "newActivationDelay",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClaimerForSet",
      "inputs": [
        {
          "name": "earner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "oldClaimer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "claimer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DefaultOperatorSplitBipsSet",
      "inputs": [
        {
          "name": "oldDefaultOperatorSplitBips",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        },
        {
          "name": "newDefaultOperatorSplitBips",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DistributionRootDisabled",
      "inputs": [
        {
          "name": "rootIndex",
          "type": "uint32",
          "indexed": true,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DistributionRootSubmitted",
      "inputs": [
        {
          "name": "rootIndex",
          "type": "uint32",
          "indexed": true,
          "internalType": "uint32"
        },
        {
          "name": "root",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "rewardsCalculationEndTimestamp",
          "type": "uint32",
          "indexed": true,
          "internalType": "uint32"
        },
        {
          "name": "activatedAt",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorAVSSplitBipsSet",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "avs",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "activatedAt",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        },
        {
          "name": "oldOperatorAVSSplitBips",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        },
        {
          "name": "newOperatorAVSSplitBips",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorDirectedAVSRewardsSubmissionCreated",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "avs",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operatorDirectedRewardsSubmissionHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "submissionNonce",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "operatorDirectedRewardsSubmission",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            {
              "name": "operatorRewards",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.OperatorReward[]",
              "components": [
                {
                  "name": "operator",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            { "name": "duration", "type": "uint32", "internalType": "uint32" },
            {
              "name": "description",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorDirectedOperatorSetRewardsSubmissionCreated",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operatorDirectedRewardsSubmissionHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            { "name": "avs", "type": "address", "internalType": "address" },
            { "name": "id", "type": "uint32", "internalType": "uint32" }
          ]
        },
        {
          "name": "submissionNonce",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "operatorDirectedRewardsSubmission",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            {
              "name": "operatorRewards",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.OperatorReward[]",
              "components": [
                {
                  "name": "operator",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            { "name": "duration", "type": "uint32", "internalType": "uint32" },
            {
              "name": "description",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorPISplitBipsSet",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "activatedAt",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        },
        {
          "name": "oldOperatorPISplitBips",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        },
        {
          "name": "newOperatorPISplitBips",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSetSplitBipsSet",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            { "name": "avs", "type": "address", "internalType": "address" },
            { "name": "id", "type": "uint32", "internalType": "uint32" }
          ]
        },
        {
          "name": "activatedAt",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        },
        {
          "name": "oldOperatorSetSplitBips",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        },
        {
          "name": "newOperatorSetSplitBips",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardsClaimed",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "earner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "claimer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "recipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "token",
          "type": "address",
          "indexed": false,
          "internalType": "contract IERC20"
        },
        {
          "name": "claimedAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardsForAllSubmitterSet",
      "inputs": [
        {
          "name": "rewardsForAllSubmitter",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "oldValue",
          "type": "bool",
          "indexed": true,
          "internalType": "bool"
        },
        {
          "name": "newValue",
          "type": "bool",
          "indexed": true,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardsSubmissionForAllCreated",
      "inputs": [
        {
          "name": "submitter",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "submissionNonce",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "rewardsSubmissionHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "rewardsSubmission",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            { "name": "duration", "type": "uint32", "internalType": "uint32" }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardsSubmissionForAllEarnersCreated",
      "inputs": [
        {
          "name": "tokenHopper",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "submissionNonce",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "rewardsSubmissionHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "rewardsSubmission",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission",
          "components": [
            {
              "name": "strategiesAndMultipliers",
              "type": "tuple[]",
              "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
              "components": [
                {
                  "name": "strategy",
                  "type": "address",
                  "internalType": "contract IStrategy"
                },
                {
                  "name": "multiplier",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            {
              "name": "startTimestamp",
              "type": "uint32",
              "internalType": "uint32"
            },
            { "name": "duration", "type": "uint32", "internalType": "uint32" }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardsUpdaterSet",
      "inputs": [
        {
          "name": "oldRewardsUpdater",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newRewardsUpdater",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "AmountExceedsMax", "inputs": [] },
    { "type": "error", "name": "AmountIsZero", "inputs": [] },
    { "type": "error", "name": "CurrentlyPaused", "inputs": [] },
    { "type": "error", "name": "DurationExceedsMax", "inputs": [] },
    { "type": "error", "name": "DurationIsZero", "inputs": [] },
    { "type": "error", "name": "EarningsNotGreaterThanClaimed", "inputs": [] },
    { "type": "error", "name": "InputAddressZero", "inputs": [] },
    { "type": "error", "name": "InputArrayLengthMismatch", "inputs": [] },
    { "type": "error", "name": "InputArrayLengthZero", "inputs": [] },
    { "type": "error", "name": "InvalidAddressZero", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidCalculationIntervalSecondsRemainder",
      "inputs": []
    },
    { "type": "error", "name": "InvalidClaimProof", "inputs": [] },
    { "type": "error", "name": "InvalidDurationRemainder", "inputs": [] },
    { "type": "error", "name": "InvalidEarner", "inputs": [] },
    { "type": "error", "name": "InvalidEarnerLeafIndex", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidGenesisRewardsTimestampRemainder",
      "inputs": []
    },
    { "type": "error", "name": "InvalidNewPausedStatus", "inputs": [] },
    { "type": "error", "name": "InvalidOperatorSet", "inputs": [] },
    { "type": "error", "name": "InvalidPermissions", "inputs": [] },
    { "type": "error", "name": "InvalidProofLength", "inputs": [] },
    { "type": "error", "name": "InvalidRoot", "inputs": [] },
    { "type": "error", "name": "InvalidRootIndex", "inputs": [] },
    { "type": "error", "name": "InvalidShortString", "inputs": [] },
    { "type": "error", "name": "InvalidStartTimestampRemainder", "inputs": [] },
    { "type": "error", "name": "InvalidTokenLeafIndex", "inputs": [] },
    {
      "type": "error",
      "name": "NewRootMustBeForNewCalculatedPeriod",
      "inputs": []
    },
    { "type": "error", "name": "OnlyPauser", "inputs": [] },
    { "type": "error", "name": "OnlyUnpauser", "inputs": [] },
    { "type": "error", "name": "OperatorsNotInAscendingOrder", "inputs": [] },
    { "type": "error", "name": "PreviousSplitPending", "inputs": [] },
    { "type": "error", "name": "RewardsEndTimestampNotElapsed", "inputs": [] },
    { "type": "error", "name": "RootAlreadyActivated", "inputs": [] },
    { "type": "error", "name": "RootDisabled", "inputs": [] },
    { "type": "error", "name": "RootNotActivated", "inputs": [] },
    { "type": "error", "name": "SplitExceedsMax", "inputs": [] },
    { "type": "error", "name": "StartTimestampTooFarInFuture", "inputs": [] },
    { "type": "error", "name": "StartTimestampTooFarInPast", "inputs": [] },
    { "type": "error", "name": "StrategiesNotInAscendingOrder", "inputs": [] },
    { "type": "error", "name": "StrategyNotWhitelisted", "inputs": [] },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [{ "name": "str", "type": "string", "internalType": "string" }]
    },
    { "type": "error", "name": "SubmissionNotRetroactive", "inputs": [] },
    { "type": "error", "name": "UnauthorizedCaller", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x6101e0604052348015610010575f5ffd5b50604051614b90380380614b9083398101604081905261002f9161034a565b610140810151608082015182516020840151604085015160a086015160c087015160e08801516101008901516101208a015160608b01516001600160a01b03811661008d576040516339b190bb60e11b815260040160405180910390fd5b6001600160a01b03166080526100a38582610465565b63ffffffff16156100c757604051630e06bd3160e01b815260040160405180910390fd5b6100d46201518086610465565b63ffffffff16156100f85760405163223c7b3960e11b815260040160405180910390fd5b6001600160a01b0397881660a05295871660c05293861660e05263ffffffff9283166101005290821661012052811661014052908116610160521661018052166101a05261014581610158565b6101c0525061015261019e565b506104f3565b5f5f829050601f8151111561018b578260405163305a27a960e01b81526004016101829190610498565b60405180910390fd5b8051610196826104cd565b179392505050565b5f54610100900460ff16156102055760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608401610182565b5f5460ff90811614610254575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b634e487b7160e01b5f52604160045260245ffd5b60405161016081016001600160401b038111828210171561028d5761028d610256565b60405290565b80516001600160a01b03811681146102a9575f5ffd5b919050565b805163ffffffff811681146102a9575f5ffd5b5f82601f8301126102d0575f5ffd5b81516001600160401b038111156102e9576102e9610256565b604051601f8201601f19908116603f011681016001600160401b038111828210171561031757610317610256565b60405281815283820160200185101561032e575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f6020828403121561035a575f5ffd5b81516001600160401b0381111561036f575f5ffd5b82016101608185031215610381575f5ffd5b61038961026a565b61039282610293565b81526103a060208301610293565b60208201526103b160408301610293565b60408201526103c260608301610293565b60608201526103d360808301610293565b60808201526103e460a083016102ae565b60a08201526103f560c083016102ae565b60c082015261040660e083016102ae565b60e082015261041861010083016102ae565b61010082015261042b61012083016102ae565b6101208201526101408201516001600160401b0381111561044a575f5ffd5b610456868285016102c1565b61014083015250949350505050565b5f63ffffffff83168061048657634e487b7160e01b5f52601260045260245ffd5b8063ffffffff84160691505092915050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156104ed575f198160200360031b1b821691505b50919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516145c26105ce5f395f61138701525f81816105f001526124b301525f81816104a4015261341101525f81816103f3015261299801525f818161055201526133cf01525f818161087e01526132b901525f81816107bf01528181613309015261337d01525f81816108d201528181610adc01528181611bff0152611e8c01525f818161057901526134ac01525f81816109450152611b6f01525f81816107510152818161283d01526131ea01526145c25ff3fe608060405234801561000f575f5ffd5b50600436106103b3575f3560e01c8063886f1195116101f5578063de02e50311610114578063f6efbb59116100a9578063fabc1cbc11610079578063fabc1cbc14610a33578063fbf1e2c114610a46578063fce36c7d14610a59578063ff9f6cce14610a6c575f5ffd5b8063f6efbb59146109e7578063f74e8eac146109fa578063f8cd844814610a0d578063f96abf2e14610a20575f5ffd5b8063ed71e6a2116100e4578063ed71e6a214610967578063f22cef8514610994578063f2f07ab4146109a7578063f2fde38b146109d4575f5ffd5b8063de02e50314610907578063e063f81f1461091a578063e810ce211461092d578063ea4d3c9b14610940575f5ffd5b8063a50a1d9c1161018a578063bf21a8aa1161015a578063bf21a8aa14610879578063c46db606146108a0578063ca8aa7c7146108cd578063dcbb03b3146108f4575f5ffd5b8063a50a1d9c14610807578063aebd8bae1461081a578063b3dbb0e014610847578063bb7e451f1461085a575f5ffd5b80639cb9a5fa116101c55780639cb9a5fa146107a75780639d45c281146107ba5780639de4b35f146107e1578063a0169ddd146107f4575f5ffd5b8063886f11951461074c5780638da5cb5b146107735780639104c319146107845780639be3d4e41461079f575f5ffd5b80634596021c116102e15780635c975abb11610276578063715018a611610246578063715018a6146106ff5780637b8f8b0514610707578063863cb9a91461070f578063865c695314610722575f5ffd5b80635c975abb146106a25780635e9d8348146106aa57806363f6a798146106bd5780636d21117e146106d2575f5ffd5b806354fd4d50116102b157806354fd4d501461064f57806358baaa3e14610664578063595c6a67146106775780635ac86ab71461067f575f5ffd5b80634596021c146105d85780634657e26a146105eb5780634b943960146106125780634d18cc3514610638575f5ffd5b8063149bc8721161035757806339b70e381161032757806339b70e38146105745780633a8c07861461059b5780633ccc861d146105b25780633efe1db6146105c5575f5ffd5b8063149bc872146104d95780632b9f64a4146104fa57806336af41fa1461053a57806337838ed01461054d575f5ffd5b80630e9a53cf116103925780630e9a53cf1461043f5780630eb383451461048c578063131433b41461049f578063136439dd146104c6575f5ffd5b806218572c146103b757806304a0c502146103ee5780630ca298991461042a575b5f5ffd5b6103d96103c53660046139ef565b60d16020525f908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6104157f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016103e5565b61043d610438366004613a67565b610a7f565b005b610447610d25565b6040516103e591905f6080820190508251825263ffffffff602084015116602083015263ffffffff604084015116604083015260608301511515606083015292915050565b61043d61049a366004613ac3565b610e25565b6104157f000000000000000000000000000000000000000000000000000000000000000081565b61043d6104d4366004613afa565b610ea5565b6104ec6104e7366004613b11565b610edf565b6040519081526020016103e5565b6105226105083660046139ef565b60cc6020525f90815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016103e5565b61043d610548366004613b2b565b610f54565b6104157f000000000000000000000000000000000000000000000000000000000000000081565b6105227f000000000000000000000000000000000000000000000000000000000000000081565b60cb5461041590600160a01b900463ffffffff1681565b61043d6105c0366004613b7a565b6110c5565b61043d6105d3366004613bd0565b6110ec565b61043d6105e6366004613bfa565b6112c2565b6105227f000000000000000000000000000000000000000000000000000000000000000081565b6106256106203660046139ef565b611325565b60405161ffff90911681526020016103e5565b60cb5461041590600160c01b900463ffffffff1681565b610657611380565b6040516103e59190613c4c565b61043d610672366004613c81565b6113b0565b61043d6113c4565b6103d961068d366004613c9a565b606654600160ff9092169190911b9081161490565b6066546104ec565b6103d96106b8366004613cba565b6113d8565b60cb5461062590600160e01b900461ffff1681565b6103d96106e0366004613ceb565b60cf60209081525f928352604080842090915290825290205460ff1681565b61043d611463565b60ca546104ec565b61043d61071d3660046139ef565b611474565b6104ec610730366004613d15565b60cd60209081525f928352604080842090915290825290205481565b6105227f000000000000000000000000000000000000000000000000000000000000000081565b6033546001600160a01b0316610522565b61052273beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081565b610447611485565b61043d6107b5366004613d41565b611521565b6104157f000000000000000000000000000000000000000000000000000000000000000081565b6106256107ef366004613d78565b61169c565b61043d6108023660046139ef565b61171f565b61043d610815366004613db4565b61172a565b6103d9610828366004613ceb565b60d260209081525f928352604080842090915290825290205460ff1681565b61043d610855366004613dcd565b61173b565b6104ec6108683660046139ef565b60ce6020525f908152604090205481565b6104157f000000000000000000000000000000000000000000000000000000000000000081565b6103d96108ae366004613ceb565b60d060209081525f928352604080842090915290825290205460ff1681565b6105227f000000000000000000000000000000000000000000000000000000000000000081565b61043d610902366004613df7565b611866565b610447610915366004613afa565b6119b3565b610625610928366004613d15565b611a43565b61041561093b366004613afa565b611aa8565b6105227f000000000000000000000000000000000000000000000000000000000000000081565b6103d9610975366004613ceb565b60d360209081525f928352604080842090915290825290205460ff1681565b61043d6109a2366004613d15565b611b29565b6103d96109b5366004613ceb565b60d760209081525f928352604080842090915290825290205460ff1681565b61043d6109e23660046139ef565b611c93565b61043d6109f5366004613e3b565b611d0e565b61043d610a08366004613e99565b611e43565b6104ec610a1b366004613b11565b61200a565b61043d610a2e366004613c81565b61201a565b61043d610a41366004613afa565b61214b565b60cb54610522906001600160a01b031681565b61043d610a67366004613b2b565b6121b8565b61043d610a7a366004613b2b565b6122e9565b6009610a8a8161244a565b610a9760208501856139ef565b610aa081612475565b610abd5760405163932d94f760e01b815260040160405180910390fd5b610ac561251f565b6040516304c1b8eb60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063260dc75890610b11908890600401613f04565b602060405180830381865afa158015610b2c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b509190613f12565b610b6d57604051631fb1705560e21b815260040160405180910390fd5b5f5b83811015610d135736858583818110610b8a57610b8a613f2d565b9050602002810190610b9c9190613f41565b90505f60ce81610baf60208b018b6139ef565b6001600160a01b031681526020808201929092526040015f90812054925090610bda908a018a6139ef565b8284604051602001610bee93929190614169565b6040516020818303038152906040528051906020012090505f610c1084612578565b9050600160d75f610c2460208e018e6139ef565b6001600160a01b0316815260208082019290925260409081015f9081208682529092529020805460ff1916911515919091179055610c638360016141ac565b60ce5f610c7360208e018e6139ef565b6001600160a01b03166001600160a01b031681526020019081526020015f208190555081336001600160a01b03167ffff0759ccb371dfb5691798724e70b4fa61cb3bfe730a33ac19fb86a48efc7568c8688604051610cd4939291906141bf565b60405180910390a3610d03333083610cf26040890160208a016139ef565b6001600160a01b0316929190612763565b505060019092019150610b6f9050565b50610d1e6001609755565b5050505050565b604080516080810182525f80825260208201819052918101829052606081019190915260ca545b8015610dfd575f60ca610d606001846141e4565b81548110610d7057610d70613f2d565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff161580156060830181905291925090610ddf5750806040015163ffffffff164210155b15610dea5792915050565b5080610df5816141f7565b915050610d4c565b5050604080516080810182525f80825260208201819052918101829052606081019190915290565b610e2d6127ce565b6001600160a01b0382165f81815260d1602052604080822054905160ff9091169284151592841515927f4de6293e668df1398422e1def12118052c1539a03cbfedc145895d48d7685f1c9190a4506001600160a01b03919091165f90815260d160205260409020805460ff1916911515919091179055565b610ead612828565b6066548181168114610ed25760405163c61dca5d60e01b815260040160405180910390fd5b610edb826128cb565b5050565b5f80610eee60208401846139ef565b8360200135604051602001610f379392919060f89390931b6001600160f81b031916835260609190911b6bffffffffffffffffffffffff19166001830152601582015260350190565b604051602081830303815290604052805190602001209050919050565b6001610f5f8161244a565b335f90815260d1602052604090205460ff16610f8e57604051635c427cd960e01b815260040160405180910390fd5b610f9661251f565b5f5b828110156110b55736848483818110610fb357610fb3613f2d565b9050602002810190610fc5919061420c565b335f81815260ce60209081526040808320549051949550939192610fef929091859187910161429e565b60405160208183030381529060405280519060200120905061101083612908565b335f90815260d0602090815260408083208484529091529020805460ff191660019081179091556110429083906141ac565b335f81815260ce602052604090819020929092559051829184917f51088b8c89628df3a8174002c2a034d0152fce6af8415d651b2a4734bf270482906110899088906142c4565b60405180910390a46110aa333060408601803590610cf290602089016139ef565b505050600101610f98565b506110c06001609755565b505050565b60026110d08161244a565b6110d861251f565b6110e283836129f3565b6110c06001609755565b60036110f78161244a565b60cb546001600160a01b0316331461112257604051635c427cd960e01b815260040160405180910390fd5b60cb5463ffffffff600160c01b90910481169083161161115557604051631ca7e50b60e21b815260040160405180910390fd5b428263ffffffff161061117b576040516306957c9160e11b815260040160405180910390fd5b60ca5460cb545f9061119a90600160a01b900463ffffffff16426142d6565b6040805160808101825287815263ffffffff87811660208084018281528684168587018181525f6060880181815260ca8054600181018255925297517f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee160029092029182015592517f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee290930180549151975193871667ffffffffffffffff1990921691909117600160201b978716979097029690961760ff60401b1916600160401b921515929092029190911790945560cb805463ffffffff60c01b1916600160c01b840217905593519283529394508892908616917fecd866c3c158fa00bf34d803d5f6023000b57080bcb48af004c2b4b46b3afd08910160405180910390a45050505050565b60026112cd8161244a565b6112d561251f565b5f5b838110156113145761130c8585838181106112f4576112f4613f2d565b905060200281019061130691906142f2565b846129f3565b6001016112d7565b5061131f6001609755565b50505050565b6001600160a01b0381165f90815260d5602090815260408083208151606081018352905461ffff80821683526201000082041693820193909352600160201b90920463ffffffff169082015261137a90612c7b565b92915050565b60606113ab7f0000000000000000000000000000000000000000000000000000000000000000612ceb565b905090565b6113b86127ce565b6113c181612d28565b50565b6113cc612828565b6113d65f196128cb565b565b5f61145b8260ca6113ec6020830183613c81565b63ffffffff168154811061140257611402613f2d565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff1615156060820152612d99565b506001919050565b61146b6127ce565b6113d65f612f3c565b61147c6127ce565b6113c181612f8d565b604080516080810182525f80825260208201819052918101829052606081019190915260ca80546114b8906001906141e4565b815481106114c8576114c8613f2d565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff1615156060820152919050565b600561152c8161244a565b8361153681612475565b6115535760405163932d94f760e01b815260040160405180910390fd5b61155b61251f565b5f5b83811015610d13573685858381811061157857611578613f2d565b905060200281019061158a9190613f41565b6001600160a01b0388165f90815260ce60209081526040808320549051939450926115bb918b918591879101614169565b6040516020818303038152906040528051906020012090505f6115dd84612578565b6001600160a01b038b165f90815260d3602090815260408083208684529091529020805460ff1916600190811790915590915061161b9084906141ac565b6001600160a01b038b165f81815260ce60205260409081902092909255905183919033907ffc8888bffd711da60bc5092b33f677d81896fe80ecc677b84cfab8184462b6e09061166e9088908a90614306565b60405180910390a461168c333083610cf26040890160208a016139ef565b50506001909201915061155d9050565b6001600160a01b0382165f90815260d66020526040812061171890826116cf6116ca3687900387018761431e565b612fe8565b815260208082019290925260409081015f208151606081018352905461ffff80821683526201000082041693820193909352600160201b90920463ffffffff1690820152612c7b565b9392505050565b33610edb818361304b565b6117326127ce565b6113c1816130ae565b60076117468161244a565b8261175081612475565b61176d5760405163932d94f760e01b815260040160405180910390fd5b60cb545f9061178990600160a01b900463ffffffff16426142d6565b6001600160a01b0386165f90815260d5602090815260408083208151606081018352905461ffff80821683526201000082041693820193909352600160201b90920463ffffffff1690820152919250906117e290612c7b565b6001600160a01b0387165f90815260d560205260409020909150611807908684613119565b6040805163ffffffff8416815261ffff838116602083015287168183015290516001600160a01b0388169133917fd1e028bd664486a46ad26040e999cd2d22e1e9a094ee6afe19fcf64678f16f749181900360600190a3505050505050565b60066118718161244a565b8361187b81612475565b6118985760405163932d94f760e01b815260040160405180910390fd5b60cb545f906118b490600160a01b900463ffffffff16426142d6565b6001600160a01b038781165f90815260d460209081526040808320938a1683529281528282208351606081018552905461ffff80821683526201000082041692820192909252600160201b90910463ffffffff169281019290925291925061191b90612c7b565b6001600160a01b038089165f90815260d460209081526040808320938b1683529290522090915061194d908684613119565b6040805163ffffffff8416815261ffff838116602083015287168183015290516001600160a01b0388811692908a169133917f48e198b6ae357e529204ee53a8e514c470ff77d9cc8e4f7207f8b5d490ae6934919081900360600190a450505050505050565b604080516080810182525f80825260208201819052918101829052606081019190915260ca82815481106119e9576119e9613f2d565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff161515606082015292915050565b6001600160a01b038281165f90815260d46020908152604080832093851683529281528282208351606081018552905461ffff80821683526201000082041692820192909252600160201b90910463ffffffff16928101929092529061171890612c7b565b60ca545f905b63ffffffff811615611b0f578260ca611ac8600184614386565b63ffffffff1681548110611ade57611ade613f2d565b905f5260205f2090600202015f015403611afd57611718600182614386565b80611b07816143a2565b915050611aae565b5060405163504570e360e01b815260040160405180910390fd5b81611b3381612475565b611b505760405163932d94f760e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0384811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015611bb4573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611bd89190613f12565b80611c6c575060405163ba1a84e560e01b81526001600160a01b0384811660048301525f917f00000000000000000000000000000000000000000000000000000000000000009091169063ba1a84e590602401602060405180830381865afa158015611c46573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c6a91906143c0565b115b611c895760405163fb494ea160e01b815260040160405180910390fd5b6110c0838361304b565b611c9b6127ce565b6001600160a01b038116611d055760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6113c181612f3c565b5f54610100900460ff1615808015611d2c57505f54600160ff909116105b80611d455750303b158015611d4557505f5460ff166001145b611da85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401611cfc565b5f805460ff191660011790558015611dc9575f805461ff0019166101001790555b611dd2856128cb565b611ddb86612f3c565b611de484612f8d565b611ded83612d28565b611df6826130ae565b8015611e3b575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6008611e4e8161244a565b83611e5881612475565b611e755760405163932d94f760e01b815260040160405180910390fd5b6040516304c1b8eb60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063260dc75890611ec1908790600401613f04565b602060405180830381865afa158015611edc573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f009190613f12565b611f1d57604051631fb1705560e21b815260040160405180910390fd5b60cb545f90611f3990600160a01b900463ffffffff16426142d6565b6001600160a01b0387165f90815260d66020526040812091925090611f6b90826116cf6116ca368b90038b018b61431e565b6001600160a01b0388165f90815260d660205260408120919250611fb09190611f9c6116ca368b90038b018b61431e565b81526020019081526020015f208684613119565b866001600160a01b0316336001600160a01b03167f14918b3834ab6752eb2e1b489b6663a67810efb5f56f3944a97ede8ecf1fd9f18885858a604051611ff994939291906143d7565b60405180910390a350505050505050565b5f6001610eee60208401846139ef565b60036120258161244a565b60cb546001600160a01b0316331461205057604051635c427cd960e01b815260040160405180910390fd5b60ca5463ffffffff831610612078576040516394a8d38960e01b815260040160405180910390fd5b5f60ca8363ffffffff168154811061209257612092613f2d565b905f5260205f20906002020190508060010160089054906101000a900460ff16156120d057604051631b14174b60e01b815260040160405180910390fd5b6001810154600160201b900463ffffffff16421061210157604051630c36f66560e21b815260040160405180910390fd5b60018101805460ff60401b1916600160401b17905560405163ffffffff8416907fd850e6e5dfa497b72661fa73df2923464eaed9dc2ff1d3cb82bccbfeabe5c41e905f90a2505050565b6121536131e8565b6066548019821981161461217a5760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b5f6121c28161244a565b6121ca61251f565b5f5b828110156110b557368484838181106121e7576121e7613f2d565b90506020028101906121f9919061420c565b335f81815260ce60209081526040808320549051949550939192612223929091859187910161429e565b60405160208183030381529060405280519060200120905061224483612908565b335f90815260cf602090815260408083208484529091529020805460ff191660019081179091556122769083906141ac565b335f81815260ce602052604090819020929092559051829184917f450a367a380c4e339e5ae7340c8464ef27af7781ad9945cfe8abd828f89e6281906122bd9088906142c4565b60405180910390a46122de333060408601803590610cf290602089016139ef565b5050506001016121cc565b60046122f48161244a565b335f90815260d1602052604090205460ff1661232357604051635c427cd960e01b815260040160405180910390fd5b61232b61251f565b5f5b828110156110b5573684848381811061234857612348613f2d565b905060200281019061235a919061420c565b335f81815260ce60209081526040808320549051949550939192612384929091859187910161429e565b6040516020818303038152906040528051906020012090506123a583612908565b335f90815260d2602090815260408083208484529091529020805460ff191660019081179091556123d79083906141ac565b335f81815260ce602052604090819020929092559051829184917f5251b6fdefcb5d81144e735f69ea4c695fd43b0289ca53dc075033f5fc80068b9061241e9088906142c4565b60405180910390a461243f333060408601803590610cf290602089016139ef565b50505060010161232d565b606654600160ff83161b908116036113c15760405163840a48d560e01b815260040160405180910390fd5b604051631beb2b9760e31b81526001600160a01b0382811660048301523360248301523060448301525f80356001600160e01b0319166064840152917f00000000000000000000000000000000000000000000000000000000000000009091169063df595cb8906084016020604051808303815f875af11580156124fb573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061137a9190613f12565b6002609754036125715760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401611cfc565b6002609755565b5f6125ab612586838061440b565b6125966080860160608701613c81565b6125a660a0870160808801613c81565b613299565b5f6125b9604084018461440b565b9050116125d95760405163796cc52560e01b815260040160405180910390fd5b426125ea60a0840160808501613c81565b6125fa6080850160608601613c81565b61260491906142d6565b63ffffffff16106126285760405163150358a160e21b815260040160405180910390fd5b5f80805b612639604086018661440b565b905081101561272a5736612650604087018761440b565b8381811061266057612660613f2d565b6040029190910191505f905061267960208301836139ef565b6001600160a01b0316036126a057604051630863a45360e11b815260040160405180910390fd5b6126ad60208201826139ef565b6001600160a01b0316836001600160a01b0316106126de576040516310fb47f160e31b815260040160405180910390fd5b5f816020013511612702576040516310eb483f60e21b815260040160405180910390fd5b61270f60208201826139ef565b925061271f6020820135856141ac565b93505060010161262c565b506f4b3b4ca85a86c47a098a223fffffffff82111561275c5760405163070b5a6f60e21b815260040160405180910390fd5b5092915050565b6040516001600160a01b038085166024830152831660448201526064810182905261131f9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613597565b6033546001600160a01b031633146113d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611cfc565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa15801561288a573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906128ae9190613f12565b6113d657604051631d77d47760e21b815260040160405180910390fd5b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b612935612915828061440b565b6129256080850160608601613c81565b6125a660a0860160808701613c81565b5f816040013511612959576040516310eb483f60e21b815260040160405180910390fd5b6f4b3b4ca85a86c47a098a223fffffffff8160400135111561298e5760405163070b5a6f60e21b815260040160405180910390fd5b6129be63ffffffff7f000000000000000000000000000000000000000000000000000000000000000016426141ac565b6129ce6080830160608401613c81565b63ffffffff1611156113c157604051637ee2b44360e01b815260040160405180910390fd5b5f60ca612a036020850185613c81565b63ffffffff1681548110612a1957612a19613f2d565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff16151560608201529050612a798382612d99565b5f612a8a60808501606086016139ef565b6001600160a01b038082165f90815260cc60205260409020549192501680612aaf5750805b336001600160a01b03821614612ad857604051635c427cd960e01b815260040160405180910390fd5b5f5b612ae760a0870187614450565b9050811015611e3b5736612afe60e088018861440b565b83818110612b0e57612b0e613f2d565b6001600160a01b0387165f90815260cd602090815260408083209302949094019450929091508290612b42908501856139ef565b6001600160a01b03166001600160a01b031681526020019081526020015f2054905080826020013511612b885760405163aa385e8160e01b815260040160405180910390fd5b5f612b978260208501356141e4565b6001600160a01b0387165f90815260cd60209081526040822092935085018035929190612bc490876139ef565b6001600160a01b031681526020808201929092526040015f2091909155612c059089908390612bf5908701876139ef565b6001600160a01b0316919061366a565b86516001600160a01b03808a1691878216918916907f9543dbd55580842586a951f0386e24d68a5df99ae29e3b216588b45fd684ce3190612c4960208901896139ef565b604080519283526001600160a01b039091166020830152810186905260600160405180910390a4505050600101612ada565b5f816040015163ffffffff165f1480612cad5750815161ffff908116148015612cad5750816040015163ffffffff1642105b15612cc557505060cb54600160e01b900461ffff1690565b816040015163ffffffff16421015612cde57815161137a565b506020015190565b919050565b60605f612cf78361369a565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b60cb546040805163ffffffff600160a01b9093048316815291831660208301527faf557c6c02c208794817a705609cfa935f827312a1adfdd26494b6b95dd2b4b3910160405180910390a160cb805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b806060015115612dbc57604051631b14174b60e01b815260040160405180910390fd5b806040015163ffffffff16421015612de757604051631437a2bb60e31b815260040160405180910390fd5b612df460c0830183614450565b9050612e0360a0840184614450565b905014612e23576040516343714afd60e01b815260040160405180910390fd5b612e3060e083018361440b565b9050612e3f60c0840184614450565b905014612e5f576040516343714afd60e01b815260040160405180910390fd5b8051612e8b90612e756040850160208601613c81565b612e826040860186614495565b866060016136c1565b5f5b612e9a60a0840184614450565b90508110156110c057612f346080840135612eb860a0860186614450565b84818110612ec857612ec8613f2d565b9050602002016020810190612edd9190613c81565b612eea60c0870187614450565b85818110612efa57612efa613f2d565b9050602002810190612f0c9190614495565b612f1960e089018961440b565b87818110612f2957612f29613f2d565b905060400201613765565b600101612e8d565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b60cb546040516001600160a01b038084169216907f237b82f438d75fc568ebab484b75b01d9287b9e98b490b7c23221623b6705dbb905f90a360cb80546001600160a01b0319166001600160a01b0392909216919091179055565b5f815f0151826020015163ffffffff1660405160200161303392919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b60405160208183030381529060405261137a906144d7565b6001600160a01b038083165f81815260cc602052604080822080548686166001600160a01b0319821681179092559151919094169392849290917fbab947934d42e0ad206f25c9cab18b5bb6ae144acfb00f40b4e3aa59590ca3129190a4505050565b60cb546040805161ffff600160e01b9093048316815291831660208301527fe6cd4edfdcc1f6d130ab35f73d72378f3a642944fb4ee5bd84b7807a81ea1c4e910160405180910390a160cb805461ffff909216600160e01b0261ffff60e01b19909216919091179055565b61271061ffff831611156131405760405163891c63df60e01b815260040160405180910390fd5b8254600160201b900463ffffffff16421161316e57604051637b1e25c560e01b815260040160405180910390fd5b8254600160201b900463ffffffff165f0361319557825461ffff191661ffff1783556131ac565b825462010000810461ffff1661ffff199091161783555b825463ffffffff909116600160201b0267ffffffff000000001961ffff90931662010000029290921667ffffffffffff00001990911617179055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613244573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061326891906144fa565b6001600160a01b0316336001600160a01b0316146113d65760405163794821ff60e01b815260040160405180910390fd5b826132b75760405163796cc52560e01b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff16111561330457604051630dd0b9f560e21b815260040160405180910390fd5b61332e7f000000000000000000000000000000000000000000000000000000000000000082614529565b63ffffffff16156133525760405163ee66470560e01b815260040160405180910390fd5b5f8163ffffffff16116133785760405163cb3f434d60e01b815260040160405180910390fd5b6133a27f000000000000000000000000000000000000000000000000000000000000000083614529565b63ffffffff16156133c657604051633c1a94f160e21b815260040160405180910390fd5b8163ffffffff167f000000000000000000000000000000000000000000000000000000000000000063ffffffff16426133ff91906141e4565b1115801561343957508163ffffffff167f000000000000000000000000000000000000000000000000000000000000000063ffffffff1611155b6134565760405163041aa75760e11b815260040160405180910390fd5b5f805b84811015611e3b575f86868381811061347457613474613f2d565b61348a92602060409092020190810191506139ef565b60405163198f077960e21b81526001600160a01b0380831660048301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063663c1de490602401602060405180830381865afa1580156134f3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906135179190613f12565b8061353e57506001600160a01b03811673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0145b61355b57604051632efd965160e11b815260040160405180910390fd5b806001600160a01b0316836001600160a01b03161061358d5760405163dfad9ca160e01b815260040160405180910390fd5b9150600101613459565b5f6135eb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166137a39092919063ffffffff16565b905080515f148061360b57508080602001905181019061360b9190613f12565b6110c05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401611cfc565b6040516001600160a01b0383166024820152604481018290526110c090849063a9059cbb60e01b90606401612797565b5f60ff8216601f81111561137a57604051632cd44ac360e21b815260040160405180910390fd5b6136cc602083614550565b6001901b8463ffffffff16106136f45760405162c6c39d60e71b815260040160405180910390fd5b5f6136fe82610edf565b905061374884848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508a92508591505063ffffffff89166137b9565b611e3b576040516369ca16c960e01b815260040160405180910390fd5b613770602083614550565b6001901b8463ffffffff16106137995760405163054ff4df60e51b815260040160405180910390fd5b5f6136fe8261200a565b60606137b184845f856137d0565b949350505050565b5f836137c68685856138a7565b1495945050505050565b6060824710156138315760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401611cfc565b5f5f866001600160a01b0316858760405161384c9190614563565b5f6040518083038185875af1925050503d805f8114613886576040519150601f19603f3d011682016040523d82523d5f602084013e61388b565b606091505b509150915061389c8783838761393e565b979650505050505050565b5f602084516138b69190614579565b156138d4576040516313717da960e21b815260040160405180910390fd5b8260205b85518111613935576138eb600285614579565b5f0361390c57815f528086015160205260405f209150600284049350613923565b808601515f528160205260405f2091506002840493505b61392e6020826141ac565b90506138d8565b50949350505050565b606083156139ac5782515f036139a5576001600160a01b0385163b6139a55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611cfc565b50816137b1565b6137b183838151156139c15781518083602001fd5b8060405162461bcd60e51b8152600401611cfc9190613c4c565b6001600160a01b03811681146113c1575f5ffd5b5f602082840312156139ff575f5ffd5b8135611718816139db565b5f60408284031215613a1a575f5ffd5b50919050565b5f5f83601f840112613a30575f5ffd5b5081356001600160401b03811115613a46575f5ffd5b6020830191508360208260051b8501011115613a60575f5ffd5b9250929050565b5f5f5f60608486031215613a79575f5ffd5b613a838585613a0a565b925060408401356001600160401b03811115613a9d575f5ffd5b613aa986828701613a20565b9497909650939450505050565b80151581146113c1575f5ffd5b5f5f60408385031215613ad4575f5ffd5b8235613adf816139db565b91506020830135613aef81613ab6565b809150509250929050565b5f60208284031215613b0a575f5ffd5b5035919050565b5f60408284031215613b21575f5ffd5b6117188383613a0a565b5f5f60208385031215613b3c575f5ffd5b82356001600160401b03811115613b51575f5ffd5b613b5d85828601613a20565b90969095509350505050565b5f6101008284031215613a1a575f5ffd5b5f5f60408385031215613b8b575f5ffd5b82356001600160401b03811115613ba0575f5ffd5b613bac85828601613b69565b9250506020830135613aef816139db565b803563ffffffff81168114612ce6575f5ffd5b5f5f60408385031215613be1575f5ffd5b82359150613bf160208401613bbd565b90509250929050565b5f5f5f60408486031215613c0c575f5ffd5b83356001600160401b03811115613c21575f5ffd5b613c2d86828701613a20565b9094509250506020840135613c41816139db565b809150509250925092565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f60208284031215613c91575f5ffd5b61171882613bbd565b5f60208284031215613caa575f5ffd5b813560ff81168114611718575f5ffd5b5f60208284031215613cca575f5ffd5b81356001600160401b03811115613cdf575f5ffd5b6137b184828501613b69565b5f5f60408385031215613cfc575f5ffd5b8235613d07816139db565b946020939093013593505050565b5f5f60408385031215613d26575f5ffd5b8235613d31816139db565b91506020830135613aef816139db565b5f5f5f60408486031215613d53575f5ffd5b8335613d5e816139db565b925060208401356001600160401b03811115613a9d575f5ffd5b5f5f60608385031215613d89575f5ffd5b8235613d94816139db565b9150613bf18460208501613a0a565b803561ffff81168114612ce6575f5ffd5b5f60208284031215613dc4575f5ffd5b61171882613da3565b5f5f60408385031215613dde575f5ffd5b8235613de9816139db565b9150613bf160208401613da3565b5f5f5f60608486031215613e09575f5ffd5b8335613e14816139db565b92506020840135613e24816139db565b9150613e3260408501613da3565b90509250925092565b5f5f5f5f5f60a08688031215613e4f575f5ffd5b8535613e5a816139db565b9450602086013593506040860135613e71816139db565b9250613e7f60608701613bbd565b9150613e8d60808701613da3565b90509295509295909350565b5f5f5f60808486031215613eab575f5ffd5b8335613eb6816139db565b9250613ec58560208601613a0a565b9150613e3260608501613da3565b8035613ede816139db565b6001600160a01b0316825263ffffffff613efa60208301613bbd565b1660208301525050565b6040810161137a8284613ed3565b5f60208284031215613f22575f5ffd5b815161171881613ab6565b634e487b7160e01b5f52603260045260245ffd5b5f823560be19833603018112613f55575f5ffd5b9190910192915050565b5f5f8335601e19843603018112613f74575f5ffd5b83016020810192503590506001600160401b03811115613f92575f5ffd5b8060061b3603821315613a60575f5ffd5b8183526020830192505f815f5b84811015614006578135613fc3816139db565b6001600160a01b0316865260208201356bffffffffffffffffffffffff8116808214613fed575f5ffd5b6020880152506040958601959190910190600101613fb0565b5093949350505050565b5f5f8335601e19843603018112614025575f5ffd5b83016020810192503590506001600160401b03811115614043575f5ffd5b803603821315613a60575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f6140848283613f5f565b60c0855261409660c086018284613fa3565b91505060208301356140a7816139db565b6001600160a01b031660208501526140c26040840184613f5f565b858303604087015280835290915f91906020015b818310156141115783356140e9816139db565b6001600160a01b031681526020848101359082015260409384019360019390930192016140d6565b61411d60608701613bbd565b63ffffffff81166060890152935061413760808701613bbd565b63ffffffff81166080890152935061415260a0870187614010565b9450925086810360a088015261389c818585614051565b60018060a01b0384168152826020820152606060408201525f61418f6060830184614079565b95945050505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561137a5761137a614198565b6141c98185613ed3565b826040820152608060608201525f61418f6080830184614079565b8181038181111561137a5761137a614198565b5f8161420557614205614198565b505f190190565b5f8235609e19833603018112613f55575f5ffd5b5f61422b8283613f5f565b60a0855261423d60a086018284613fa3565b915050602083013561424e816139db565b6001600160a01b031660208501526040838101359085015263ffffffff61427760608501613bbd565b16606085015263ffffffff61428e60808501613bbd565b1660808501528091505092915050565b60018060a01b0384168152826020820152606060408201525f61418f6060830184614220565b602081525f6117186020830184614220565b63ffffffff818116838216019081111561137a5761137a614198565b5f823560fe19833603018112613f55575f5ffd5b828152604060208201525f6137b16040830184614079565b5f604082840312801561432f575f5ffd5b50604080519081016001600160401b038111828210171561435e57634e487b7160e01b5f52604160045260245ffd5b604052823561436c816139db565b815261437a60208401613bbd565b60208201529392505050565b63ffffffff828116828216039081111561137a5761137a614198565b5f63ffffffff8216806143b7576143b7614198565b5f190192915050565b5f602082840312156143d0575f5ffd5b5051919050565b60a081016143e58287613ed3565b63ffffffff94909416604082015261ffff92831660608201529116608090910152919050565b5f5f8335601e19843603018112614420575f5ffd5b8301803591506001600160401b03821115614439575f5ffd5b6020019150600681901b3603821315613a60575f5ffd5b5f5f8335601e19843603018112614465575f5ffd5b8301803591506001600160401b0382111561447e575f5ffd5b6020019150600581901b3603821315613a60575f5ffd5b5f5f8335601e198436030181126144aa575f5ffd5b8301803591506001600160401b038211156144c3575f5ffd5b602001915036819003821315613a60575f5ffd5b80516020808301519190811015613a1a575f1960209190910360031b1b16919050565b5f6020828403121561450a575f5ffd5b8151611718816139db565b634e487b7160e01b5f52601260045260245ffd5b5f63ffffffff83168061453e5761453e614515565b8063ffffffff84160691505092915050565b5f8261455e5761455e614515565b500490565b5f82518060208501845e5f920191825250919050565b5f8261458757614587614515565b50069056fea2646970667358221220319adaf6a1466ae377b31189860d1faa51f67ddd645e00b4f2a02f66148a3f2964736f6c634300081b0033",
    "sourceMap": "1096:28721:126:-:0;;;1696:632;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2269:14;;;;2220:27;;;;1820:24;;1858:22;;;;1894:24;;;;1932:35;;;;1981:27;;;;2022:29;;;;2065:24;;;;2103:32;;;;2163:21;;;;-1:-1:-1;;;;;3618:38:179;;3610:67;;;;-1:-1:-1;;;3610:67:179;;;;;;;;;;;;-1:-1:-1;;;;;3687:32:179;;;7707:58:127;7736:29;7707:26;:58;:::i;:::-;:63;;;7686:137;;;;-1:-1:-1;;;7686:137:127;;;;;;;;;;;;7841:48;4056:6;7841:29;:48;:::i;:::-;:53;;;7833:108;;;;-1:-1:-1;;;7833:108:127;;;;;;;;;;;;-1:-1:-1;;;;;7951:38:127;;;;;7999:34;;;;;8043:38;;;;;8091:60;;;;;;8161:44;;;;;8215:48;;;;8273:38;;;;;8321:54;;;501:44:166;;;961:24:167;:8;:22;:24::i;:::-;950:35;;-1:-1:-1;2299:22:126::4;:20;:22::i;:::-;1696:632:::0;1096:28721;;1711:286:37;1776:11;1799:17;1825:3;1799:30;;1857:2;1843:4;:11;:16;1839:72;;;1896:3;1882:18;;-1:-1:-1;;;1882:18:37;;;;;;;;:::i;:::-;;;;;;;;1839:72;1977:11;;1960:13;1977:4;1960:13;:::i;:::-;1952:36;;1711:286;-1:-1:-1;;;1711:286:37:o;5939:280:26:-;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:26;;4224:2:318;5998:66:26;;;4206:21:318;4263:2;4243:18;;;4236:30;4302:34;4282:18;;;4275:62;-1:-1:-1;;;4353:18:318;;;4346:37;4400:19;;5998:66:26;4022:403:318;5998:66:26;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:26;6140:15;6125:30;;;;;;6174:28;;4572:36:318;;;6174:28:26;;4560:2:318;4545:18;6174:28:26;;;;;;;6074:139;5939:280::o;14:127:318:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;213:2;207:9;255:6;243:19;;-1:-1:-1;;;;;277:34:318;;313:22;;;274:62;271:88;;;339:18;;:::i;:::-;375:2;368:22;146:250;:::o;401:197::-;500:13;;-1:-1:-1;;;;;542:31:318;;532:42;;522:70;;588:1;585;578:12;522:70;401:197;;;:::o;603:167::-;681:13;;734:10;723:22;;713:33;;703:61;;760:1;757;750:12;775:743;829:5;882:3;875:4;867:6;863:17;859:27;849:55;;900:1;897;890:12;849:55;927:13;;-1:-1:-1;;;;;952:30:318;;949:56;;;985:18;;:::i;:::-;1054:2;1048:9;1146:2;1108:17;;-1:-1:-1;;1104:31:318;;;1137:2;1100:40;1096:54;1084:67;;-1:-1:-1;;;;;1166:34:318;;1202:22;;;1163:62;1160:88;;;1228:18;;:::i;:::-;1264:2;1257:22;1288;;;1329:19;;;1350:4;1325:30;1322:39;-1:-1:-1;1319:59:318;;;1374:1;1371;1364:12;1319:59;1431:6;1424:4;1416:6;1412:17;1405:4;1397:6;1393:17;1387:51;1486:1;1458:19;;;1479:4;1454:30;1447:41;;;;1462:6;775:743;-1:-1:-1;;;775:743:318:o;1523:1497::-;1647:6;1700:2;1688:9;1679:7;1675:23;1671:32;1668:52;;;1716:1;1713;1706:12;1668:52;1743:16;;-1:-1:-1;;;;;1771:30:318;;1768:50;;;1814:1;1811;1804:12;1768:50;1837:22;;1893:6;1875:16;;;1871:29;1868:49;;;1913:1;1910;1903:12;1868:49;1939:17;;:::i;:::-;1979:53;2029:2;1979:53;:::i;:::-;1972:5;1965:68;2065:62;2123:2;2119;2115:11;2065:62;:::i;:::-;2060:2;2053:5;2049:14;2042:86;2160:62;2218:2;2214;2210:11;2160:62;:::i;:::-;2155:2;2148:5;2144:14;2137:86;2255:62;2313:2;2309;2305:11;2255:62;:::i;:::-;2250:2;2243:5;2239:14;2232:86;2351:63;2409:3;2405:2;2401:12;2351:63;:::i;:::-;2345:3;2338:5;2334:15;2327:88;2448:42;2485:3;2481:2;2477:12;2448:42;:::i;:::-;2442:3;2435:5;2431:15;2424:67;2524:42;2561:3;2557:2;2553:12;2524:42;:::i;:::-;2518:3;2511:5;2507:15;2500:67;2600:42;2637:3;2633:2;2629:12;2600:42;:::i;:::-;2594:3;2587:5;2583:15;2576:67;2676:42;2713:3;2709:2;2705:12;2676:42;:::i;:::-;2670:3;2663:5;2659:15;2652:67;2752:42;2789:3;2785:2;2781:12;2752:42;:::i;:::-;2746:3;2735:15;;2728:67;2834:3;2826:12;;2820:19;-1:-1:-1;;;;;2851:32:318;;2848:52;;;2896:1;2893;2886:12;2848:52;2933:56;2981:7;2970:8;2966:2;2962:17;2933:56;:::i;:::-;2927:3;2916:15;;2909:81;-1:-1:-1;2920:5:318;1523:1497;-1:-1:-1;;;;1523:1497:318:o;3025:267::-;3056:1;3090:10;3087:1;3083:18;3120:3;3110:134;;3166:10;3161:3;3157:20;3154:1;3147:31;3201:4;3198:1;3191:15;3229:4;3226:1;3219:15;3110:134;3282:3;3269:10;3266:1;3262:18;3258:28;3253:33;;;3025:267;;;;:::o;3297:418::-;3446:2;3435:9;3428:21;3409:4;3478:6;3472:13;3521:6;3516:2;3505:9;3501:18;3494:34;3580:6;3575:2;3567:6;3563:15;3558:2;3547:9;3543:18;3537:50;3636:1;3631:2;3622:6;3611:9;3607:22;3603:31;3596:42;3706:2;3699;3695:7;3690:2;3682:6;3678:15;3674:29;3663:9;3659:45;3655:54;3647:62;;;3297:418;;;;:::o;3720:297::-;3838:12;;3885:4;3874:16;;;3868:23;;3838:12;3903:16;;3900:111;;;3997:1;3993:6;3983;3977:4;3973:17;3970:1;3966:25;3962:38;3955:5;3951:50;3942:59;;3900:111;;3720:297;;;:::o;4430:184::-;1096:28721:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b50600436106103b3575f3560e01c8063886f1195116101f5578063de02e50311610114578063f6efbb59116100a9578063fabc1cbc11610079578063fabc1cbc14610a33578063fbf1e2c114610a46578063fce36c7d14610a59578063ff9f6cce14610a6c575f5ffd5b8063f6efbb59146109e7578063f74e8eac146109fa578063f8cd844814610a0d578063f96abf2e14610a20575f5ffd5b8063ed71e6a2116100e4578063ed71e6a214610967578063f22cef8514610994578063f2f07ab4146109a7578063f2fde38b146109d4575f5ffd5b8063de02e50314610907578063e063f81f1461091a578063e810ce211461092d578063ea4d3c9b14610940575f5ffd5b8063a50a1d9c1161018a578063bf21a8aa1161015a578063bf21a8aa14610879578063c46db606146108a0578063ca8aa7c7146108cd578063dcbb03b3146108f4575f5ffd5b8063a50a1d9c14610807578063aebd8bae1461081a578063b3dbb0e014610847578063bb7e451f1461085a575f5ffd5b80639cb9a5fa116101c55780639cb9a5fa146107a75780639d45c281146107ba5780639de4b35f146107e1578063a0169ddd146107f4575f5ffd5b8063886f11951461074c5780638da5cb5b146107735780639104c319146107845780639be3d4e41461079f575f5ffd5b80634596021c116102e15780635c975abb11610276578063715018a611610246578063715018a6146106ff5780637b8f8b0514610707578063863cb9a91461070f578063865c695314610722575f5ffd5b80635c975abb146106a25780635e9d8348146106aa57806363f6a798146106bd5780636d21117e146106d2575f5ffd5b806354fd4d50116102b157806354fd4d501461064f57806358baaa3e14610664578063595c6a67146106775780635ac86ab71461067f575f5ffd5b80634596021c146105d85780634657e26a146105eb5780634b943960146106125780634d18cc3514610638575f5ffd5b8063149bc8721161035757806339b70e381161032757806339b70e38146105745780633a8c07861461059b5780633ccc861d146105b25780633efe1db6146105c5575f5ffd5b8063149bc872146104d95780632b9f64a4146104fa57806336af41fa1461053a57806337838ed01461054d575f5ffd5b80630e9a53cf116103925780630e9a53cf1461043f5780630eb383451461048c578063131433b41461049f578063136439dd146104c6575f5ffd5b806218572c146103b757806304a0c502146103ee5780630ca298991461042a575b5f5ffd5b6103d96103c53660046139ef565b60d16020525f908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6104157f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016103e5565b61043d610438366004613a67565b610a7f565b005b610447610d25565b6040516103e591905f6080820190508251825263ffffffff602084015116602083015263ffffffff604084015116604083015260608301511515606083015292915050565b61043d61049a366004613ac3565b610e25565b6104157f000000000000000000000000000000000000000000000000000000000000000081565b61043d6104d4366004613afa565b610ea5565b6104ec6104e7366004613b11565b610edf565b6040519081526020016103e5565b6105226105083660046139ef565b60cc6020525f90815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016103e5565b61043d610548366004613b2b565b610f54565b6104157f000000000000000000000000000000000000000000000000000000000000000081565b6105227f000000000000000000000000000000000000000000000000000000000000000081565b60cb5461041590600160a01b900463ffffffff1681565b61043d6105c0366004613b7a565b6110c5565b61043d6105d3366004613bd0565b6110ec565b61043d6105e6366004613bfa565b6112c2565b6105227f000000000000000000000000000000000000000000000000000000000000000081565b6106256106203660046139ef565b611325565b60405161ffff90911681526020016103e5565b60cb5461041590600160c01b900463ffffffff1681565b610657611380565b6040516103e59190613c4c565b61043d610672366004613c81565b6113b0565b61043d6113c4565b6103d961068d366004613c9a565b606654600160ff9092169190911b9081161490565b6066546104ec565b6103d96106b8366004613cba565b6113d8565b60cb5461062590600160e01b900461ffff1681565b6103d96106e0366004613ceb565b60cf60209081525f928352604080842090915290825290205460ff1681565b61043d611463565b60ca546104ec565b61043d61071d3660046139ef565b611474565b6104ec610730366004613d15565b60cd60209081525f928352604080842090915290825290205481565b6105227f000000000000000000000000000000000000000000000000000000000000000081565b6033546001600160a01b0316610522565b61052273beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081565b610447611485565b61043d6107b5366004613d41565b611521565b6104157f000000000000000000000000000000000000000000000000000000000000000081565b6106256107ef366004613d78565b61169c565b61043d6108023660046139ef565b61171f565b61043d610815366004613db4565b61172a565b6103d9610828366004613ceb565b60d260209081525f928352604080842090915290825290205460ff1681565b61043d610855366004613dcd565b61173b565b6104ec6108683660046139ef565b60ce6020525f908152604090205481565b6104157f000000000000000000000000000000000000000000000000000000000000000081565b6103d96108ae366004613ceb565b60d060209081525f928352604080842090915290825290205460ff1681565b6105227f000000000000000000000000000000000000000000000000000000000000000081565b61043d610902366004613df7565b611866565b610447610915366004613afa565b6119b3565b610625610928366004613d15565b611a43565b61041561093b366004613afa565b611aa8565b6105227f000000000000000000000000000000000000000000000000000000000000000081565b6103d9610975366004613ceb565b60d360209081525f928352604080842090915290825290205460ff1681565b61043d6109a2366004613d15565b611b29565b6103d96109b5366004613ceb565b60d760209081525f928352604080842090915290825290205460ff1681565b61043d6109e23660046139ef565b611c93565b61043d6109f5366004613e3b565b611d0e565b61043d610a08366004613e99565b611e43565b6104ec610a1b366004613b11565b61200a565b61043d610a2e366004613c81565b61201a565b61043d610a41366004613afa565b61214b565b60cb54610522906001600160a01b031681565b61043d610a67366004613b2b565b6121b8565b61043d610a7a366004613b2b565b6122e9565b6009610a8a8161244a565b610a9760208501856139ef565b610aa081612475565b610abd5760405163932d94f760e01b815260040160405180910390fd5b610ac561251f565b6040516304c1b8eb60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063260dc75890610b11908890600401613f04565b602060405180830381865afa158015610b2c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b509190613f12565b610b6d57604051631fb1705560e21b815260040160405180910390fd5b5f5b83811015610d135736858583818110610b8a57610b8a613f2d565b9050602002810190610b9c9190613f41565b90505f60ce81610baf60208b018b6139ef565b6001600160a01b031681526020808201929092526040015f90812054925090610bda908a018a6139ef565b8284604051602001610bee93929190614169565b6040516020818303038152906040528051906020012090505f610c1084612578565b9050600160d75f610c2460208e018e6139ef565b6001600160a01b0316815260208082019290925260409081015f9081208682529092529020805460ff1916911515919091179055610c638360016141ac565b60ce5f610c7360208e018e6139ef565b6001600160a01b03166001600160a01b031681526020019081526020015f208190555081336001600160a01b03167ffff0759ccb371dfb5691798724e70b4fa61cb3bfe730a33ac19fb86a48efc7568c8688604051610cd4939291906141bf565b60405180910390a3610d03333083610cf26040890160208a016139ef565b6001600160a01b0316929190612763565b505060019092019150610b6f9050565b50610d1e6001609755565b5050505050565b604080516080810182525f80825260208201819052918101829052606081019190915260ca545b8015610dfd575f60ca610d606001846141e4565b81548110610d7057610d70613f2d565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff161580156060830181905291925090610ddf5750806040015163ffffffff164210155b15610dea5792915050565b5080610df5816141f7565b915050610d4c565b5050604080516080810182525f80825260208201819052918101829052606081019190915290565b610e2d6127ce565b6001600160a01b0382165f81815260d1602052604080822054905160ff9091169284151592841515927f4de6293e668df1398422e1def12118052c1539a03cbfedc145895d48d7685f1c9190a4506001600160a01b03919091165f90815260d160205260409020805460ff1916911515919091179055565b610ead612828565b6066548181168114610ed25760405163c61dca5d60e01b815260040160405180910390fd5b610edb826128cb565b5050565b5f80610eee60208401846139ef565b8360200135604051602001610f379392919060f89390931b6001600160f81b031916835260609190911b6bffffffffffffffffffffffff19166001830152601582015260350190565b604051602081830303815290604052805190602001209050919050565b6001610f5f8161244a565b335f90815260d1602052604090205460ff16610f8e57604051635c427cd960e01b815260040160405180910390fd5b610f9661251f565b5f5b828110156110b55736848483818110610fb357610fb3613f2d565b9050602002810190610fc5919061420c565b335f81815260ce60209081526040808320549051949550939192610fef929091859187910161429e565b60405160208183030381529060405280519060200120905061101083612908565b335f90815260d0602090815260408083208484529091529020805460ff191660019081179091556110429083906141ac565b335f81815260ce602052604090819020929092559051829184917f51088b8c89628df3a8174002c2a034d0152fce6af8415d651b2a4734bf270482906110899088906142c4565b60405180910390a46110aa333060408601803590610cf290602089016139ef565b505050600101610f98565b506110c06001609755565b505050565b60026110d08161244a565b6110d861251f565b6110e283836129f3565b6110c06001609755565b60036110f78161244a565b60cb546001600160a01b0316331461112257604051635c427cd960e01b815260040160405180910390fd5b60cb5463ffffffff600160c01b90910481169083161161115557604051631ca7e50b60e21b815260040160405180910390fd5b428263ffffffff161061117b576040516306957c9160e11b815260040160405180910390fd5b60ca5460cb545f9061119a90600160a01b900463ffffffff16426142d6565b6040805160808101825287815263ffffffff87811660208084018281528684168587018181525f6060880181815260ca8054600181018255925297517f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee160029092029182015592517f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee290930180549151975193871667ffffffffffffffff1990921691909117600160201b978716979097029690961760ff60401b1916600160401b921515929092029190911790945560cb805463ffffffff60c01b1916600160c01b840217905593519283529394508892908616917fecd866c3c158fa00bf34d803d5f6023000b57080bcb48af004c2b4b46b3afd08910160405180910390a45050505050565b60026112cd8161244a565b6112d561251f565b5f5b838110156113145761130c8585838181106112f4576112f4613f2d565b905060200281019061130691906142f2565b846129f3565b6001016112d7565b5061131f6001609755565b50505050565b6001600160a01b0381165f90815260d5602090815260408083208151606081018352905461ffff80821683526201000082041693820193909352600160201b90920463ffffffff169082015261137a90612c7b565b92915050565b60606113ab7f0000000000000000000000000000000000000000000000000000000000000000612ceb565b905090565b6113b86127ce565b6113c181612d28565b50565b6113cc612828565b6113d65f196128cb565b565b5f61145b8260ca6113ec6020830183613c81565b63ffffffff168154811061140257611402613f2d565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff1615156060820152612d99565b506001919050565b61146b6127ce565b6113d65f612f3c565b61147c6127ce565b6113c181612f8d565b604080516080810182525f80825260208201819052918101829052606081019190915260ca80546114b8906001906141e4565b815481106114c8576114c8613f2d565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff1615156060820152919050565b600561152c8161244a565b8361153681612475565b6115535760405163932d94f760e01b815260040160405180910390fd5b61155b61251f565b5f5b83811015610d13573685858381811061157857611578613f2d565b905060200281019061158a9190613f41565b6001600160a01b0388165f90815260ce60209081526040808320549051939450926115bb918b918591879101614169565b6040516020818303038152906040528051906020012090505f6115dd84612578565b6001600160a01b038b165f90815260d3602090815260408083208684529091529020805460ff1916600190811790915590915061161b9084906141ac565b6001600160a01b038b165f81815260ce60205260409081902092909255905183919033907ffc8888bffd711da60bc5092b33f677d81896fe80ecc677b84cfab8184462b6e09061166e9088908a90614306565b60405180910390a461168c333083610cf26040890160208a016139ef565b50506001909201915061155d9050565b6001600160a01b0382165f90815260d66020526040812061171890826116cf6116ca3687900387018761431e565b612fe8565b815260208082019290925260409081015f208151606081018352905461ffff80821683526201000082041693820193909352600160201b90920463ffffffff1690820152612c7b565b9392505050565b33610edb818361304b565b6117326127ce565b6113c1816130ae565b60076117468161244a565b8261175081612475565b61176d5760405163932d94f760e01b815260040160405180910390fd5b60cb545f9061178990600160a01b900463ffffffff16426142d6565b6001600160a01b0386165f90815260d5602090815260408083208151606081018352905461ffff80821683526201000082041693820193909352600160201b90920463ffffffff1690820152919250906117e290612c7b565b6001600160a01b0387165f90815260d560205260409020909150611807908684613119565b6040805163ffffffff8416815261ffff838116602083015287168183015290516001600160a01b0388169133917fd1e028bd664486a46ad26040e999cd2d22e1e9a094ee6afe19fcf64678f16f749181900360600190a3505050505050565b60066118718161244a565b8361187b81612475565b6118985760405163932d94f760e01b815260040160405180910390fd5b60cb545f906118b490600160a01b900463ffffffff16426142d6565b6001600160a01b038781165f90815260d460209081526040808320938a1683529281528282208351606081018552905461ffff80821683526201000082041692820192909252600160201b90910463ffffffff169281019290925291925061191b90612c7b565b6001600160a01b038089165f90815260d460209081526040808320938b1683529290522090915061194d908684613119565b6040805163ffffffff8416815261ffff838116602083015287168183015290516001600160a01b0388811692908a169133917f48e198b6ae357e529204ee53a8e514c470ff77d9cc8e4f7207f8b5d490ae6934919081900360600190a450505050505050565b604080516080810182525f80825260208201819052918101829052606081019190915260ca82815481106119e9576119e9613f2d565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff161515606082015292915050565b6001600160a01b038281165f90815260d46020908152604080832093851683529281528282208351606081018552905461ffff80821683526201000082041692820192909252600160201b90910463ffffffff16928101929092529061171890612c7b565b60ca545f905b63ffffffff811615611b0f578260ca611ac8600184614386565b63ffffffff1681548110611ade57611ade613f2d565b905f5260205f2090600202015f015403611afd57611718600182614386565b80611b07816143a2565b915050611aae565b5060405163504570e360e01b815260040160405180910390fd5b81611b3381612475565b611b505760405163932d94f760e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0384811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015611bb4573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611bd89190613f12565b80611c6c575060405163ba1a84e560e01b81526001600160a01b0384811660048301525f917f00000000000000000000000000000000000000000000000000000000000000009091169063ba1a84e590602401602060405180830381865afa158015611c46573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c6a91906143c0565b115b611c895760405163fb494ea160e01b815260040160405180910390fd5b6110c0838361304b565b611c9b6127ce565b6001600160a01b038116611d055760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6113c181612f3c565b5f54610100900460ff1615808015611d2c57505f54600160ff909116105b80611d455750303b158015611d4557505f5460ff166001145b611da85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401611cfc565b5f805460ff191660011790558015611dc9575f805461ff0019166101001790555b611dd2856128cb565b611ddb86612f3c565b611de484612f8d565b611ded83612d28565b611df6826130ae565b8015611e3b575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6008611e4e8161244a565b83611e5881612475565b611e755760405163932d94f760e01b815260040160405180910390fd5b6040516304c1b8eb60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063260dc75890611ec1908790600401613f04565b602060405180830381865afa158015611edc573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f009190613f12565b611f1d57604051631fb1705560e21b815260040160405180910390fd5b60cb545f90611f3990600160a01b900463ffffffff16426142d6565b6001600160a01b0387165f90815260d66020526040812091925090611f6b90826116cf6116ca368b90038b018b61431e565b6001600160a01b0388165f90815260d660205260408120919250611fb09190611f9c6116ca368b90038b018b61431e565b81526020019081526020015f208684613119565b866001600160a01b0316336001600160a01b03167f14918b3834ab6752eb2e1b489b6663a67810efb5f56f3944a97ede8ecf1fd9f18885858a604051611ff994939291906143d7565b60405180910390a350505050505050565b5f6001610eee60208401846139ef565b60036120258161244a565b60cb546001600160a01b0316331461205057604051635c427cd960e01b815260040160405180910390fd5b60ca5463ffffffff831610612078576040516394a8d38960e01b815260040160405180910390fd5b5f60ca8363ffffffff168154811061209257612092613f2d565b905f5260205f20906002020190508060010160089054906101000a900460ff16156120d057604051631b14174b60e01b815260040160405180910390fd5b6001810154600160201b900463ffffffff16421061210157604051630c36f66560e21b815260040160405180910390fd5b60018101805460ff60401b1916600160401b17905560405163ffffffff8416907fd850e6e5dfa497b72661fa73df2923464eaed9dc2ff1d3cb82bccbfeabe5c41e905f90a2505050565b6121536131e8565b6066548019821981161461217a5760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b5f6121c28161244a565b6121ca61251f565b5f5b828110156110b557368484838181106121e7576121e7613f2d565b90506020028101906121f9919061420c565b335f81815260ce60209081526040808320549051949550939192612223929091859187910161429e565b60405160208183030381529060405280519060200120905061224483612908565b335f90815260cf602090815260408083208484529091529020805460ff191660019081179091556122769083906141ac565b335f81815260ce602052604090819020929092559051829184917f450a367a380c4e339e5ae7340c8464ef27af7781ad9945cfe8abd828f89e6281906122bd9088906142c4565b60405180910390a46122de333060408601803590610cf290602089016139ef565b5050506001016121cc565b60046122f48161244a565b335f90815260d1602052604090205460ff1661232357604051635c427cd960e01b815260040160405180910390fd5b61232b61251f565b5f5b828110156110b5573684848381811061234857612348613f2d565b905060200281019061235a919061420c565b335f81815260ce60209081526040808320549051949550939192612384929091859187910161429e565b6040516020818303038152906040528051906020012090506123a583612908565b335f90815260d2602090815260408083208484529091529020805460ff191660019081179091556123d79083906141ac565b335f81815260ce602052604090819020929092559051829184917f5251b6fdefcb5d81144e735f69ea4c695fd43b0289ca53dc075033f5fc80068b9061241e9088906142c4565b60405180910390a461243f333060408601803590610cf290602089016139ef565b50505060010161232d565b606654600160ff83161b908116036113c15760405163840a48d560e01b815260040160405180910390fd5b604051631beb2b9760e31b81526001600160a01b0382811660048301523360248301523060448301525f80356001600160e01b0319166064840152917f00000000000000000000000000000000000000000000000000000000000000009091169063df595cb8906084016020604051808303815f875af11580156124fb573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061137a9190613f12565b6002609754036125715760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401611cfc565b6002609755565b5f6125ab612586838061440b565b6125966080860160608701613c81565b6125a660a0870160808801613c81565b613299565b5f6125b9604084018461440b565b9050116125d95760405163796cc52560e01b815260040160405180910390fd5b426125ea60a0840160808501613c81565b6125fa6080850160608601613c81565b61260491906142d6565b63ffffffff16106126285760405163150358a160e21b815260040160405180910390fd5b5f80805b612639604086018661440b565b905081101561272a5736612650604087018761440b565b8381811061266057612660613f2d565b6040029190910191505f905061267960208301836139ef565b6001600160a01b0316036126a057604051630863a45360e11b815260040160405180910390fd5b6126ad60208201826139ef565b6001600160a01b0316836001600160a01b0316106126de576040516310fb47f160e31b815260040160405180910390fd5b5f816020013511612702576040516310eb483f60e21b815260040160405180910390fd5b61270f60208201826139ef565b925061271f6020820135856141ac565b93505060010161262c565b506f4b3b4ca85a86c47a098a223fffffffff82111561275c5760405163070b5a6f60e21b815260040160405180910390fd5b5092915050565b6040516001600160a01b038085166024830152831660448201526064810182905261131f9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613597565b6033546001600160a01b031633146113d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611cfc565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa15801561288a573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906128ae9190613f12565b6113d657604051631d77d47760e21b815260040160405180910390fd5b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b612935612915828061440b565b6129256080850160608601613c81565b6125a660a0860160808701613c81565b5f816040013511612959576040516310eb483f60e21b815260040160405180910390fd5b6f4b3b4ca85a86c47a098a223fffffffff8160400135111561298e5760405163070b5a6f60e21b815260040160405180910390fd5b6129be63ffffffff7f000000000000000000000000000000000000000000000000000000000000000016426141ac565b6129ce6080830160608401613c81565b63ffffffff1611156113c157604051637ee2b44360e01b815260040160405180910390fd5b5f60ca612a036020850185613c81565b63ffffffff1681548110612a1957612a19613f2d565b5f91825260209182902060408051608081018252600293909302909101805483526001015463ffffffff80821694840194909452600160201b810490931690820152600160401b90910460ff16151560608201529050612a798382612d99565b5f612a8a60808501606086016139ef565b6001600160a01b038082165f90815260cc60205260409020549192501680612aaf5750805b336001600160a01b03821614612ad857604051635c427cd960e01b815260040160405180910390fd5b5f5b612ae760a0870187614450565b9050811015611e3b5736612afe60e088018861440b565b83818110612b0e57612b0e613f2d565b6001600160a01b0387165f90815260cd602090815260408083209302949094019450929091508290612b42908501856139ef565b6001600160a01b03166001600160a01b031681526020019081526020015f2054905080826020013511612b885760405163aa385e8160e01b815260040160405180910390fd5b5f612b978260208501356141e4565b6001600160a01b0387165f90815260cd60209081526040822092935085018035929190612bc490876139ef565b6001600160a01b031681526020808201929092526040015f2091909155612c059089908390612bf5908701876139ef565b6001600160a01b0316919061366a565b86516001600160a01b03808a1691878216918916907f9543dbd55580842586a951f0386e24d68a5df99ae29e3b216588b45fd684ce3190612c4960208901896139ef565b604080519283526001600160a01b039091166020830152810186905260600160405180910390a4505050600101612ada565b5f816040015163ffffffff165f1480612cad5750815161ffff908116148015612cad5750816040015163ffffffff1642105b15612cc557505060cb54600160e01b900461ffff1690565b816040015163ffffffff16421015612cde57815161137a565b506020015190565b919050565b60605f612cf78361369a565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b60cb546040805163ffffffff600160a01b9093048316815291831660208301527faf557c6c02c208794817a705609cfa935f827312a1adfdd26494b6b95dd2b4b3910160405180910390a160cb805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b806060015115612dbc57604051631b14174b60e01b815260040160405180910390fd5b806040015163ffffffff16421015612de757604051631437a2bb60e31b815260040160405180910390fd5b612df460c0830183614450565b9050612e0360a0840184614450565b905014612e23576040516343714afd60e01b815260040160405180910390fd5b612e3060e083018361440b565b9050612e3f60c0840184614450565b905014612e5f576040516343714afd60e01b815260040160405180910390fd5b8051612e8b90612e756040850160208601613c81565b612e826040860186614495565b866060016136c1565b5f5b612e9a60a0840184614450565b90508110156110c057612f346080840135612eb860a0860186614450565b84818110612ec857612ec8613f2d565b9050602002016020810190612edd9190613c81565b612eea60c0870187614450565b85818110612efa57612efa613f2d565b9050602002810190612f0c9190614495565b612f1960e089018961440b565b87818110612f2957612f29613f2d565b905060400201613765565b600101612e8d565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b60cb546040516001600160a01b038084169216907f237b82f438d75fc568ebab484b75b01d9287b9e98b490b7c23221623b6705dbb905f90a360cb80546001600160a01b0319166001600160a01b0392909216919091179055565b5f815f0151826020015163ffffffff1660405160200161303392919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b60405160208183030381529060405261137a906144d7565b6001600160a01b038083165f81815260cc602052604080822080548686166001600160a01b0319821681179092559151919094169392849290917fbab947934d42e0ad206f25c9cab18b5bb6ae144acfb00f40b4e3aa59590ca3129190a4505050565b60cb546040805161ffff600160e01b9093048316815291831660208301527fe6cd4edfdcc1f6d130ab35f73d72378f3a642944fb4ee5bd84b7807a81ea1c4e910160405180910390a160cb805461ffff909216600160e01b0261ffff60e01b19909216919091179055565b61271061ffff831611156131405760405163891c63df60e01b815260040160405180910390fd5b8254600160201b900463ffffffff16421161316e57604051637b1e25c560e01b815260040160405180910390fd5b8254600160201b900463ffffffff165f0361319557825461ffff191661ffff1783556131ac565b825462010000810461ffff1661ffff199091161783555b825463ffffffff909116600160201b0267ffffffff000000001961ffff90931662010000029290921667ffffffffffff00001990911617179055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613244573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061326891906144fa565b6001600160a01b0316336001600160a01b0316146113d65760405163794821ff60e01b815260040160405180910390fd5b826132b75760405163796cc52560e01b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff16111561330457604051630dd0b9f560e21b815260040160405180910390fd5b61332e7f000000000000000000000000000000000000000000000000000000000000000082614529565b63ffffffff16156133525760405163ee66470560e01b815260040160405180910390fd5b5f8163ffffffff16116133785760405163cb3f434d60e01b815260040160405180910390fd5b6133a27f000000000000000000000000000000000000000000000000000000000000000083614529565b63ffffffff16156133c657604051633c1a94f160e21b815260040160405180910390fd5b8163ffffffff167f000000000000000000000000000000000000000000000000000000000000000063ffffffff16426133ff91906141e4565b1115801561343957508163ffffffff167f000000000000000000000000000000000000000000000000000000000000000063ffffffff1611155b6134565760405163041aa75760e11b815260040160405180910390fd5b5f805b84811015611e3b575f86868381811061347457613474613f2d565b61348a92602060409092020190810191506139ef565b60405163198f077960e21b81526001600160a01b0380831660048301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063663c1de490602401602060405180830381865afa1580156134f3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906135179190613f12565b8061353e57506001600160a01b03811673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0145b61355b57604051632efd965160e11b815260040160405180910390fd5b806001600160a01b0316836001600160a01b03161061358d5760405163dfad9ca160e01b815260040160405180910390fd5b9150600101613459565b5f6135eb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166137a39092919063ffffffff16565b905080515f148061360b57508080602001905181019061360b9190613f12565b6110c05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401611cfc565b6040516001600160a01b0383166024820152604481018290526110c090849063a9059cbb60e01b90606401612797565b5f60ff8216601f81111561137a57604051632cd44ac360e21b815260040160405180910390fd5b6136cc602083614550565b6001901b8463ffffffff16106136f45760405162c6c39d60e71b815260040160405180910390fd5b5f6136fe82610edf565b905061374884848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508a92508591505063ffffffff89166137b9565b611e3b576040516369ca16c960e01b815260040160405180910390fd5b613770602083614550565b6001901b8463ffffffff16106137995760405163054ff4df60e51b815260040160405180910390fd5b5f6136fe8261200a565b60606137b184845f856137d0565b949350505050565b5f836137c68685856138a7565b1495945050505050565b6060824710156138315760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401611cfc565b5f5f866001600160a01b0316858760405161384c9190614563565b5f6040518083038185875af1925050503d805f8114613886576040519150601f19603f3d011682016040523d82523d5f602084013e61388b565b606091505b509150915061389c8783838761393e565b979650505050505050565b5f602084516138b69190614579565b156138d4576040516313717da960e21b815260040160405180910390fd5b8260205b85518111613935576138eb600285614579565b5f0361390c57815f528086015160205260405f209150600284049350613923565b808601515f528160205260405f2091506002840493505b61392e6020826141ac565b90506138d8565b50949350505050565b606083156139ac5782515f036139a5576001600160a01b0385163b6139a55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611cfc565b50816137b1565b6137b183838151156139c15781518083602001fd5b8060405162461bcd60e51b8152600401611cfc9190613c4c565b6001600160a01b03811681146113c1575f5ffd5b5f602082840312156139ff575f5ffd5b8135611718816139db565b5f60408284031215613a1a575f5ffd5b50919050565b5f5f83601f840112613a30575f5ffd5b5081356001600160401b03811115613a46575f5ffd5b6020830191508360208260051b8501011115613a60575f5ffd5b9250929050565b5f5f5f60608486031215613a79575f5ffd5b613a838585613a0a565b925060408401356001600160401b03811115613a9d575f5ffd5b613aa986828701613a20565b9497909650939450505050565b80151581146113c1575f5ffd5b5f5f60408385031215613ad4575f5ffd5b8235613adf816139db565b91506020830135613aef81613ab6565b809150509250929050565b5f60208284031215613b0a575f5ffd5b5035919050565b5f60408284031215613b21575f5ffd5b6117188383613a0a565b5f5f60208385031215613b3c575f5ffd5b82356001600160401b03811115613b51575f5ffd5b613b5d85828601613a20565b90969095509350505050565b5f6101008284031215613a1a575f5ffd5b5f5f60408385031215613b8b575f5ffd5b82356001600160401b03811115613ba0575f5ffd5b613bac85828601613b69565b9250506020830135613aef816139db565b803563ffffffff81168114612ce6575f5ffd5b5f5f60408385031215613be1575f5ffd5b82359150613bf160208401613bbd565b90509250929050565b5f5f5f60408486031215613c0c575f5ffd5b83356001600160401b03811115613c21575f5ffd5b613c2d86828701613a20565b9094509250506020840135613c41816139db565b809150509250925092565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f60208284031215613c91575f5ffd5b61171882613bbd565b5f60208284031215613caa575f5ffd5b813560ff81168114611718575f5ffd5b5f60208284031215613cca575f5ffd5b81356001600160401b03811115613cdf575f5ffd5b6137b184828501613b69565b5f5f60408385031215613cfc575f5ffd5b8235613d07816139db565b946020939093013593505050565b5f5f60408385031215613d26575f5ffd5b8235613d31816139db565b91506020830135613aef816139db565b5f5f5f60408486031215613d53575f5ffd5b8335613d5e816139db565b925060208401356001600160401b03811115613a9d575f5ffd5b5f5f60608385031215613d89575f5ffd5b8235613d94816139db565b9150613bf18460208501613a0a565b803561ffff81168114612ce6575f5ffd5b5f60208284031215613dc4575f5ffd5b61171882613da3565b5f5f60408385031215613dde575f5ffd5b8235613de9816139db565b9150613bf160208401613da3565b5f5f5f60608486031215613e09575f5ffd5b8335613e14816139db565b92506020840135613e24816139db565b9150613e3260408501613da3565b90509250925092565b5f5f5f5f5f60a08688031215613e4f575f5ffd5b8535613e5a816139db565b9450602086013593506040860135613e71816139db565b9250613e7f60608701613bbd565b9150613e8d60808701613da3565b90509295509295909350565b5f5f5f60808486031215613eab575f5ffd5b8335613eb6816139db565b9250613ec58560208601613a0a565b9150613e3260608501613da3565b8035613ede816139db565b6001600160a01b0316825263ffffffff613efa60208301613bbd565b1660208301525050565b6040810161137a8284613ed3565b5f60208284031215613f22575f5ffd5b815161171881613ab6565b634e487b7160e01b5f52603260045260245ffd5b5f823560be19833603018112613f55575f5ffd5b9190910192915050565b5f5f8335601e19843603018112613f74575f5ffd5b83016020810192503590506001600160401b03811115613f92575f5ffd5b8060061b3603821315613a60575f5ffd5b8183526020830192505f815f5b84811015614006578135613fc3816139db565b6001600160a01b0316865260208201356bffffffffffffffffffffffff8116808214613fed575f5ffd5b6020880152506040958601959190910190600101613fb0565b5093949350505050565b5f5f8335601e19843603018112614025575f5ffd5b83016020810192503590506001600160401b03811115614043575f5ffd5b803603821315613a60575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f6140848283613f5f565b60c0855261409660c086018284613fa3565b91505060208301356140a7816139db565b6001600160a01b031660208501526140c26040840184613f5f565b858303604087015280835290915f91906020015b818310156141115783356140e9816139db565b6001600160a01b031681526020848101359082015260409384019360019390930192016140d6565b61411d60608701613bbd565b63ffffffff81166060890152935061413760808701613bbd565b63ffffffff81166080890152935061415260a0870187614010565b9450925086810360a088015261389c818585614051565b60018060a01b0384168152826020820152606060408201525f61418f6060830184614079565b95945050505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561137a5761137a614198565b6141c98185613ed3565b826040820152608060608201525f61418f6080830184614079565b8181038181111561137a5761137a614198565b5f8161420557614205614198565b505f190190565b5f8235609e19833603018112613f55575f5ffd5b5f61422b8283613f5f565b60a0855261423d60a086018284613fa3565b915050602083013561424e816139db565b6001600160a01b031660208501526040838101359085015263ffffffff61427760608501613bbd565b16606085015263ffffffff61428e60808501613bbd565b1660808501528091505092915050565b60018060a01b0384168152826020820152606060408201525f61418f6060830184614220565b602081525f6117186020830184614220565b63ffffffff818116838216019081111561137a5761137a614198565b5f823560fe19833603018112613f55575f5ffd5b828152604060208201525f6137b16040830184614079565b5f604082840312801561432f575f5ffd5b50604080519081016001600160401b038111828210171561435e57634e487b7160e01b5f52604160045260245ffd5b604052823561436c816139db565b815261437a60208401613bbd565b60208201529392505050565b63ffffffff828116828216039081111561137a5761137a614198565b5f63ffffffff8216806143b7576143b7614198565b5f190192915050565b5f602082840312156143d0575f5ffd5b5051919050565b60a081016143e58287613ed3565b63ffffffff94909416604082015261ffff92831660608201529116608090910152919050565b5f5f8335601e19843603018112614420575f5ffd5b8301803591506001600160401b03821115614439575f5ffd5b6020019150600681901b3603821315613a60575f5ffd5b5f5f8335601e19843603018112614465575f5ffd5b8301803591506001600160401b0382111561447e575f5ffd5b6020019150600581901b3603821315613a60575f5ffd5b5f5f8335601e198436030181126144aa575f5ffd5b8301803591506001600160401b038211156144c3575f5ffd5b602001915036819003821315613a60575f5ffd5b80516020808301519190811015613a1a575f1960209190910360031b1b16919050565b5f6020828403121561450a575f5ffd5b8151611718816139db565b634e487b7160e01b5f52601260045260245ffd5b5f63ffffffff83168061453e5761453e614515565b8063ffffffff84160691505092915050565b5f8261455e5761455e614515565b500490565b5f82518060208501845e5f920191825250919050565b5f8261458757614587614515565b50069056fea2646970667358221220319adaf6a1466ae377b31189860d1faa51f67ddd645e00b4f2a02f66148a3f2964736f6c634300081b0033",
    "sourceMapi;:::-;;;;;;;;;;;;;;;;;;;567:14:318;;560:22;542:41;;530:2;515:18;5951:72:127;;;;;;;;3718:41;;;;;;;;867:10:318;855:23;;;837:42;;825:2;810:18;3718:41:127;693:192:318;7537:1544:126;;;;;;:::i;:::-;;:::i;:::-;;28993:459;;;:::i;:::-;;;;;;2303:4:318;2345:3;2334:9;2330:19;2322:27;;2382:6;2376:13;2365:9;2358:32;2458:10;2450:4;2442:6;2438:17;2432:24;2428:41;2421:4;2410:9;2406:20;2399:71;2538:10;2530:4;2522:6;2518:17;2512:24;2508:41;2501:4;2490:9;2486:20;2479:71;2620:4;2612:6;2608:17;2602:24;2595:32;2588:40;2581:4;2570:9;2566:20;2559:70;2141:494;;;;;14227:292:126;;;;;;:::i;:::-;;:::i;3853:49:127:-;;;;;3762:401:179;;;;;;:::i;:::-;;:::i;26980:217:126:-;;;;;;:::i;:::-;;:::i;:::-;;;3788:25:318;;;3776:2;3761:18;26980:217:126;3642:177:318;5075:60:127;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;5075:60:127;;;;;;-1:-1:-1;;;;;3988:32:318;;;3970:51;;3958:2;3943:18;5075:60:127;3824:203:318;4114:966:126;;;;;;:::i;:::-;;:::i;3571:46:127:-;;;;;2883:49;;;;;4659:29;;;;;-1:-1:-1;;;4659:29:127;;;;;;9127:208:126;;;;;;:::i;:::-;;:::i;9711:1009::-;;;;;;:::i;:::-;;:::i;9381:284::-;;;;;;:::i;:::-;;:::i;354:59:166:-;;;;;27956:164:126;;;;;;:::i;:::-;;:::i;:::-;;;7021:6:318;7009:19;;;6991:38;;6979:2;6964:18;27956:164:126;6847:188:318;4756:48:127;;;;;-1:-1:-1;;;4756:48:127;;;;;;1031:106:167;;;:::i;:::-;;;;;;;:::i;11872:140:126:-;;;;;;:::i;:::-;;:::i;4199:85:179:-;;;:::i;4933:163::-;;;;;;:::i;:::-;5065:7;;5036:1;:10;;;;;;;;5065:14;;;5064:24;;4933:163;4810:87;4883:7;;4810:87;;27505:189:126;;;;;;:::i;:::-;;:::i;4887:38:127:-;;;;;-1:-1:-1;;;4887:38:127;;;;;;5557:93;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2064:101:20;;;:::i;28417:117:126:-;28502:18;:25;28417:117;;14044:137;;;;;;:::i;:::-;;:::i;5228:97:127:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1964:47:179;;;;;1441:85:20;1513:6;;-1:-1:-1;;;;;1513:6:20;1441:85;;2571:104:127;;2632:42;2571:104;;28788:159:126;;;:::i;6206:1285::-;;;;;;:::i;:::-;;:::i;3277:52:127:-;;;;;28166:205:126;;;;;;:::i;:::-;;:::i;11300:145::-;;;;;;:::i;:::-;;:::i;12058:128::-;;;;;;:::i;:::-;;:::i;6143:103:127:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;12802:483:126;;;;;;:::i;:::-;;:::i;5393:60:127:-;;;;;;:::i;:::-;;;;;;;;;;;;;;3428:44;;;;;5762:96;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;3001:53;;;;;12232:524:126;;;;;;:::i;:::-;;:::i;28580:162::-;;;;;;:::i;:::-;;:::i;27740:170::-;;;;;;:::i;:::-;;:::i;29498:317::-;;;;;;:::i;:::-;;:::i;2763:53:127:-;;;;;6375:109;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;11491:335:126;;;;;;:::i;:::-;;:::i;7166:125:127:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2314:198:20;;;;;;:::i;:::-;;:::i;2578:455:126:-;;;;;;:::i;:::-;;:::i;13331:667::-;;;;;;:::i;:::-;;:::i;27243:216::-;;;;;;:::i;:::-;;:::i;10766:488::-;;;;;;:::i;:::-;;:::i;4320:454:179:-;;;;;;:::i;:::-;;:::i;4535:29:127:-;;;;;-1:-1:-1;;;;;4535:29:127;;;3160:908:126;;;;;;:::i;:::-;;:::i;5126:1034::-;;;;;;:::i;:::-;;:::i;7537:1544::-;1883:1:127;2960:30:179;2984:5;2960:23;:30::i;:::-;7856:15:126::1;;::::0;::::1;:11:::0;:15:::1;:::i;:::-;713:22:166;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:166::1;;;;;;;;;;;;2505:21:27::2;:19;:21::i;:::-;7916:44:126::3;::::0;-1:-1:-1;;;7916:44:126;;-1:-1:-1;;;;;7916:17:126::3;:31;::::0;::::3;::::0;:44:::3;::::0;7948:11;;7916:44:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7908:75;;;;-1:-1:-1::0;;;7908:75:126::3;;;;;;;;;;;;7998:9;7993:1082;8013:45:::0;;::::3;7993:1082;;;8079:76;8174:34;;8209:1;8174:37;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;8079:132:::0;-1:-1:-1;8225:13:126::3;8241:15;8225:13:::0;8257:15:::3;;::::0;::::3;:11:::0;:15:::3;:::i;:::-;-1:-1:-1::0;;;;;8241:32:126::3;::::0;;::::3;::::0;;::::3;::::0;;;;;;-1:-1:-1;8241:32:126;;;;;-1:-1:-1;;8372:15:126::3;::::0;;::::3;:11:::0;:15:::3;:::i;:::-;8389:5;8396:33;8361:69;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8351:80;;;;;;8287:144;;8446:19;8468:77;8511:33;8468:42;:77::i;:::-;8446:99:::0;-1:-1:-1;8685:4:126::3;8560:50;:67;8611:15;;::::0;::::3;:11:::0;:15:::3;:::i;:::-;-1:-1:-1::0;;;;;8560:67:126::3;::::0;;::::3;::::0;;::::3;::::0;;;;;;;;-1:-1:-1;8560:67:126;;;:106;;;;;;;;:129;;-1:-1:-1;;8560:129:126::3;::::0;::::3;;::::0;;;::::3;::::0;;8738:9:::3;:5:::0;-1:-1:-1;8738:9:126::3;:::i;:::-;8703:15;:32;8719:15;;::::0;::::3;:11:::0;:15:::3;:::i;:::-;-1:-1:-1::0;;;;;8703:32:126::3;-1:-1:-1::0;;;;;8703:32:126::3;;;;;;;;;;;;:44;;;;8848:37;8836:10;-1:-1:-1::0;;;;;8767:187:126::3;;8887:11;8900:5;8907:33;8767:187;;;;;;;;:::i;:::-;;;;;;;;8968:96;9025:10;9045:4;9052:11:::0;8968:39:::3;::::0;;;::::3;::::0;::::3;;:::i;:::-;-1:-1:-1::0;;;;;8968:56:126::3;::::0;:96;;:56:::3;:96::i;:::-;-1:-1:-1::0;;8060:3:126::3;::::0;;::::3;::::0;-1:-1:-1;7993:1082:126::3;::::0;-1:-1:-1;7993:1082:126::3;;;2547:20:27::2;1787:1:::0;3053:7;:22;2873:209;2547:20:::2;3000:1:179::1;7537:1544:126::0;;;;:::o;28993:459::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29115:18:126;:25;29098:253;29142:5;;29098:253;;29168:28;29199:18;29218:5;29222:1;29218;:5;:::i;:::-;29199:25;;;;;;;;:::i;:::-;;;;;;;;;;29168:56;;;;;;;;29199:25;;;;;;;;29168:56;;;;;;;;;;;;;;;;;;-1:-1:-1;;;29168:56:126;;;;;;;;;-1:-1:-1;;;29168:56:126;;;;;;;;;;;;;;;;-1:-1:-1;29168:56:126;29242:53;;;29279:4;:16;;;29260:35;;:15;:35;;29242:53;29238:103;;;29322:4;28993:459;-1:-1:-1;;28993:459:126:o;29238:103::-;-1:-1:-1;29149:3:126;;;;:::i;:::-;;;;29098:253;;;-1:-1:-1;;29404:41:126;;;;;;;;-1:-1:-1;29404:41:126;;;;;;;;;;;;;;;;;;;;;;;28993:459::o;14227:292::-;1334:13:20;:11;:13::i;:::-;-1:-1:-1;;;;;14344:36:126;::::1;14327:14;14344:36:::0;;;:24:::1;:36;::::0;;;;;;14395:59;;14344:36:::1;::::0;;::::1;::::0;14395:59;::::1;;::::0;;::::1;;::::0;::::1;::::0;14327:14;14395:59:::1;-1:-1:-1::0;;;;;;14464:36:126;;;::::1;;::::0;;;:24:::1;:36;::::0;;;;:48;;-1:-1:-1;;14464:48:126::1;::::0;::::1;;::::0;;;::::1;::::0;;14227:292::o;3762:401:179:-;2390:18;:16;:18::i;:::-;3876:7:::1;::::0;4025:37;;::::1;4024:62:::0;::::1;4016:97;;;;-1:-1:-1::0;;;4016:97:179::1;;;;;;;;;;;;4123:33;4140:15;4123:16;:33::i;:::-;3836:327;3762:401:::0;:::o;26980:217:126:-;27084:7;;27155:11;;;;:4;:11;:::i;:::-;27168:4;:20;;;27120:69;;;;;;;;;21770:3:318;21748:16;;;;-1:-1:-1;;;;;;21744:36:318;21732:49;;21818:2;21814:15;;;;-1:-1:-1;;21810:53:318;21806:1;21797:11;;21790:74;21889:2;21880:12;;21873:28;21926:2;21917:12;;21551:384;27120:69:126;;;;;;;;;;;;;27110:80;;;;;;27103:87;;26980:217;;;:::o;4114:966::-;757:1:127;2960:30:179;2984:5;2960:23;:30::i;:::-;1579:10:126::1;1554:36;::::0;;;:24:::1;:36;::::0;;;;;::::1;;1546:67;;;;-1:-1:-1::0;;;1546:67:126::1;;;;;;;;;;;;2505:21:27::2;:19;:21::i;:::-;4333:9:126::3;4328:746;4348:29:::0;;::::3;4328:746;;;4398:44;4445:18;;4464:1;4445:21;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;4512:10;4480:13;4496:27:::0;;;:15:::3;:27;::::0;;;;;;;;4585:48;;4398:68;;-1:-1:-1;4496:27:126;4480:13;;4585:48:::3;::::0;4512:10;;4496:27;;4398:68;;4585:48:::3;;:::i;:::-;;;;;;;;;;;;;4575:59;;;;;;4537:97;;4649:45;4676:17;4649:26;:45::i;:::-;4739:10;4709:41;::::0;;;:29:::3;:41;::::0;;;;;;;:70;;;;;;;;:77;;-1:-1:-1;;4709:77:126::3;4782:4;4709:77:::0;;::::3;::::0;;;4830:9:::3;::::0;:5;;:9:::3;:::i;:::-;4816:10;4800:27;::::0;;;:15:::3;:27;::::0;;;;;;:39;;;;4859:97;;4909:27;;4902:5;;4859:97:::3;::::0;::::3;::::0;4938:17;;4859:97:::3;:::i;:::-;;;;;;;;4970:93;5011:10;5031:4;5038:24;::::0;::::3;::::0;::::3;::::0;4970:23:::3;::::0;::::3;::::0;::::3;;:::i;:93::-;-1:-1:-1::0;;;4379:3:126::3;;4328:746;;;;2547:20:27::2;1787:1:::0;3053:7;:22;2873:209;2547:20:::2;4114:966:126::0;;;:::o;9127:208::-;872:1:127;2960:30:179;2984:5;2960:23;:30::i;:::-;2505:21:27::1;:19;:21::i;:::-;9297:31:126::2;9311:5;9318:9;9297:13;:31::i;:::-;2547:20:27::1;1787:1:::0;3053:7;:22;2873:209;9711:1009:126;1001:1:127;2960:30:179;2984:5;2960:23;:30::i;:::-;1437:14:126::1;::::0;-1:-1:-1;;;;;1437:14:126::1;1423:10;:28;1415:59;;;;-1:-1:-1::0;;;1415:59:126::1;;;;;;;;;;;;9945:34:::2;::::0;::::2;-1:-1:-1::0;;;9945:34:126;;::::2;::::0;::::2;9912:67:::0;;::::2;;9891:137;;;;-1:-1:-1::0;;;9891:137:126::2;;;;;;;;;;;;10079:15;10046:30;:48;;;10038:90;;;;-1:-1:-1::0;;;10038:90:126::2;;;;;;;;;;;;10164:18;:25:::0;10247:15:::2;::::0;10138:16:::2;::::0;10221:41:::2;::::0;-1:-1:-1;;;10247:15:126;::::2;;;10228;10221:41;:::i;:::-;10309:215;::::0;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;;::::2;;::::0;;::::2;::::0;;;;;::::2;::::0;;;;;;-1:-1:-1;10309:215:126;;;;;;10272:18:::2;:262:::0;;10309:215;10272:262;::::2;::::0;;;;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;;;::::2;-1:-1:-1::0;;10272:262:126;;;;;;;-1:-1:-1;;;10272:262:126;;::::2;::::0;;;::::2;::::0;;;::::2;-1:-1:-1::0;;;;10272:262:126::2;-1:-1:-1::0;;;10272:262:126;::::2;;::::0;;;::::2;::::0;;;::::2;::::0;;;10544:34:::2;:67:::0;;-1:-1:-1;;;;10544:67:126::2;-1:-1:-1::0;;;10544:67:126;::::2;;::::0;;10626:87;;837:42:318;;;10309:215:126;;-1:-1:-1;10309:215:126;;10626:87;;::::2;::::0;::::2;::::0;810:18:318;10626:87:126::2;;;;;;;9881:839;;9711:1009:::0;;;:::o;9381:284::-;872:1:127;2960:30:179;2984:5;2960:23;:30::i;:::-;2505:21:27::1;:19;:21::i;:::-;9560:9:126::2;9555:104;9575:17:::0;;::::2;9555:104;;;9613:35;9627:6;;9634:1;9627:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;9638;9613:13;:35::i;:::-;9594:3;;9555:104;;;;2547:20:27::1;1787:1:::0;3053:7;:22;2873:209;2547:20:::1;9381:284:126::0;;;;:::o;27956:164::-;-1:-1:-1;;;;;28082:30:126;;28039:6;28082:30;;;:20;:30;;;;;;;;28064:49;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28064:49:126;;;;;;;;;;;:17;:49::i;:::-;28057:56;27956:164;-1:-1:-1;;27956:164:126:o;1031:106:167:-;1079:13;1111:19;:8;:17;:19::i;:::-;1104:26;;1031:106;:::o;11872:140:126:-;1334:13:20;:11;:13::i;:::-;11968:37:126::1;11988:16;11968:19;:37::i;:::-;11872:140:::0;:::o;4199:85:179:-;2390:18;:16;:18::i;:::-;4249:28:::1;-1:-1:-1::0;;4249:16:179::1;:28::i;:::-;4199:85::o:0;27505:189:126:-;27595:4;27611:55;27623:5;27630:18;27649:15;;;;27623:5;27649:15;:::i;:::-;27630:35;;;;;;;;;;:::i;:::-;;;;;;;;;;27611:55;;;;;;;;27630:35;;;;;;;;27611:55;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27611:55:126;;;;;;;;;-1:-1:-1;;;27611:55:126;;;;;;;;;;;:11;:55::i;:::-;-1:-1:-1;27683:4:126;;27505:189;-1:-1:-1;27505:189:126:o;2064:101:20:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;14044:137:126:-:0;1334:13:20;:11;:13::i;:::-;14139:35:126::1;14158:15;14139:18;:35::i;28788:159::-:0;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28891:18:126;28910:25;;:29;;28938:1;;28910:29;:::i;:::-;28891:49;;;;;;;;:::i;:::-;;;;;;;;;;28884:56;;;;;;;;28891:49;;;;;;;;28884:56;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28884:56:126;;;;;;;;;-1:-1:-1;;;28884:56:126;;;;;;;;;;;;;-1:-1:-1;28788:159:126:o;6206:1285::-;1323:1:127;2960:30:179;2984:5;2960:23;:30::i;:::-;6463:3:126::1;713:22:166;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:166::1;;;;;;;;;;;;2505:21:27::2;:19;:21::i;:::-;6496:9:126::3;6491:994;6511:45:::0;;::::3;6491:994;;;6577:76;6672:34;;6707:1;6672:37;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6739:20:126;::::3;6723:13;6739:20:::0;;;:15:::3;:20;::::0;;;;;;;;6847:57;;6577:132;;-1:-1:-1;6739:20:126;6847:57:::3;::::0;6755:3;;6739:20;;6577:132;;6847:57:::3;;:::i;:::-;;;;;;;;;;;;;6837:68;;;;;;6773:132;;6920:19;6942:77;6985:33;6942:42;:77::i;:::-;-1:-1:-1::0;;;;;7034:47:126;::::3;;::::0;;;:42:::3;:47;::::0;;;;;;;:86;;;;;;;;:93;;-1:-1:-1;;7034:93:126::3;7123:4;7034:93:::0;;::::3;::::0;;;6920:99;;-1:-1:-1;7164:9:126::3;::::0;:5;;:9:::3;:::i;:::-;-1:-1:-1::0;;;;;7141:20:126;::::3;;::::0;;;:15:::3;:20;::::0;;;;;;:32;;;;7193:171;;7271:37;;7141:20;7254:10:::3;::::0;7193:171:::3;::::0;::::3;::::0;7310:5;;7317:33;;7193:171:::3;:::i;:::-;;;;;;;;7378:96;7435:10;7455:4;7462:11:::0;7378:39:::3;::::0;;;::::3;::::0;::::3;;:::i;:96::-;-1:-1:-1::0;;6558:3:126::3;::::0;;::::3;::::0;-1:-1:-1;6491:994:126::3;::::0;-1:-1:-1;6491:994:126::3;28166:205:::0;-1:-1:-1;;;;;28313:31:126;;28270:6;28313:31;;;:21;:31;;;;;28295:69;;28270:6;28345:17;:15;;;;;;;:11;:15;:::i;:::-;;:17::i;:::-;28313:50;;;;;;;;;;;;;;-1:-1:-1;28313:50:126;28295:69;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28295:69:126;;;;;;;;;:17;:69::i;:::-;28288:76;28166:205;-1:-1:-1;;;28166:205:126:o;11300:145::-;11390:10;11410:28;11390:10;11430:7;11410:11;:28::i;12058:128::-;1334:13:20;:11;:13::i;:::-;12148:31:126::1;12173:5;12148:24;:31::i;12802:483::-:0;1575:1:127;2960:30:179;2984:5;2960:23;:30::i;:::-;12950:8:126::1;713:22:166;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:166::1;;;;;;;;;;;;13017:15:126::2;::::0;12970:18:::2;::::0;12991:41:::2;::::0;-1:-1:-1;;;13017:15:126;::::2;;;12998;12991:41;:::i;:::-;-1:-1:-1::0;;;;;13078:30:126;::::2;13042:15;13078:30:::0;;;:20:::2;:30;::::0;;;;;;;13060:49;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;::::2;::::0;;;;::::2;;::::0;;::::2;::::0;;;;-1:-1:-1;;;13060:49:126;;::::2;;;::::0;;;;12970:62;;-1:-1:-1;13042:15:126;13060:49:::2;::::0;:17:::2;:49::i;:::-;-1:-1:-1::0;;;;;13137:30:126;::::2;;::::0;;;:20:::2;:30;::::0;;;;13042:67;;-1:-1:-1;13119:69:126::2;::::0;13169:5;13176:11;13119:17:::2;:69::i;:::-;13204:74;::::0;;25921:10:318;25909:23;;25891:42;;25981:6;25969:19;;;25964:2;25949:18;;25942:47;26025:19;;26005:18;;;25998:47;13204:74:126;;-1:-1:-1;;;;;13204:74:126;::::2;::::0;13227:10:::2;::::0;13204:74:::2;::::0;;;;25879:2:318;13204:74:126;;::::2;12960:325;;3000:1:179::1;12802:483:126::0;;;:::o;12232:524::-;1450:1:127;2960:30:179;2984:5;2960:23;:30::i;:::-;12403:8:126::1;713:22:166;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:166::1;;;;;;;;;;;;12470:15:126::2;::::0;12423:18:::2;::::0;12444:41:::2;::::0;-1:-1:-1;;;12470:15:126;::::2;;;12451;12444:41;:::i;:::-;-1:-1:-1::0;;;;;12531:31:126;;::::2;12495:15;12531:31:::0;;;:21:::2;:31;::::0;;;;;;;:36;;::::2;::::0;;;;;;;;12513:55;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;::::2;::::0;;;;::::2;;::::0;;::::2;::::0;;;;-1:-1:-1;;;12513:55:126;;::::2;;;::::0;;;;;;;12423:62;;-1:-1:-1;12513:55:126::2;::::0;:17:::2;:55::i;:::-;-1:-1:-1::0;;;;;12596:31:126;;::::2;;::::0;;;:21:::2;:31;::::0;;;;;;;:36;;::::2;::::0;;;;;;12495:73;;-1:-1:-1;12578:75:126::2;::::0;12634:5;12641:11;12578:17:::2;:75::i;:::-;12669:80;::::0;;25921:10:318;25909:23;;25891:42;;25981:6;25969:19;;;25964:2;25949:18;;25942:47;26025:19;;26005:18;;;25998:47;12669:80:126;;-1:-1:-1;;;;;12669:80:126;;::::2;::::0;;;::::2;::::0;12693:10:::2;::::0;12669:80:::2;::::0;;;;;25879:2:318;12669:80:126;;::::2;12413:343;;3000:1:179::1;12232:524:126::0;;;;:::o;28580:162::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28710:18:126;28729:5;28710:25;;;;;;;;:::i;:::-;;;;;;;;;;28703:32;;;;;;;;28710:25;;;;;;;;28703:32;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28703:32:126;;;;;;;;;-1:-1:-1;;;28703:32:126;;;;;;;;;;;;;-1:-1:-1;;28580:162:126:o;27740:170::-;-1:-1:-1;;;;;27866:31:126;;;27823:6;27866:31;;;:21;:31;;;;;;;;:36;;;;;;;;;;;27848:55;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27848:55:126;;;;;;;;;;;;27823:6;27848:55;;:17;:55::i;29498:317::-;29622:18;:25;29581:6;;29599:180;29650:5;;;;29599:180;;29714:8;29680:18;29699:5;29703:1;29699;:5;:::i;:::-;29680:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;:42;29676:93;;29749:5;29753:1;29749;:5;:::i;29676:93::-;29657:3;;;;:::i;:::-;;;;29599:180;;;;29795:13;;-1:-1:-1;;;29795:13:126;;;;;;;;;;;11491:335;11569:6;713:22:166;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:166;;;;;;;;;;;;11665:36:126::1;::::0;-1:-1:-1;;;11665:36:126;;-1:-1:-1;;;;;3988:32:318;;;11665:36:126::1;::::0;::::1;3970:51:318::0;11665:17:126::1;:28;::::0;::::1;::::0;3943:18:318;;11665:36:126::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:89;;;-1:-1:-1::0;11705:45:126::1;::::0;-1:-1:-1;;;11705:45:126;;-1:-1:-1;;;;;3988:32:318;;;11705:45:126::1;::::0;::::1;3970:51:318::0;11753:1:126::1;::::0;11705:17:::1;:37:::0;;::::1;::::0;::::1;::::0;3943:18:318;;11705:45:126::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;11665:89;11644:137;;;;-1:-1:-1::0;;;11644:137:126::1;;;;;;;;;;;;11791:28;11803:6;11811:7;11791:11;:28::i;2314:198:20:-:0;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:20;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:20;;26812:2:318;2394:73:20::1;::::0;::::1;26794:21:318::0;26851:2;26831:18;;;26824:30;26890:34;26870:18;;;26863:62;-1:-1:-1;;;26941:18:318;;;26934:36;26987:19;;2394:73:20::1;;;;;;;;;2477:28;2496:8;2477:18;:28::i;2578:455:126:-:0;3279:19:26;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:26;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:26;1713:19:34;:23;;;3387:66:26;;-1:-1:-1;3436:12:26;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:26;;27219:2:318;3325:201:26;;;27201:21:318;27258:2;27238:18;;;27231:30;27297:34;27277:18;;;27270:62;-1:-1:-1;;;27348:18:318;;;27341:44;27402:19;;3325:201:26;27017:410:318;3325:201:26;3536:12;:16;;-1:-1:-1;;3536:16:26;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:26;;;;;3562:65;2802:37:126::1;2819:19;2802:16;:37::i;:::-;2849:32;2868:12;2849:18;:32::i;:::-;2891:35;2910:15;2891:18;:35::i;:::-;2936:37;2956:16;2936:19;:37::i;:::-;2983:43;3008:17;2983:24;:43::i;:::-;3651:14:26::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:26;;;3721:14;;-1:-1:-1;27584:36:318;;3721:14:26;;27572:2:318;27557:18;3721:14:26;;;;;;;3647:99;3269:483;2578:455:126;;;;;:::o;13331:667::-;1702:1:127;2960:30:179;2984:5;2960:23;:30::i;:::-;13523:8:126::1;713:22:166;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:166::1;;;;;;;;;;;;13551:44:126::2;::::0;-1:-1:-1;;;13551:44:126;;-1:-1:-1;;;;;13551:17:126::2;:31;::::0;::::2;::::0;:44:::2;::::0;13583:11;;13551:44:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13543:75;;;;-1:-1:-1::0;;;13543:75:126::2;;;;;;;;;;;;13676:15;::::0;13629:18:::2;::::0;13650:41:::2;::::0;-1:-1:-1;;;13676:15:126;::::2;;;13657;13650:41;:::i;:::-;-1:-1:-1::0;;;;;13737:31:126;::::2;13701:15;13737:31:::0;;;:21:::2;:31;::::0;;;;13629:62;;-1:-1:-1;13701:15:126;13719:69:::2;::::0;13701:15;13769:17:::2;:15;;::::0;;::::2;::::0;::::2;:11:::0;:15:::2;:::i;13719:69::-;-1:-1:-1::0;;;;;13816:31:126;::::2;;::::0;;;:21:::2;:31;::::0;;;;13701:87;;-1:-1:-1;13798:89:126::2;::::0;13816:31;13848:17:::2;:15;;::::0;;::::2;::::0;::::2;:11:::0;:15:::2;:::i;:17::-;13816:50;;;;;;;;;;;13868:5;13875:11;13798:17;:89::i;:::-;13939:8;-1:-1:-1::0;;;;;13903:88:126::2;13927:10;-1:-1:-1::0;;;;;13903:88:126::2;;13949:11;13962;13975:8;13985:5;13903:88;;;;;;;;;:::i;:::-;;;;;;;;13533:465;;3000:1:179::1;13331:667:126::0;;;;:::o;27243:216::-;27345:7;2205:1:127;27415:10:126;;;;:4;:10;:::i;10766:488::-;1001:1:127;2960:30:179;2984:5;2960:23;:30::i;:::-;1437:14:126::1;::::0;-1:-1:-1;;;;;1437:14:126::1;1423:10;:28;1415:59;;;;-1:-1:-1::0;;;1415:59:126::1;;;;;;;;;;;;10924:18:::2;:25:::0;10912:37:::2;::::0;::::2;;10904:66;;;;-1:-1:-1::0;;;10904:66:126::2;;;;;;;;;;;;10980:29;11012:18;11031:9;11012:29;;;;;;;;;;:::i;:::-;;;;;;;;;;;10980:61;;11060:4;:13;;;;;;;;;;;;11059:14;11051:39;;;;-1:-1:-1::0;;;11051:39:126::2;;;;;;;;;;;;11126:16;::::0;::::2;::::0;-1:-1:-1;;;11126:16:126;::::2;;;11108:15;:34;11100:67;;;;-1:-1:-1::0;;;11100:67:126::2;;;;;;;;;;;;11193:4;11177:13:::0;::::2;:20:::0;;-1:-1:-1;;;;11177:20:126::2;-1:-1:-1::0;;;11177:20:126::2;::::0;;11212:35:::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;11177:20;;11212:35:::2;10894:360;10766:488:::0;;:::o;4320:454:179:-;2558:20;:18;:20::i;:::-;4438:7:::1;::::0;4632:20;::::1;4609:16:::0;::::1;4583:43:::0;::::1;4582:71;4574:106;;;;-1:-1:-1::0;;;4574:106:179::1;;;;;;;;;;;;4690:7;:25:::0;;;4730:37:::1;::::0;3788:25:318;;;4739:10:179::1;::::0;4730:37:::1;::::0;3776:2:318;3761:18;4730:37:179::1;;;;;;;4398:376;4320:454:::0;:::o;3160:908:126:-;612:1:127;2960:30:179;2984:5;2960:23;:30::i;:::-;2505:21:27::1;:19;:21::i;:::-;3345:9:126::2;3340:722;3360:29:::0;;::::2;3340:722;;;3410:44;3457:18;;3476:1;3457:21;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3524:10;3492:13;3508:27:::0;;;:15:::2;:27;::::0;;;;;;;;3591:48;;3410:68;;-1:-1:-1;3508:27:126;3492:13;;3591:48:::2;::::0;3524:10;;3508:27;;3410:68;;3591:48:::2;;:::i;:::-;;;;;;;;;;;;;3581:59;;;;;;3549:91;;3655:45;3682:17;3655:26;:45::i;:::-;3742:10;3715:38;::::0;;;:26:::2;:38;::::0;;;;;;;:61;;;;;;;;:68;;-1:-1:-1;;3715:68:126::2;3779:4;3715:68:::0;;::::2;::::0;;;3827:9:::2;::::0;:5;;:9:::2;:::i;:::-;3813:10;3797:27;::::0;;;:15:::2;:27;::::0;;;;;;:39;;;;3856:88;;3903:21;;3896:5;;3856:88:::2;::::0;::::2;::::0;3926:17;;3856:88:::2;:::i;:::-;;;;;;;;3958:93;3999:10;4019:4;4026:24;::::0;::::2;::::0;::::2;::::0;3958:23:::2;::::0;::::2;::::0;::::2;;:::i;:93::-;-1:-1:-1::0;;;3391:3:126::2;;3340:722;;5126:1034:::0;1151:1:127;2960:30:179;2984:5;2960:23;:30::i;:::-;1579:10:126::1;1554:36;::::0;;;:24:::1;:36;::::0;;;;;::::1;;1546:67;;;;-1:-1:-1::0;;;1546:67:126::1;;;;;;;;;;;;2505:21:27::2;:19;:21::i;:::-;5348:9:126::3;5343:811;5363:29:::0;;::::3;5343:811;;;5413:44;5460:18;;5479:1;5460:21;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;5527:10;5495:13;5511:27:::0;;;:15:::3;:27;::::0;;;;;;;;5607:48;;5413:68;;-1:-1:-1;5511:27:126;5495:13;;5607:48:::3;::::0;5527:10;;5511:27;;5413:68;;5607:48:::3;;:::i;:::-;;;;;;;;;;;;;5597:59;;;;;;5552:104;;5671:45;5698:17;5671:26;:45::i;:::-;5768:10;5731:48;::::0;;;:36:::3;:48;::::0;;;;;;;:84;;;;;;;;:91;;-1:-1:-1;;5731:91:126::3;5818:4;5731:91:::0;;::::3;::::0;;;5866:9:::3;::::0;:5;;:9:::3;:::i;:::-;5852:10;5836:27;::::0;;;:15:::3;:27;::::0;;;;;;:39;;;;5895:141;;5969:34;;5962:5;;5895:141:::3;::::0;::::3;::::0;6005:17;;5895:141:::3;:::i;:::-;;;;;;;;6050:93;6091:10;6111:4;6118:24;::::0;::::3;::::0;::::3;::::0;6050:23:::3;::::0;::::3;::::0;::::3;;:::i;:93::-;-1:-1:-1::0;;;5394:3:126::3;;5343:811;;3380:133:179::0;5065:7;;5036:1;:10;;;;5065:14;;;5064:24;3464:42;;;;-1:-1:-1;;;3464:42:179;;;;;;;;;;;1080:175:166;1175:73;;-1:-1:-1;;;1175:73:166;;-1:-1:-1;;;;;28811:32:318;;;1175:73:166;;;28793:51:318;1213:10:166;28860:18:318;;;28853:60;1233:4:166;28929:18:318;;;28922:60;1152:4:166;1240:7;;-1:-1:-1;;;;;;1240:7:166;28998:18:318;;;28991:61;1152:4:166;1175:20;:28;;;;;;28765:19:318;;1175:73:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2580:287:27:-;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:27;;29265:2:318;2704:63:27;;;29247:21:318;29304:2;29284:18;;;29277:30;29343:33;29323:18;;;29316:61;29394:18;;2704:63:27;29063:355:318;2704:63:27;1830:1;2842:7;:18;2580:287::o;20456:1212:126:-;20600:7;20619:139;20665:35;:10;;:35;:::i;:::-;20702:25;;;;;;;;:::i;:::-;20729:19;;;;;;;;:::i;:::-;20619:32;:139::i;:::-;20813:1;20777:26;;;;:10;:26;:::i;:::-;:33;;:37;20769:70;;;;-1:-1:-1;;;20769:70:126;;;;;;;;;;;;20907:15;20885:19;;;;;;;;:::i;:::-;20857:25;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;:65;;;20849:102;;;;-1:-1:-1;;;20849:102:126;;;;;;;;;;;;20962:19;;;21045:515;21069:26;;;;:10;:26;:::i;:::-;:33;;21065:1;:37;21045:515;;;21123:38;21164:26;;;;:10;:26;:::i;:::-;21191:1;21164:29;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;21250:1:126;;-1:-1:-1;21215:23:126;;;;21164:29;21215:23;:::i;:::-;-1:-1:-1;;;;;21215:37:126;;21207:68;;;;-1:-1:-1;;;21207:68:126;;;;;;;;;;;;21319:23;;;;:14;:23;:::i;:::-;-1:-1:-1;;;;;21297:45:126;:19;-1:-1:-1;;;;;21297:45:126;;21289:86;;;;-1:-1:-1;;;21289:86:126;;;;;;;;;;;;21421:1;21397:14;:21;;;:25;21389:50;;;;-1:-1:-1;;;21389:50:126;;;;;;;;;;;;21476:23;;;;:14;:23;:::i;:::-;21454:45;-1:-1:-1;21513:36:126;21528:21;;;;21513:36;;:::i;:::-;;-1:-1:-1;;21104:3:126;;21045:515;;;;2379:8:127;21578:11:126;:33;;21570:62;;;;-1:-1:-1;;;21570:62:126;;;;;;;;;;;;-1:-1:-1;21650:11:126;20456:1212;-1:-1:-1;;20456:1212:126:o;1355:203:70:-;1482:68;;-1:-1:-1;;;;;30820:32:318;;;1482:68:70;;;30802:51:318;30889:32;;30869:18;;;30862:60;30938:18;;;30931:34;;;1455:96:70;;1475:5;;-1:-1:-1;;;1505:27:70;30775:18:318;;1482:68:70;;;;-1:-1:-1;;1482:68:70;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:68:70;-1:-1:-1;;;;;;1482:68:70;;;;;;;;;;1455:19;:96::i;1599:130:20:-;1513:6;;-1:-1:-1;;;;;1513:6:20;929:10:35;1662:23:20;1654:68;;;;-1:-1:-1;;;1654:68:20;;31178:2:318;1654:68:20;;;31160:21:318;;;31197:18;;;31190:30;31256:34;31236:18;;;31229:62;31308:18;;1654:68:20;30976:356:318;3014:117:179;3074:35;;-1:-1:-1;;;3074:35:179;;3098:10;3074:35;;;3970:51:318;3074:14:179;-1:-1:-1;;;;;3074:23:179;;;;3943:18:318;;3074:35:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3066:58;;;;-1:-1:-1;;;3066:58:179;;;;;;;;;;;5200:157;5281:7;:22;;;5318:32;;3788:25:318;;;5325:10:179;;5318:32;;3776:2:318;3761:18;5318:32:179;;;;;;;5200:157;:::o;19490:557:126:-;19610:160;19656:42;:17;;:42;:::i;:::-;19700:32;;;;;;;;:::i;:::-;19734:26;;;;;;;;:::i;19610:160::-;19815:1;19788:17;:24;;;:28;19780:53;;;;-1:-1:-1;;;19780:53:126;;;;;;;;;;;;2379:8:127;19851:17:126;:24;;;:46;;19843:75;;;;-1:-1:-1;;;19843:75:126;;;;;;;;;;;;19972:35;;19990:17;19972:35;:15;:35;:::i;:::-;19936:32;;;;;;;;:::i;:::-;:71;;;;19928:112;;;;-1:-1:-1;;;19928:112:126;;;;;;;;;;;14818:1302;14914:28;14945:18;14964:15;;;;:5;:15;:::i;:::-;14945:35;;;;;;;;;;:::i;:::-;;;;;;;;;;14914:66;;;;;;;;14945:35;;;;;;;;14914:66;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14914:66:126;;;;;;;;;-1:-1:-1;;;14914:66:126;;;;;;;;;;;;-1:-1:-1;14990:24:126;15002:5;14914:66;14990:11;:24::i;:::-;15125:14;15142:23;;;;:16;;;:23;:::i;:::-;-1:-1:-1;;;;;15193:18:126;;;15175:15;15193:18;;;:10;:18;;;;;;15125:40;;-1:-1:-1;15193:18:126;;15221:68;;-1:-1:-1;15272:6:126;15221:68;15306:10;-1:-1:-1;;;;;15306:21:126;;;15298:52;;;;-1:-1:-1;;;15298:52:126;;;;;;;;;;;;15365:9;15360:754;15384:18;;;;:5;:18;:::i;:::-;:25;;15380:1;:29;15360:754;;;15430:38;15471:17;;;;:5;:17;:::i;:::-;15489:1;15471:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;15538:25:126;;15506:29;15538:25;;;:17;:25;;;;15471:20;15538:25;;;15471:20;;;;;;;-1:-1:-1;15506:29:126;15538:25;;-1:-1:-1;15506:29:126;;15564:15;;;;15471:20;15564:15;:::i;:::-;-1:-1:-1;;;;;15538:42:126;-1:-1:-1;;;;;15538:42:126;;;;;;;;;;;;;15506:74;;15633:21;15602:9;:28;;;:52;15594:94;;;;-1:-1:-1;;;15594:94:126;;;;;;;;;;;;15773:19;15795:52;15826:21;15795:28;;;;:52;:::i;:::-;-1:-1:-1;;;;;15861:25:126;;;;;;:17;15906:28;15861:25;;;;;;15773:74;;-1:-1:-1;15906:28:126;;;;;15861:25;;15887:15;;15906:9;15887:15;:::i;:::-;-1:-1:-1;;;;;15861:42:126;;;;;;;;;;;;;-1:-1:-1;15861:42:126;:73;;;;15949:52;;15978:9;;15989:11;;15949:15;;;;:9;:15;:::i;:::-;-1:-1:-1;;;;;15949:28:126;;:52;:28;:52::i;:::-;16035:9;;-1:-1:-1;;;;;16020:83:126;;;;;;;;;;;;;16074:15;;;;:9;:15;:::i;:::-;16020:83;;;32694:25:318;;;-1:-1:-1;;;;;32755:32:318;;;32750:2;32735:18;;32728:60;32804:18;;32797:34;;;32682:2;32667:18;16020:83:126;;;;;;;-1:-1:-1;;;15411:3:126;;15360:754;;25996:861;26096:6;26132:13;:25;;;:30;;26161:1;26132:30;26131:147;;;-1:-1:-1;26184:26:126;;26214:16;26184:46;;;;:93;;;;;26252:13;:25;;;26234:43;;:15;:43;26184:93;26114:737;;;-1:-1:-1;;26558:24:126;;-1:-1:-1;;;26558:24:126;;;;;25996:861::o;26114:737::-;26756:13;:25;;;26737:44;;:15;:44;;26736:104;;26814:26;;26736:104;;;-1:-1:-1;26785:26:126;;;;25996:861::o;26114:737::-;25996:861;;;:::o;2081:405:37:-;2140:13;2165:11;2179:16;2190:4;2179:10;:16::i;:::-;2303:14;;;2314:2;2303:14;;;;;;;;;2165:30;;-1:-1:-1;2283:17:37;;2303:14;;;;;;;;;-1:-1:-1;;;2393:16:37;;;-1:-1:-1;2438:4:37;2429:14;;2422:28;;;;-1:-1:-1;2393:16:37;2081:405::o;16126:196:126:-;16237:15;;16218:53;;;16237:15;-1:-1:-1;;;16237:15:126;;;;;33012:42:318;;33090:23;;;33085:2;33070:18;;33063:51;16218:53:126;;32985:18:318;16218:53:126;;;;;;;16281:15;:34;;;;;;-1:-1:-1;;;16281:34:126;-1:-1:-1;;;;16281:34:126;;;;;;;;;16126:196::o;21674:1205::-;21793:4;:13;;;21792:14;21784:39;;;;-1:-1:-1;;;21784:39:126;;;;;;;;;;;;21860:4;:16;;;21841:35;;:15;:35;;21833:64;;;;-1:-1:-1;;;21833:64:126;;;;;;;;;;;;21944:21;;;;:5;:21;:::i;:::-;:28;-1:-1:-1;21915:18:126;;;;:5;:18;:::i;:::-;:25;;:57;21907:94;;;;-1:-1:-1;;;21907:94:126;;;;;;;;;;;;22051:17;;;;:5;:17;:::i;:::-;:24;-1:-1:-1;22019:21:126;;;;:5;:21;:::i;:::-;:28;;:56;22011:93;;;;-1:-1:-1;;;22011:93:126;;;;;;;;;;;;22254:9;;22210:202;;22294:17;;;;;;;;:::i;:::-;22338:21;;;;:5;:21;:::i;:::-;22385:5;:16;;22210:23;:202::i;:::-;22534:9;22529:344;22553:18;;;;:5;:18;:::i;:::-;:25;;22549:1;:29;22529:344;;;22599:263;22657:32;;;;22723:18;;;;22657:5;22723:18;:::i;:::-;22742:1;22723:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;22774;;;;:5;:21;:::i;:::-;22796:1;22774:24;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;22827:17;;;;:5;:17;:::i;:::-;22845:1;22827:20;;;;;;;:::i;:::-;;;;;;22599:22;:263::i;:::-;22580:3;;22529:344;;2666:187:20;2758:6;;;-1:-1:-1;;;;;2774:17:20;;;-1:-1:-1;;;;;;2774:17:20;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;16529:190:126:-;16638:14;;16620:50;;-1:-1:-1;;;;;16620:50:126;;;;16638:14;;16620:50;;16638:14;;16620:50;16680:14;:32;;-1:-1:-1;;;;;;16680:32:126;-1:-1:-1;;;;;16680:32:126;;;;;;;;;;16529:190::o;399:154:162:-;472:7;523:2;:6;;;538:2;:5;;;531:13;;506:39;;;;;;;;34387:2:318;34383:15;;;;-1:-1:-1;;34379:53:318;34367:66;;34489:3;34467:16;-1:-1:-1;;;;;;34463:59:318;34458:2;34449:12;;34442:81;34548:2;34539:12;;34212:345;506:39:162;;;;;;;;;;;;;498:48;;;:::i;16725:216:126:-;-1:-1:-1;;;;;16820:18:126;;;16798:19;16820:18;;;:10;:18;;;;;;;;16848:28;;;-1:-1:-1;;;;;;16848:28:126;;;;;;;16891:43;;16820:18;;;;;16848:28;16820:18;;;;16891:43;;16798:19;16891:43;16788:153;16725:216;;:::o;16328:195::-;16442:24;;16414:60;;;16442:24;-1:-1:-1;;;16442:24:126;;;;;35034:38:318;;35108:19;;;35103:2;35088:18;;35081:47;16414:60:126;;35007:18:318;16414:60:126;;;;;;;16484:24;:32;;;;;;-1:-1:-1;;;16484:32:126;-1:-1:-1;;;;16484:32:126;;;;;;;;;16328:195::o;17198:681::-;2497:6:127;17323:28:126;;;;;17315:56;;;;-1:-1:-1;;;17315:56:126;;;;;;;;;;;;17408:25;;-1:-1:-1;;;17408:25:126;;;;17390:15;:43;17382:76;;;;-1:-1:-1;;;17382:76:126;;;;;;;;;;;;17473:25;;-1:-1:-1;;;17473:25:126;;;;;:30;17469:310;;17637:45;;-1:-1:-1;;17637:45:126;17666:16;17637:45;;;17469:310;;;17742:26;;;;;;;-1:-1:-1;;17713:55:126;;;;;;17469:310;17789:34;;17833:39;;;;-1:-1:-1;;;17833:39:126;-1:-1:-1;;17789:34:126;;;;;;17833:39;;;;-1:-1:-1;;17833:39:126;;;;;;;17198:681::o;3137:125:179:-;3213:14;-1:-1:-1;;;;;3213:23:179;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3199:39:179;:10;-1:-1:-1;;;;;3199:39:179;;3191:64;;;;-1:-1:-1;;;3191:64:179;;;;;;;;;;;17958:1383:126;18161:35;18153:68;;;;-1:-1:-1;;;18153:68:126;;;;;;;;;;;;18251:20;18239:32;;:8;:32;;;;18231:63;;;;-1:-1:-1;;;18231:63:126;;;;;;;;;;;;18312:39;18323:28;18312:8;:39;:::i;:::-;:44;;;18304:81;;;;-1:-1:-1;;;18304:81:126;;;;;;;;;;;;18414:1;18403:8;:12;;;18395:39;;;;-1:-1:-1;;;18395:39:126;;;;;;;;;;;;18452:45;18469:28;18452:14;:45;:::i;:::-;:50;;;18444:93;;;;-1:-1:-1;;;18444:93:126;;;;;;;;;;;;18612:14;18568:58;;18586:22;18568:40;;:15;:40;;;;:::i;:::-;:58;;:105;;;;;18659:14;18630:43;;:25;:43;;;;18568:105;18547:178;;;;-1:-1:-1;;;18547:178:126;;;;;;;;;;;;18827:19;;18869:466;18889:35;;;18869:466;;;18945:18;18966:24;;18991:1;18966:27;;;;;;;:::i;:::-;:36;;;:27;;;;;:36;;;;-1:-1:-1;18966:36:126;:::i;:::-;19041:57;;-1:-1:-1;;;19041:57:126;;-1:-1:-1;;;;;3988:32:318;;;19041:57:126;;;3970:51:318;18945:57:126;;-1:-1:-1;19041:15:126;:47;;;;;;3943:18:318;;19041:57:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:95;;;-1:-1:-1;;;;;;19102:34:126;;2632:42:127;19102:34:126;19041:95;19016:176;;;;-1:-1:-1;;;19016:176:126;;;;;;;;;;;;19236:8;-1:-1:-1;;;;;19214:31:126;:11;-1:-1:-1;;;;;19214:31:126;;19206:73;;;;-1:-1:-1;;;19206:73:126;;;;;;;;;;;;19315:8;-1:-1:-1;18926:3:126;;18869:466;;5173:642:70;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;-1:-1:-1;;;;;5618:27:70;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:70;;36175:2:318;5697:111:70;;;36157:21:318;36214:2;36194:18;;;36187:30;36253:34;36233:18;;;36226:62;-1:-1:-1;;;36304:18:318;;;36297:40;36354:19;;5697:111:70;35973:406:318;941:175:70;1050:58;;-1:-1:-1;;;;;36576:32:318;;1050:58:70;;;36558:51:318;36625:18;;;36618:34;;;1023:86:70;;1043:5;;-1:-1:-1;;;1073:23:70;36531:18:318;;1050:58:70;36384:274:318;2558:245:37;2619:7;2691:4;2655:40;;2718:2;2709:11;;2705:69;;;2743:20;;-1:-1:-1;;;2743:20:37;;;;;;;;;;;24838:861:126;25228:23;25249:2;25228:11;:23;:::i;:::-;25222:1;:30;;25203:15;:50;;;25195:85;;;;-1:-1:-1;;;25195:85:126;;;;;;;;;;;;25333:22;25358:35;25382:10;25358:23;:35::i;:::-;25333:60;;25463:186;25585:11;;25463:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25516:4:126;;-1:-1:-1;25620:14:126;;-1:-1:-1;;25463:186:126;;;:28;:186::i;:::-;25442:250;;;;-1:-1:-1;;;25442:250:126;;;;;;;;;;;23341:829;23735:22;23755:2;23735:10;:22;:::i;:::-;23729:1;:29;;23711:14;:48;;;23703:82;;;;-1:-1:-1;;;23703:82:126;;;;;;;;;;;;23838:21;23862:33;23885:9;23862:22;:33::i;4108:223:72:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:72:o;1273:240:161:-;1428:4;1502;1451:47;1479:5;1486:4;1492:5;1451:27;:47::i;:::-;:55;;1273:240;-1:-1:-1;;;;;1273:240:161:o;5165:446:72:-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:72;;36990:2:318;5354:81:72;;;36972:21:318;37029:2;37009:18;;;37002:30;37068:34;37048:18;;;37041:62;-1:-1:-1;;;37119:18:318;;;37112:36;37165:19;;5354:81:72;36788:402:318;5354:81:72;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:72;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:72:o;2030:1081:161:-;2169:7;2211:2;2196:5;:12;:17;;;;:::i;:::-;:22;2188:53;;;;-1:-1:-1;;;2188:53:161;;;;;;;;;;;;2274:4;2305:2;2288:788;2314:5;:12;2309:1;:17;2288:788;;2355:9;2363:1;2355:5;:9;:::i;:::-;2368:1;2355:14;2351:715;;2514:12;2508:4;2501:26;2578:1;2571:5;2567:13;2561:20;2555:4;2548:34;2635:4;2629;2619:21;2603:37;;2681:1;2674:5;2670:13;2661:22;;2351:715;;;2882:1;2875:5;2871:13;2865:20;2859:4;2852:34;2920:12;2914:4;2907:26;2986:4;2980;2970:21;2954:37;;3032:1;3025:5;3021:13;3012:22;;2351:715;2328:7;2333:2;2328:7;;:::i;:::-;;;2288:788;;;-1:-1:-1;3092:12:161;2030:1081;-1:-1:-1;;;;2030:1081:161:o;7671:628:72:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1713:19:34;;;8113:60:72;;;;-1:-1:-1;;;8113:60:72;;37820:2:318;8113:60:72;;;37802:21:318;37859:2;37839:18;;;37832:30;37898:31;37878:18;;;37871:59;37947:18;;8113:60:72;37618:353:318;8113:60:72;-1:-1:-1;8208:10:72;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:72;;;;;;;;:::i;14:131:318:-;-1:-1:-1;;;;;89:31:318;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;890:159::-;954:5;999:2;990:6;985:3;981:16;977:25;974:45;;;1015:1;1012;1005:12;974:45;-1:-1:-1;1037:6:318;890:159;-1:-1:-1;890:159:318:o;1054:409::-;1159:8;1169:6;1223:3;1216:4;1208:6;1204:17;1200:27;1190:55;;1241:1;1238;1231:12;1190:55;-1:-1:-1;1264:20:318;;-1:-1:-1;;;;;1296:30:318;;1293:50;;;1339:1;1336;1329:12;1293:50;1376:4;1368:6;1364:17;1352:29;;1436:3;1429:4;1419:6;1416:1;1412:14;1404:6;1400:27;1396:38;1393:47;1390:67;;;1453:1;1450;1443:12;1390:67;1054:409;;;;;:::o;1468:668::-;1649:6;1657;1665;1718:2;1706:9;1697:7;1693:23;1689:32;1686:52;;;1734:1;1731;1724:12;1686:52;1757:58;1807:7;1796:9;1757:58;:::i;:::-;1747:68;;1866:2;1855:9;1851:18;1838:32;-1:-1:-1;;;;;1885:6:318;1882:30;1879:50;;;1925:1;1922;1915:12;1879:50;1964:112;2068:7;2059:6;2048:9;2044:22;1964:112;:::i;:::-;1468:668;;2095:8;;-1:-1:-1;1938:138:318;;-1:-1:-1;;;;1468:668:318:o;2640:118::-;2726:5;2719:13;2712:21;2705:5;2702:32;2692:60;;2748:1;2745;2738:12;2763:382;2828:6;2836;2889:2;2877:9;2868:7;2864:23;2860:32;2857:52;;;2905:1;2902;2895:12;2857:52;2944:9;2931:23;2963:31;2988:5;2963:31;:::i;:::-;3013:5;-1:-1:-1;3070:2:318;3055:18;;3042:32;3083:30;3042:32;3083:30;:::i;:::-;3132:7;3122:17;;;2763:382;;;;;:::o;3150:226::-;3209:6;3262:2;3250:9;3241:7;3237:23;3233:32;3230:52;;;3278:1;3275;3268:12;3230:52;-1:-1:-1;3323:23:318;;3150:226;-1:-1:-1;3150:226:318:o;3381:256::-;3481:6;3534:2;3522:9;3513:7;3509:23;3505:32;3502:52;;;3550:1;3547;3540:12;3502:52;3573:58;3623:7;3612:9;3573:58;:::i;4032:517::-;4156:6;4164;4217:2;4205:9;4196:7;4192:23;4188:32;4185:52;;;4233:1;4230;4223:12;4185:52;4273:9;4260:23;-1:-1:-1;;;;;4298:6:318;4295:30;4292:50;;;4338:1;4335;4328:12;4292:50;4377:112;4481:7;4472:6;4461:9;4457:22;4377:112;:::i;:::-;4508:8;;4351:138;;-1:-1:-1;4032:517:318;-1:-1:-1;;;;4032:517:318:o;4788:167::-;4859:5;4904:3;4895:6;4890:3;4886:16;4882:26;4879:46;;;4921:1;4918;4911:12;4960:514;5067:6;5075;5128:2;5116:9;5107:7;5103:23;5099:32;5096:52;;;5144:1;5141;5134:12;5096:52;5184:9;5171:23;-1:-1:-1;;;;;5209:6:318;5206:30;5203:50;;;5249:1;5246;5239:12;5203:50;5272:78;5342:7;5333:6;5322:9;5318:22;5272:78;:::i;:::-;5262:88;;;5400:2;5389:9;5385:18;5372:32;5413:31;5438:5;5413:31;:::i;5479:163::-;5546:20;;5606:10;5595:22;;5585:33;;5575:61;;5632:1;5629;5622:12;5647:298;5714:6;5722;5775:2;5763:9;5754:7;5750:23;5746:32;5743:52;;;5791:1;5788;5781:12;5743:52;5836:23;;;-1:-1:-1;5902:37:318;5935:2;5920:18;;5902:37;:::i;:::-;5892:47;;5647:298;;;;;:::o;5950:653::-;6084:6;6092;6100;6153:2;6141:9;6132:7;6128:23;6124:32;6121:52;;;6169:1;6166;6159:12;6121:52;6209:9;6196:23;-1:-1:-1;;;;;6234:6:318;6231:30;6228:50;;;6274:1;6271;6264:12;6228:50;6313:112;6417:7;6408:6;6397:9;6393:22;6313:112;:::i;:::-;6444:8;;-1:-1:-1;6287:138:318;-1:-1:-1;;6529:2:318;6514:18;;6501:32;6542:31;6501:32;6542:31;:::i;:::-;6592:5;6582:15;;;5950:653;;;;;:::o;7040:418::-;7189:2;7178:9;7171:21;7152:4;7221:6;7215:13;7264:6;7259:2;7248:9;7244:18;7237:34;7323:6;7318:2;7310:6;7306:15;7301:2;7290:9;7286:18;7280:50;7379:1;7374:2;7365:6;7354:9;7350:22;7346:31;7339:42;7449:2;7442;7438:7;7433:2;7425:6;7421:15;7417:29;7406:9;7402:45;7398:54;7390:62;;;7040:418;;;;:::o;7463:184::-;7521:6;7574:2;7562:9;7553:7;7549:23;7545:32;7542:52;;;7590:1;7587;7580:12;7542:52;7613:28;7631:9;7613:28;:::i;7652:269::-;7709:6;7762:2;7750:9;7741:7;7737:23;7733:32;7730:52;;;7778:1;7775;7768:12;7730:52;7817:9;7804:23;7867:4;7860:5;7856:16;7849:5;7846:27;7836:55;;7887:1;7884;7877:12;8108:379;8206:6;8259:2;8247:9;8238:7;8234:23;8230:32;8227:52;;;8275:1;8272;8265:12;8227:52;8315:9;8302:23;-1:-1:-1;;;;;8340:6:318;8337:30;8334:50;;;8380:1;8377;8370:12;8334:50;8403:78;8473:7;8464:6;8453:9;8449:22;8403:78;:::i;8492:367::-;8560:6;8568;8621:2;8609:9;8600:7;8596:23;8592:32;8589:52;;;8637:1;8634;8627:12;8589:52;8676:9;8663:23;8695:31;8720:5;8695:31;:::i;:::-;8745:5;8823:2;8808:18;;;;8795:32;;-1:-1:-1;;;8492:367:318:o;8864:404::-;8948:6;8956;9009:2;8997:9;8988:7;8984:23;8980:32;8977:52;;;9025:1;9022;9015:12;8977:52;9064:9;9051:23;9083:31;9108:5;9083:31;:::i;:::-;9133:5;-1:-1:-1;9190:2:318;9175:18;;9162:32;9203:33;9162:32;9203:33;:::i;9733:668::-;9882:6;9890;9898;9951:2;9939:9;9930:7;9926:23;9922:32;9919:52;;;9967:1;9964;9957:12;9919:52;10006:9;9993:23;10025:31;10050:5;10025:31;:::i;:::-;10075:5;-1:-1:-1;10131:2:318;10116:18;;10103:32;-1:-1:-1;;;;;10147:30:318;;10144:50;;;10190:1;10187;10180:12;10406:382;10506:6;10514;10567:2;10555:9;10546:7;10542:23;10538:32;10535:52;;;10583:1;10580;10573:12;10535:52;10622:9;10609:23;10641:31;10666:5;10641:31;:::i;:::-;10691:5;-1:-1:-1;10715:67:318;10774:7;10769:2;10754:18;;10715:67;:::i;10793:159::-;10860:20;;10920:6;10909:18;;10899:29;;10889:57;;10942:1;10939;10932:12;10957:184;11015:6;11068:2;11056:9;11047:7;11043:23;11039:32;11036:52;;;11084:1;11081;11074:12;11036:52;11107:28;11125:9;11107:28;:::i;11146:319::-;11213:6;11221;11274:2;11262:9;11253:7;11249:23;11245:32;11242:52;;;11290:1;11287;11280:12;11242:52;11329:9;11316:23;11348:31;11373:5;11348:31;:::i;:::-;11398:5;-1:-1:-1;11422:37:318;11455:2;11440:18;;11422:37;:::i;11706:460::-;11782:6;11790;11798;11851:2;11839:9;11830:7;11826:23;11822:32;11819:52;;;11867:1;11864;11857:12;11819:52;11906:9;11893:23;11925:31;11950:5;11925:31;:::i;:::-;11975:5;-1:-1:-1;12032:2:318;12017:18;;12004:32;12045:33;12004:32;12045:33;:::i;:::-;12097:7;-1:-1:-1;12123:37:318;12156:2;12141:18;;12123:37;:::i;:::-;12113:47;;11706:460;;;;;:::o;13031:654::-;13124:6;13132;13140;13148;13156;13209:3;13197:9;13188:7;13184:23;13180:33;13177:53;;;13226:1;13223;13216:12;13177:53;13265:9;13252:23;13284:31;13309:5;13284:31;:::i;:::-;13334:5;-1:-1:-1;13412:2:318;13397:18;;13384:32;;-1:-1:-1;13494:2:318;13479:18;;13466:32;13507:33;13466:32;13507:33;:::i;:::-;13559:7;-1:-1:-1;13585:37:318;13618:2;13603:18;;13585:37;:::i;:::-;13575:47;;13641:38;13674:3;13663:9;13659:19;13641:38;:::i;:::-;13631:48;;13031:654;;;;;;;;:::o;13690:455::-;13798:6;13806;13814;13867:3;13855:9;13846:7;13842:23;13838:33;13835:53;;;13884:1;13881;13874:12;13835:53;13923:9;13910:23;13942:31;13967:5;13942:31;:::i;:::-;13992:5;-1:-1:-1;14016:67:318;14075:7;14070:2;14055:18;;14016:67;:::i;:::-;14006:77;;14102:37;14135:2;14124:9;14120:18;14102:37;:::i;14410:296::-;14512:5;14499:19;14527:33;14552:7;14527:33;:::i;:::-;-1:-1:-1;;;;;14581:33:318;14569:46;;14688:10;14651:35;14680:4;14669:16;;14651:35;:::i;:::-;14647:52;14640:4;14635:3;14631:14;14624:76;14410:296;;:::o;14711:271::-;14907:2;14892:18;;14919:57;14896:9;14958:6;14919:57;:::i;14987:245::-;15054:6;15107:2;15095:9;15086:7;15082:23;15078:32;15075:52;;;15123:1;15120;15113:12;15075:52;15155:9;15149:16;15174:28;15196:5;15174:28;:::i;15237:127::-;15298:10;15293:3;15289:20;15286:1;15279:31;15329:4;15326:1;15319:15;15353:4;15350:1;15343:15;15369:352;15489:4;15547:11;15534:25;15641:3;15637:8;15626;15610:14;15606:29;15602:44;15582:18;15578:69;15568:97;;15661:1;15658;15651:12;15568:97;15682:33;;;;;15369:352;-1:-1:-1;;15369:352:318:o;15726:550::-;15826:5;15833:6;15893:3;15880:17;15979:2;15975:7;15964:8;15948:14;15944:29;15940:43;15920:18;15916:68;15906:96;;15998:1;15995;15988:12;15906:96;16026:33;;16130:4;16117:18;;;-1:-1:-1;16078:21:318;;-1:-1:-1;;;;;;16147:30:318;;16144:50;;;16190:1;16187;16180:12;16144:50;16244:6;16241:1;16237:14;16221;16217:35;16210:5;16206:47;16203:67;;;16266:1;16263;16256:12;16281:752;16411:6;16406:3;16399:19;16443:4;16438:3;16434:14;16427:21;;16381:3;16471:5;16494:1;16504:504;16518:6;16515:1;16512:13;16504:504;;;16595:6;16582:20;16615:33;16640:7;16615:33;:::i;:::-;-1:-1:-1;;;;;16673:33:318;16661:46;;16760:4;16748:17;;16735:31;16802:26;16789:40;;16852:15;;;16842:43;;16881:1;16878;16871:12;16842:43;16914:4;16905:14;;16898:26;-1:-1:-1;16953:4:318;16944:14;;;;16981:17;;;;;16540:1;16533:9;16504:504;;;-1:-1:-1;17024:3:318;;16281:752;-1:-1:-1;;;;16281:752:318:o;17038:501::-;17097:5;17104:6;17164:3;17151:17;17250:2;17246:7;17235:8;17219:14;17215:29;17211:43;17191:18;17187:68;17177:96;;17269:1;17266;17259:12;17177:96;17297:33;;17401:4;17388:18;;;-1:-1:-1;17349:21:318;;-1:-1:-1;;;;;;17418:30:318;;17415:50;;;17461:1;17458;17451:12;17415:50;17508:6;17492:14;17488:27;17481:5;17477:39;17474:59;;;17529:1;17526;17519:12;17544:267;17633:6;17628:3;17621:19;17685:6;17678:5;17671:4;17666:3;17662:14;17649:43;-1:-1:-1;17737:1:318;17712:16;;;17730:4;17708:27;;;17701:38;;;;17793:2;17772:15;;;-1:-1:-1;;17768:29:318;17759:39;;;17755:50;;17544:267::o;17816:1812::-;17901:3;17953:86;18033:5;18026;17953:86;:::i;:::-;18060:4;18055:3;18048:17;18086:111;18191:4;18186:3;18182:14;18168:12;18154;18086:111;:::i;:::-;18074:123;;;18245:4;18238:5;18234:16;18221:30;18260:33;18285:7;18260:33;:::i;:::-;-1:-1:-1;;;;;18325:33:318;18318:4;18309:14;;18302:57;18406:97;18497:4;18486:16;;18490:5;18406:97;:::i;:::-;18535:14;;;18528:4;18519:14;;18512:38;18585:28;;;18669:14;;18701:1;;18598:14;18641:4;18631:15;18711:431;18725:14;18722:1;18719:21;18711:431;;;18810:6;18797:20;18830:33;18855:7;18830:33;:::i;:::-;-1:-1:-1;;;;;18890:33:318;18876:48;;19002:4;18990:17;;;18977:31;19028:16;;;19021:33;19087:4;19115:17;;;;18920:1;18748:9;;;;;19076:16;18711:431;;;19173:35;19202:4;19195:5;19191:16;19173:35;:::i;:::-;670:10;659:22;;19260:4;19251:14;;647:35;19151:57;-1:-1:-1;19297:35:318;19326:4;19319:5;19315:16;19297:35;:::i;:::-;670:10;659:22;;19384:4;19375:14;;647:35;19275:57;-1:-1:-1;19437:56:318;19487:4;19480:5;19476:16;19469:5;19437:56;:::i;:::-;19399:94;;;;19536:3;19529:5;19525:15;19518:4;19513:3;19509:14;19502:39;19557:65;19616:5;19600:14;19584;19557:65;:::i;19633:517::-;19953:1;19949;19944:3;19940:11;19936:19;19928:6;19924:32;19913:9;19906:51;19993:6;19988:2;19977:9;19973:18;19966:34;20036:2;20031;20020:9;20016:18;20009:30;19887:4;20056:88;20140:2;20129:9;20125:18;20117:6;20056:88;:::i;:::-;20048:96;19633:517;-1:-1:-1;;;;;19633:517:318:o;20155:127::-;20216:10;20211:3;20207:20;20204:1;20197:31;20247:4;20244:1;20237:15;20271:4;20268:1;20261:15;20287:125;20352:9;;;20373:10;;;20370:36;;;20386:18;;:::i;20417:587::-;20752:57;20799:9;20791:6;20752:57;:::i;:::-;20845:6;20840:2;20829:9;20825:18;20818:34;20888:3;20883:2;20872:9;20868:18;20861:31;20733:4;20909:89;20993:3;20982:9;20978:19;20970:6;20909:89;:::i;21277:128::-;21344:9;;;21365:11;;;21362:37;;;21379:18;;:::i;21410:136::-;21449:3;21477:5;21467:39;;21486:18;;:::i;:::-;-1:-1:-1;;;21522:18:318;;21410:136::o;21940:336::-;22044:4;22102:11;22089:25;22196:3;22192:8;22181;22165:14;22161:29;22157:44;22137:18;22133:69;22123:97;;22216:1;22213;22206:12;22281:838;22350:3;22402:86;22482:5;22475;22402:86;:::i;:::-;22509:4;22504:3;22497:17;22535:111;22640:4;22635:3;22631:14;22617:12;22603;22535:111;:::i;:::-;22523:123;;;22694:4;22687:5;22683:16;22670:30;22709:33;22734:7;22709:33;:::i;:::-;-1:-1:-1;;;;;22774:33:318;22767:4;22758:14;;22751:57;22877:4;22866:16;;;22853:30;22899:14;;;22892:31;22996:10;22959:35;22988:4;22977:16;;22959:35;:::i;:::-;22955:52;22948:4;22943:3;22939:14;22932:76;23081:10;23044:35;23073:4;23066:5;23062:16;23044:35;:::i;:::-;23040:52;23033:4;23028:3;23024:14;23017:76;23109:4;23102:11;;;22281:838;;;;:::o;23124:469::-;23412:1;23408;23403:3;23399:11;23395:19;23387:6;23383:32;23372:9;23365:51;23452:6;23447:2;23436:9;23432:18;23425:34;23495:2;23490;23479:9;23475:18;23468:30;23346:4;23515:72;23583:2;23572:9;23568:18;23560:6;23515:72;:::i;23598:301::-;23801:2;23790:9;23783:21;23764:4;23821:72;23889:2;23878:9;23874:18;23866:6;23821:72;:::i;23904:167::-;23999:10;23972:18;;;23992;;;23968:43;;24023:19;;24020:45;;;24045:18;;:::i;24076:337::-;24181:4;24239:11;24226:25;24333:3;24329:8;24318;24302:14;24298:29;24294:44;24274:18;24270:69;24260:97;;24353:1;24350;24343:12;24418:420;24681:6;24670:9;24663:25;24724:2;24719;24708:9;24704:18;24697:30;24644:4;24744:88;24828:2;24817:9;24813:18;24805:6;24744:88;:::i;24975:715::-;25064:6;25124:2;25112:9;25103:7;25099:23;25095:32;25139:2;25136:22;;;25154:1;25151;25144:12;25136:22;-1:-1:-1;25203:2:318;25197:9;;;25233:15;;-1:-1:-1;;;;;25263:34:318;;25299:22;;;25260:62;25257:185;;;25364:10;25359:3;25355:20;25352:1;25345:31;25399:4;25396:1;25389:15;25427:4;25424:1;25417:15;25257:185;25458:2;25451:22;25495:23;;25527:31;25495:23;25527:31;:::i;:::-;25567:21;;25621:37;25654:2;25639:18;;25621:37;:::i;:::-;25616:2;25604:15;;25597:62;25608:6;24975:715;-1:-1:-1;;;24975:715:318:o;26056:170::-;26153:10;26146:18;;;26126;;;26122:43;;26177:20;;26174:46;;;26200:18;;:::i;26231:185::-;26269:3;26313:10;26306:5;26302:22;26343:7;26333:41;;26354:18;;:::i;:::-;-1:-1:-1;;26390:20:318;;26231:185;-1:-1:-1;;26231:185:318:o;26421:184::-;26491:6;26544:2;26532:9;26523:7;26519:23;26515:32;26512:52;;;26560:1;26557;26550:12;26512:52;-1:-1:-1;26583:16:318;;26421:184;-1:-1:-1;26421:184:318:o;27631:523::-;27905:3;27890:19;;27918:57;27894:9;27957:6;27918:57;:::i;:::-;28023:10;28011:23;;;;28006:2;27991:18;;27984:51;28083:6;28071:19;;;28066:2;28051:18;;28044:47;28128:19;;28122:3;28107:19;;;28100:48;27631:523;;-1:-1:-1;27631:523:318:o;29423:587::-;29558:4;29564:6;29624:11;29611:25;29718:2;29714:7;29703:8;29687:14;29683:29;29679:43;29659:18;29655:68;29645:96;;29737:1;29734;29727:12;29645:96;29764:33;;29816:20;;;-1:-1:-1;;;;;;29848:30:318;;29845:50;;;29891:1;29888;29881:12;29845:50;29924:4;29912:17;;-1:-1:-1;29975:1:318;29971:14;;;29955;29951:35;29941:46;;29938:66;;;30000:1;29997;29990:12;31337:544;31429:4;31435:6;31495:11;31482:25;31589:2;31585:7;31574:8;31558:14;31554:29;31550:43;31530:18;31526:68;31516:96;;31608:1;31605;31598:12;31516:96;31635:33;;31687:20;;;-1:-1:-1;;;;;;31719:30:318;;31716:50;;;31762:1;31759;31752:12;31716:50;31795:4;31783:17;;-1:-1:-1;31846:1:318;31842:14;;;31826;31822:35;31812:46;;31809:66;;;31871:1;31868;31861:12;33686:521;33763:4;33769:6;33829:11;33816:25;33923:2;33919:7;33908:8;33892:14;33888:29;33884:43;33864:18;33860:68;33850:96;;33942:1;33939;33932:12;33850:96;33969:33;;34021:20;;;-1:-1:-1;;;;;;34053:30:318;;34050:50;;;34096:1;34093;34086:12;34050:50;34129:4;34117:17;;-1:-1:-1;34160:14:318;34156:27;;;34146:38;;34143:58;;;34197:1;34194;34187:12;34562:297;34680:12;;34727:4;34716:16;;;34710:23;;34680:12;34745:16;;34742:111;;;-1:-1:-1;;34819:4:318;34815:17;;;;34812:1;34808:25;34804:38;34793:50;;34562:297;-1:-1:-1;34562:297:318:o;35139:251::-;35209:6;35262:2;35250:9;35241:7;35237:23;35233:32;35230:52;;;35278:1;35275;35268:12;35230:52;35310:9;35304:16;35329:31;35354:5;35329:31;:::i;35395:127::-;35456:10;35451:3;35447:20;35444:1;35437:31;35487:4;35484:1;35477:15;35511:4;35508:1;35501:15;35527:170;35558:1;35592:10;35589:1;35585:18;35622:3;35612:37;;35629:18;;:::i;:::-;35687:3;35674:10;35671:1;35667:18;35663:28;35658:33;;;35527:170;;;;:::o;36663:120::-;36703:1;36729;36719:35;;36734:18;;:::i;:::-;-1:-1:-1;36768:9:318;;36663:120::o;37195:301::-;37324:3;37362:6;37356:13;37408:6;37401:4;37393:6;37389:17;37384:3;37378:37;37470:1;37434:16;;37459:13;;;-1:-1:-1;37434:16:318;37195:301;-1:-1:-1;37195:301:318:o;37501:112::-;37533:1;37559;37549:35;;37564:18;;:::i;:::-;-1:-1:-1;37598:9:318;;37501:112::o",
    "linkReferences": {},
    "immutableReferences": {
      "80893": [
        { "start": 2373, "length": 32 },
        { "start": 7023, "length": 32 }
      ],
      "80897": [
        { "start": 1401, "length": 32 },
        { "start": 13484, "length": 32 }
      ],
      "80901": [
        { "start": 2258, "length": 32 },
        { "start": 2780, "length": 32 },
        { "start": 7167, "length": 32 },
        { "start": 7820, "length": 32 }
      ],
      "80904": [
        { "start": 1983, "length": 32 },
        { "start": 13065, "length": 32 },
        { "start": 13181, "length": 32 }
      ],
      "80907": [
        { "start": 2174, "length": 32 },
        { "start": 12985, "length": 32 }
      ],
      "80910": [
        { "start": 1362, "length": 32 },
        { "start": 13263, "length": 32 }
      ],
      "80913": [
        { "start": 1011, "length": 32 },
        { "start": 10648, "length": 32 }
      ],
      "80916": [
        { "start": 1188, "length": 32 },
        { "start": 13329, "length": 32 }
      ],
      "91327": [
        { "start": 1520, "length": 32 },
        { "start": 9395, "length": 32 }
      ],
      "91389": [{ "start": 4999, "length": 32 }],
      "96768": [
        { "start": 1873, "length": 32 },
        { "start": 10301, "length": 32 },
        { "start": 12778, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "CALCULATION_INTERVAL_SECONDS()": "9d45c281",
    "GENESIS_REWARDS_TIMESTAMP()": "131433b4",
    "MAX_FUTURE_LENGTH()": "04a0c502",
    "MAX_RETROACTIVE_LENGTH()": "37838ed0",
    "MAX_REWARDS_DURATION()": "bf21a8aa",
    "activationDelay()": "3a8c0786",
    "allocationManager()": "ca8aa7c7",
    "beaconChainETHStrategy()": "9104c319",
    "calculateEarnerLeafHash((address,bytes32))": "149bc872",
    "calculateTokenLeafHash((address,uint256))": "f8cd8448",
    "checkClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))": "5e9d8348",
    "claimerFor(address)": "2b9f64a4",
    "createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])": "fce36c7d",
    "createOperatorDirectedAVSRewardsSubmission(address,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])": "9cb9a5fa",
    "createOperatorDirectedOperatorSetRewardsSubmission((address,uint32),((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])": "0ca29899",
    "createRewardsForAllEarners(((address,uint96)[],address,uint256,uint32,uint32)[])": "ff9f6cce",
    "createRewardsForAllSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])": "36af41fa",
    "cumulativeClaimed(address,address)": "865c6953",
    "currRewardsCalculationEndTimestamp()": "4d18cc35",
    "defaultOperatorSplitBips()": "63f6a798",
    "delegationManager()": "ea4d3c9b",
    "disableRoot(uint32)": "f96abf2e",
    "getCurrentClaimableDistributionRoot()": "0e9a53cf",
    "getCurrentDistributionRoot()": "9be3d4e4",
    "getDistributionRootAtIndex(uint256)": "de02e503",
    "getDistributionRootsLength()": "7b8f8b05",
    "getOperatorAVSSplit(address,address)": "e063f81f",
    "getOperatorPISplit(address)": "4b943960",
    "getOperatorSetSplit(address,(address,uint32))": "9de4b35f",
    "getRootIndexFromHash(bytes32)": "e810ce21",
    "initialize(address,uint256,address,uint32,uint16)": "f6efbb59",
    "isAVSRewardsSubmissionHash(address,bytes32)": "6d21117e",
    "isOperatorDirectedAVSRewardsSubmissionHash(address,bytes32)": "ed71e6a2",
    "isOperatorDirectedOperatorSetRewardsSubmissionHash(address,bytes32)": "f2f07ab4",
    "isRewardsForAllSubmitter(address)": "0018572c",
    "isRewardsSubmissionForAllEarnersHash(address,bytes32)": "aebd8bae",
    "isRewardsSubmissionForAllHash(address,bytes32)": "c46db606",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "permissionController()": "4657e26a",
    "processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)": "3ccc861d",
    "processClaims((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[])[],address)": "4596021c",
    "renounceOwnership()": "715018a6",
    "rewardsUpdater()": "fbf1e2c1",
    "setActivationDelay(uint32)": "58baaa3e",
    "setClaimerFor(address)": "a0169ddd",
    "setClaimerFor(address,address)": "f22cef85",
    "setDefaultOperatorSplit(uint16)": "a50a1d9c",
    "setOperatorAVSSplit(address,address,uint16)": "dcbb03b3",
    "setOperatorPISplit(address,uint16)": "b3dbb0e0",
    "setOperatorSetSplit(address,(address,uint32),uint16)": "f74e8eac",
    "setRewardsForAllSubmitter(address,bool)": "0eb38345",
    "setRewardsUpdater(address)": "863cb9a9",
    "strategyManager()": "39b70e38",
    "submissionNonce(address)": "bb7e451f",
    "submitRoot(bytes32,uint32)": "3efe1db6",
    "transferOwnership(address)": "f2fde38b",
    "unpause(uint256)": "fabc1cbc",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"delegationManager\",\"type\":\"address\"},{\"internalType\":\"contract IStrategyManager\",\"name\":\"strategyManager\",\"type\":\"address\"},{\"internalType\":\"contract IAllocationManager\",\"name\":\"allocationManager\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"contract IPermissionController\",\"name\":\"permissionController\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"CALCULATION_INTERVAL_SECONDS\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"MAX_REWARDS_DURATION\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"MAX_RETROACTIVE_LENGTH\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"MAX_FUTURE_LENGTH\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"GENESIS_REWARDS_TIMESTAMP\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsCoordinatorConstructorParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AmountExceedsMax\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrentlyPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DurationExceedsMax\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DurationIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EarningsNotGreaterThanClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCalculationIntervalSecondsRemainder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidClaimProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDurationRemainder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEarner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEarnerLeafIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidGenesisRewardsTimestampRemainder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewPausedStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermissions\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProofLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRootIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStartTimestampRemainder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenLeafIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewRootMustBeForNewCalculatedPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyUnpauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorsNotInAscendingOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PreviousSplitPending\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardsEndTimestampNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RootAlreadyActivated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RootDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RootNotActivated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SplitExceedsMax\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StartTimestampTooFarInFuture\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StartTimestampTooFarInPast\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategiesNotInAscendingOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyNotWhitelisted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SubmissionNotRetroactive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedCaller\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"rewardsSubmissionHash\",\"type\":\"bytes32\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsSubmission\",\"name\":\"rewardsSubmission\",\"type\":\"tuple\"}],\"name\":\"AVSRewardsSubmissionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldActivationDelay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newActivationDelay\",\"type\":\"uint32\"}],\"name\":\"ActivationDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldClaimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerForSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"oldDefaultOperatorSplitBips\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newDefaultOperatorSplitBips\",\"type\":\"uint16\"}],\"name\":\"DefaultOperatorSplitBipsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"}],\"name\":\"DistributionRootDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rewardsCalculationEndTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"}],\"name\":\"DistributionRootSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"oldOperatorAVSSplitBips\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newOperatorAVSSplitBips\",\"type\":\"uint16\"}],\"name\":\"OperatorAVSSplitBipsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operatorDirectedRewardsSubmissionHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"submissionNonce\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.OperatorReward[]\",\"name\":\"operatorRewards\",\"type\":\"tuple[]\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission\",\"name\":\"operatorDirectedRewardsSubmission\",\"type\":\"tuple\"}],\"name\":\"OperatorDirectedAVSRewardsSubmissionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operatorDirectedRewardsSubmissionHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"submissionNonce\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.OperatorReward[]\",\"name\":\"operatorRewards\",\"type\":\"tuple[]\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission\",\"name\":\"operatorDirectedRewardsSubmission\",\"type\":\"tuple\"}],\"name\":\"OperatorDirectedOperatorSetRewardsSubmissionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"oldOperatorPISplitBips\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newOperatorPISplitBips\",\"type\":\"uint16\"}],\"name\":\"OperatorPISplitBipsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"oldOperatorSetSplitBips\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newOperatorSetSplitBips\",\"type\":\"uint16\"}],\"name\":\"OperatorSetSplitBipsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardsForAllSubmitter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"oldValue\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"newValue\",\"type\":\"bool\"}],\"name\":\"RewardsForAllSubmitterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"rewardsSubmissionHash\",\"type\":\"bytes32\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsSubmission\",\"name\":\"rewardsSubmission\",\"type\":\"tuple\"}],\"name\":\"RewardsSubmissionForAllCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHopper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"rewardsSubmissionHash\",\"type\":\"bytes32\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsSubmission\",\"name\":\"rewardsSubmission\",\"type\":\"tuple\"}],\"name\":\"RewardsSubmissionForAllEarnersCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRewardsUpdater\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRewardsUpdater\",\"type\":\"address\"}],\"name\":\"RewardsUpdaterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALCULATION_INTERVAL_SECONDS\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GENESIS_REWARDS_TIMESTAMP\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FUTURE_LENGTH\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_RETROACTIVE_LENGTH\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_REWARDS_DURATION\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activationDelay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocationManager\",\"outputs\":[{\"internalType\":\"contract IAllocationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainETHStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf\",\"name\":\"leaf\",\"type\":\"tuple\"}],\"name\":\"calculateEarnerLeafHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf\",\"name\":\"leaf\",\"type\":\"tuple\"}],\"name\":\"calculateTokenLeafHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"earnerIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"earnerTreeProof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf\",\"name\":\"earnerLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"tokenIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"tokenTreeProofs\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]\",\"name\":\"tokenLeaves\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsMerkleClaim\",\"name\":\"claim\",\"type\":\"tuple\"}],\"name\":\"checkClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"}],\"name\":\"claimerFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsSubmission[]\",\"name\":\"rewardsSubmissions\",\"type\":\"tuple[]\"}],\"name\":\"createAVSRewardsSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.OperatorReward[]\",\"name\":\"operatorRewards\",\"type\":\"tuple[]\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission[]\",\"name\":\"operatorDirectedRewardsSubmissions\",\"type\":\"tuple[]\"}],\"name\":\"createOperatorDirectedAVSRewardsSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.OperatorReward[]\",\"name\":\"operatorRewards\",\"type\":\"tuple[]\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission[]\",\"name\":\"operatorDirectedRewardsSubmissions\",\"type\":\"tuple[]\"}],\"name\":\"createOperatorDirectedOperatorSetRewardsSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsSubmission[]\",\"name\":\"rewardsSubmissions\",\"type\":\"tuple[]\"}],\"name\":\"createRewardsForAllEarners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsSubmission[]\",\"name\":\"rewardsSubmissions\",\"type\":\"tuple[]\"}],\"name\":\"createRewardsForAllSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"cumulativeClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currRewardsCalculationEndTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperatorSplitBips\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegationManager\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"}],\"name\":\"disableRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentClaimableDistributionRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"rewardsCalculationEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"disabled\",\"type\":\"bool\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.DistributionRoot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentDistributionRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"rewardsCalculationEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"disabled\",\"type\":\"bool\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.DistributionRoot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDistributionRootAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"rewardsCalculationEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"disabled\",\"type\":\"bool\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.DistributionRoot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionRootsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"getOperatorAVSSplit\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperatorPISplit\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getOperatorSetSplit\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rootHash\",\"type\":\"bytes32\"}],\"name\":\"getRootIndexFromHash\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_rewardsUpdater\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_activationDelay\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"_defaultSplitBips\",\"type\":\"uint16\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isAVSRewardsSubmissionHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isOperatorDirectedAVSRewardsSubmissionHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isOperatorDirectedOperatorSetRewardsSubmissionHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"}],\"name\":\"isRewardsForAllSubmitter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isRewardsSubmissionForAllEarnersHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isRewardsSubmissionForAllHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionController\",\"outputs\":[{\"internalType\":\"contract IPermissionController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"earnerIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"earnerTreeProof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf\",\"name\":\"earnerLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"tokenIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"tokenTreeProofs\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]\",\"name\":\"tokenLeaves\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsMerkleClaim\",\"name\":\"claim\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"processClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"earnerIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"earnerTreeProof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf\",\"name\":\"earnerLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"tokenIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"tokenTreeProofs\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]\",\"name\":\"tokenLeaves\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsMerkleClaim[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"processClaims\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsUpdater\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_activationDelay\",\"type\":\"uint32\"}],\"name\":\"setActivationDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"setClaimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"setClaimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"split\",\"type\":\"uint16\"}],\"name\":\"setDefaultOperatorSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"split\",\"type\":\"uint16\"}],\"name\":\"setOperatorAVSSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"split\",\"type\":\"uint16\"}],\"name\":\"setOperatorPISplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"split\",\"type\":\"uint16\"}],\"name\":\"setOperatorSetSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_submitter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_newValue\",\"type\":\"bool\"}],\"name\":\"setRewardsForAllSubmitter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsUpdater\",\"type\":\"address\"}],\"name\":\"setRewardsUpdater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"submissionNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"rewardsCalculationEndTimestamp\",\"type\":\"uint32\"}],\"name\":\"submitRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Eigen Labs Inc.\",\"errors\":{\"AmountExceedsMax()\":[{\"details\":\"Thrown when input `amount` exceeds maximum.\"}],\"AmountIsZero()\":[{\"details\":\"Thrown when input `amount` is zero.\"}],\"CurrentlyPaused()\":[{\"details\":\"Thrown when currently paused.\"}],\"DurationExceedsMax()\":[{\"details\":\"Thrown when input `duration` exceeds maximum.\"}],\"DurationIsZero()\":[{\"details\":\"Thrown when input `duration` is zero.\"}],\"EarningsNotGreaterThanClaimed()\":[{\"details\":\"Thrown when cumulative earnings are not greater than cumulative claimed.\"}],\"InputAddressZero()\":[{\"details\":\"Thrown when a null address input is provided.\"}],\"InputArrayLengthMismatch()\":[{\"details\":\"Thrown when two array parameters have mismatching lengths.\"}],\"InputArrayLengthZero()\":[{\"details\":\"Thrown when input arrays length is zero.\"}],\"InvalidAddressZero()\":[{\"details\":\"Thrown when an input address is zero\"}],\"InvalidCalculationIntervalSecondsRemainder()\":[{\"details\":\"Thrown when CALCULATION_INTERVAL_SECONDS is not evenly divisble by SNAPSHOT_CADENCE.\"}],\"InvalidClaimProof()\":[{\"details\":\"Thrown when an invalid earner claim proof is provided.\"}],\"InvalidDurationRemainder()\":[{\"details\":\"Thrown when input `duration` is not evenly divisble by CALCULATION_INTERVAL_SECONDS.\"}],\"InvalidEarner()\":[{\"details\":\"Thrown when a earner not an AVS or Operator\"}],\"InvalidEarnerLeafIndex()\":[{\"details\":\"Thrown when an invalid earner leaf index is provided.\"}],\"InvalidGenesisRewardsTimestampRemainder()\":[{\"details\":\"Thrown when GENESIS_REWARDS_TIMESTAMP is not evenly divisble by CALCULATION_INTERVAL_SECONDS.\"}],\"InvalidNewPausedStatus()\":[{\"details\":\"Thrown when invalid `newPausedStatus` is provided.\"}],\"InvalidOperatorSet()\":[{\"details\":\"Thrown when an invalid operator set is provided.\"}],\"InvalidPermissions()\":[{\"details\":\"Thrown when the caller is not allowed to call a function on behalf of an account.\"}],\"InvalidRoot()\":[{\"details\":\"Thrown when an invalid root is provided.\"}],\"InvalidRootIndex()\":[{\"details\":\"Thrown when an invalid root index is provided.\"}],\"InvalidStartTimestampRemainder()\":[{\"details\":\"Thrown when `startTimestamp` is not evenly divisble by CALCULATION_INTERVAL_SECONDS.\"}],\"InvalidTokenLeafIndex()\":[{\"details\":\"Thrown when an invalid token leaf index is provided.\"}],\"NewRootMustBeForNewCalculatedPeriod()\":[{\"details\":\"Thrown when provided root is not for new calculated period.\"}],\"OnlyPauser()\":[{\"details\":\"Thrown when caller is not pauser.\"}],\"OnlyUnpauser()\":[{\"details\":\"Thrown when caller is not unpauser.\"}],\"OperatorsNotInAscendingOrder()\":[{\"details\":\"Thrown when `operators` are not sorted in ascending order\"}],\"PreviousSplitPending()\":[{\"details\":\"Thrown when an operator attempts to set a split before the previous one becomes active\"}],\"RewardsEndTimestampNotElapsed()\":[{\"details\":\"Thrown when rewards end timestamp has not elapsed.\"}],\"RootAlreadyActivated()\":[{\"details\":\"Thrown if a root has already been activated.\"}],\"RootDisabled()\":[{\"details\":\"Thrown if a root has already been disabled.\"}],\"RootNotActivated()\":[{\"details\":\"Thrown if a root has not been activated yet.\"}],\"SplitExceedsMax()\":[{\"details\":\"Thrown when input `split` exceeds `ONE_HUNDRED_IN_BIPS`\"}],\"StartTimestampTooFarInFuture()\":[{\"details\":\"Thrown when `startTimestamp` is too far in the future.\"}],\"StartTimestampTooFarInPast()\":[{\"details\":\"Thrown when `startTimestamp` is too far in the past.\"}],\"StrategiesNotInAscendingOrder()\":[{\"details\":\"Thrown when `strategies` is not sorted in ascending order.\"}],\"StrategyNotWhitelisted()\":[{\"details\":\"Thrown when an attempt to use a non-whitelisted strategy is made.\"}],\"SubmissionNotRetroactive()\":[{\"details\":\"Thrown when an operator-directed rewards submission is not retroactive\"}],\"UnauthorizedCaller()\":[{\"details\":\"Thrown when msg.sender is not allowed to call a function\"}]},\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OperatorAVSSplitBipsSet(address,address,address,uint32,uint16,uint16)\":{\"params\":{\"activatedAt\":\"The timestamp at which the split will be activated.\",\"avs\":\"The avs for which the split is being set by the operator.\",\"caller\":\"The address calling `setOperatorAVSSplit`.\",\"newOperatorAVSSplitBips\":\"The new split for the operator for the AVS.\",\"oldOperatorAVSSplitBips\":\"The old split for the operator for the AVS.\",\"operator\":\"The operator on behalf of which the split is being set.\"}},\"OperatorDirectedAVSRewardsSubmissionCreated(address,address,bytes32,uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string))\":{\"params\":{\"avs\":\"The avs on behalf of which the operator-directed rewards are being submitted.\",\"caller\":\"The address calling `createOperatorDirectedAVSRewardsSubmission`.\",\"operatorDirectedRewardsSubmission\":\"The Operator-Directed Rewards Submission. Contains the token, start timestamp, duration, operator rewards, description and, strategy and multipliers.\",\"operatorDirectedRewardsSubmissionHash\":\"Keccak256 hash of (`avs`, `submissionNonce` and `operatorDirectedRewardsSubmission`).\",\"submissionNonce\":\"Current nonce of the avs. Used to generate a unique submission hash.\"}},\"OperatorDirectedOperatorSetRewardsSubmissionCreated(address,bytes32,(address,uint32),uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string))\":{\"params\":{\"caller\":\"The address calling `createOperatorDirectedOperatorSetRewardsSubmission`.\",\"operatorDirectedRewardsSubmission\":\"The Operator-Directed Rewards Submission. Contains the token, start timestamp, duration, operator rewards, description and, strategy and multipliers.\",\"operatorDirectedRewardsSubmissionHash\":\"Keccak256 hash of (`avs`, `submissionNonce` and `operatorDirectedRewardsSubmission`).\",\"operatorSet\":\"The operatorSet on behalf of which the operator-directed rewards are being submitted.\",\"submissionNonce\":\"Current nonce of the avs. Used to generate a unique submission hash.\"}},\"OperatorPISplitBipsSet(address,address,uint32,uint16,uint16)\":{\"params\":{\"activatedAt\":\"The timestamp at which the split will be activated.\",\"caller\":\"The address calling `setOperatorPISplit`.\",\"newOperatorPISplitBips\":\"The new split for the operator for Programmatic Incentives.\",\"oldOperatorPISplitBips\":\"The old split for the operator for Programmatic Incentives.\",\"operator\":\"The operator on behalf of which the split is being set.\"}},\"OperatorSetSplitBipsSet(address,address,(address,uint32),uint32,uint16,uint16)\":{\"params\":{\"activatedAt\":\"The timestamp at which the split will be activated.\",\"caller\":\"The address calling `setOperatorSetSplit`.\",\"newOperatorSetSplitBips\":\"The new split for the operator for the operatorSet.\",\"oldOperatorSetSplitBips\":\"The old split for the operator for the operatorSet.\",\"operator\":\"The operator on behalf of which the split is being set.\",\"operatorSet\":\"The operatorSet for which the split is being set.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the immutable variables for the contract\"},\"createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"details\":\"Expected to be called by the ServiceManager of the AVS on behalf of which the submission is being madeThe duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`The duration of the `rewardsSubmission` cannot be 0 and must be a multiple of `CALCULATION_INTERVAL_SECONDS`The tokens are sent to the `RewardsCoordinator` contractStrategies must be in ascending order of addresses to check for duplicatesThis function will revert if the `rewardsSubmission` is malformed, e.g. if the `strategies` and `weights` arrays are of non-equal lengths\",\"params\":{\"rewardsSubmissions\":\"The rewards submissions being created\"}},\"createOperatorDirectedAVSRewardsSubmission(address,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])\":{\"details\":\"Expected to be called by the ServiceManager of the AVS on behalf of which the submission is being madeThe duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`The duration of the `rewardsSubmission` cannot be 0 and must be a multiple of `CALCULATION_INTERVAL_SECONDS`The tokens are sent to the `RewardsCoordinator` contractThe `RewardsCoordinator` contract needs a token approval of sum of all `operatorRewards` in the `operatorDirectedRewardsSubmissions`, before calling this function.Strategies must be in ascending order of addresses to check for duplicatesOperators must be in ascending order of addresses to check for duplicates.This function will revert if the `operatorDirectedRewardsSubmissions` is malformed.\",\"params\":{\"avs\":\"The AVS on behalf of which the reward is being submitted\",\"operatorDirectedRewardsSubmissions\":\"The operator-directed rewards submissions being created\"}},\"createOperatorDirectedOperatorSetRewardsSubmission((address,uint32),((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])\":{\"details\":\"Expected to be called by the AVS that created the operator setThe duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`The duration of the `rewardsSubmission` cannot be 0 and must be a multiple of `CALCULATION_INTERVAL_SECONDS`The tokens are sent to the `RewardsCoordinator` contractThe `RewardsCoordinator` contract needs a token approval of sum of all `operatorRewards` in the `operatorDirectedRewardsSubmissions`, before calling this functionStrategies must be in ascending order of addresses to check for duplicatesOperators must be in ascending order of addresses to check for duplicatesThis function will revert if the `operatorDirectedRewardsSubmissions` is malformed\",\"params\":{\"operatorDirectedRewardsSubmissions\":\"The operator-directed rewards submissions being created\",\"operatorSet\":\"The operator set for which the rewards are being submitted\"}},\"createRewardsForAllEarners(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"params\":{\"rewardsSubmissions\":\"The rewards submissions being created\"}},\"createRewardsForAllSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"params\":{\"rewardsSubmissions\":\"The rewards submissions being created\"}},\"disableRoot(uint32)\":{\"params\":{\"rootIndex\":\"The index of the root to be disabled\"}},\"initialize(address,uint256,address,uint32,uint16)\":{\"details\":\"Initializes the addresses of the initial owner, pauser registry, rewardsUpdater and configures the initial paused status, activationDelay, and defaultOperatorSplitBips.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)\":{\"details\":\"only callable by the valid claimer, that is if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only claimerFor[claim.earner] can claim the rewards.\",\"params\":{\"claim\":\"The RewardsMerkleClaim to be processed. Contains the root index, earner, token leaves, and required proofs\",\"recipient\":\"The address recipient that receives the ERC20 rewards\"}},\"processClaims((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[])[],address)\":{\"details\":\"only callable by the valid claimer, that is if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only claimerFor[claim.earner] can claim the rewards.This function may fail to execute with a large number of claims due to gas limits. Use a smaller array of claims if necessary.\",\"params\":{\"claims\":\"The RewardsMerkleClaims to be processed. Contains the root index, earner, token leaves, and required proofs\",\"recipient\":\"The address recipient that receives the ERC20 rewards\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setActivationDelay(uint32)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"_activationDelay\":\"The new value for activationDelay\"}},\"setClaimerFor(address)\":{\"details\":\"Assumes msg.sender is the earner\",\"params\":{\"claimer\":\"The address of the entity that can call `processClaim` on behalf of the earner\"}},\"setClaimerFor(address,address)\":{\"details\":\"Only callable by operators or AVSs. We define an AVS that has created at least one      operatorSet in the `AllocationManager`\",\"params\":{\"claimer\":\"The address of the entity that can call `processClaim` on behalf of the earner\",\"earner\":\"The address to set the claimer for\"}},\"setDefaultOperatorSplit(uint16)\":{\"details\":\"Only callable by the contract owner.\",\"params\":{\"split\":\"The default split for all operators across all avss in bips.\"}},\"setOperatorAVSSplit(address,address,uint16)\":{\"details\":\"Only callable by the operatorSplit has to be between 0 and 10000 bips (inclusive)The split will be activated after the activation delay\",\"params\":{\"avs\":\"The avs for which the split is being set by the operator\",\"operator\":\"The operator who is setting the split\",\"split\":\"The split for the operator for the specific avs in bips.\"}},\"setOperatorPISplit(address,uint16)\":{\"details\":\"Only callable by the operatorSplit has to be between 0 and 10000 bips (inclusive)The split will be activated after the activation delay\",\"params\":{\"operator\":\"The operator on behalf of which the split is being set.\",\"split\":\"The split for the operator for Programmatic Incentives in bips.\"}},\"setOperatorSetSplit(address,(address,uint32),uint16)\":{\"details\":\"Only callable by the operatorSplit has to be between 0 and 10000 bips (inclusive)The split will be activated after the activation delay\",\"params\":{\"operator\":\"The operator who is setting the split.\",\"operatorSet\":\"The operatorSet for which the split is being set by the operator.\",\"split\":\"The split for the operator for the specific operatorSet in bips.\"}},\"setRewardsForAllSubmitter(address,bool)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"_newValue\":\"The new value for isRewardsForAllSubmitter\",\"_submitter\":\"The address of the rewardsForAllSubmitter\"}},\"setRewardsUpdater(address)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"_rewardsUpdater\":\"The address of the new rewardsUpdater\"}},\"submitRoot(bytes32,uint32)\":{\"details\":\"Only callable by the rewardsUpdater\",\"params\":{\"rewardsCalculationEndTimestamp\":\"The timestamp until which rewards have been calculated\",\"root\":\"The merkle root of the distribution\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"version()\":{\"returns\":{\"_0\":\"The version string in SemVer format (e.g., \\\"1.1.1\\\")\"}}},\"title\":\"RewardsCoordinator\",\"version\":1},\"userdoc\":{\"events\":{\"AVSRewardsSubmissionCreated(address,uint256,bytes32,((address,uint96)[],address,uint256,uint32,uint32))\":{\"notice\":\"emitted when an AVS creates a valid RewardsSubmission\"},\"DistributionRootSubmitted(uint32,bytes32,uint32,uint32)\":{\"notice\":\"rootIndex is the specific array index of the newly created root in the storage array\"},\"OperatorAVSSplitBipsSet(address,address,address,uint32,uint16,uint16)\":{\"notice\":\"Emitted when the operator split for an AVS is set.\"},\"OperatorDirectedAVSRewardsSubmissionCreated(address,address,bytes32,uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string))\":{\"notice\":\"Emitted when an AVS creates a valid `OperatorDirectedRewardsSubmission`\"},\"OperatorDirectedOperatorSetRewardsSubmissionCreated(address,bytes32,(address,uint32),uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string))\":{\"notice\":\"Emitted when an AVS creates a valid `OperatorDirectedRewardsSubmission` for an operator set.\"},\"OperatorPISplitBipsSet(address,address,uint32,uint16,uint16)\":{\"notice\":\"Emitted when the operator split for Programmatic Incentives is set.\"},\"OperatorSetSplitBipsSet(address,address,(address,uint32),uint32,uint16,uint16)\":{\"notice\":\"Emitted when the operator split for a given operatorSet is set.\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"RewardsClaimed(bytes32,address,address,address,address,uint256)\":{\"notice\":\"root is one of the submitted distribution roots that was claimed against\"},\"RewardsSubmissionForAllCreated(address,uint256,bytes32,((address,uint96)[],address,uint256,uint32,uint32))\":{\"notice\":\"emitted when a valid RewardsSubmission is created for all stakers by a valid submitter\"},\"RewardsSubmissionForAllEarnersCreated(address,uint256,bytes32,((address,uint96)[],address,uint256,uint32,uint32))\":{\"notice\":\"emitted when a valid RewardsSubmission is created when rewardAllStakersAndOperators is called\"},\"RewardsUpdaterSet(address,address)\":{\"notice\":\"rewardsUpdater is responsible for submitting DistributionRoots, only owner can set rewardsUpdater\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"CALCULATION_INTERVAL_SECONDS()\":{\"notice\":\"The interval in seconds at which the calculation for rewards distribution is done.\"},\"GENESIS_REWARDS_TIMESTAMP()\":{\"notice\":\"absolute min timestamp (seconds) that a rewards submission can start at\"},\"MAX_FUTURE_LENGTH()\":{\"notice\":\"max amount of time (seconds) that a rewards submission can start in the future\"},\"MAX_RETROACTIVE_LENGTH()\":{\"notice\":\"max amount of time (seconds) that a rewards submission can start in the past\"},\"MAX_REWARDS_DURATION()\":{\"notice\":\"The maximum amount of time (seconds) that a rewards submission can span over\"},\"activationDelay()\":{\"notice\":\"Delay in timestamp (seconds) before a posted root can be claimed against\"},\"allocationManager()\":{\"notice\":\"The AllocationManager contract for EigenLayer\"},\"beaconChainETHStrategy()\":{\"notice\":\"Canonical, virtual beacon chain ETH strategy\"},\"calculateEarnerLeafHash((address,bytes32))\":{\"notice\":\"return the hash of the earner's leaf\"},\"calculateTokenLeafHash((address,uint256))\":{\"notice\":\"returns the hash of the earner's token leaf\"},\"checkClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))\":{\"notice\":\"returns 'true' if the claim would currently pass the check in `processClaims` but will revert if not valid\"},\"claimerFor(address)\":{\"notice\":\"Returns the `claimer` for a given `earner`.\"},\"createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"notice\":\"Creates a new rewards submission on behalf of an AVS, to be split amongst the set of stakers delegated to operators who are registered to the `avs`\"},\"createOperatorDirectedAVSRewardsSubmission(address,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])\":{\"notice\":\"Creates a new operator-directed rewards submission on behalf of an AVS, to be split amongst the operators and set of stakers delegated to operators who are registered to the `avs`.\"},\"createOperatorDirectedOperatorSetRewardsSubmission((address,uint32),((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])\":{\"notice\":\"Creates a new operator-directed rewards submission for an operator set, to be split amongst the operators and set of stakers delegated to operators who are part of the operator set.\"},\"createRewardsForAllEarners(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"notice\":\"Creates a new rewards submission for all earners across all AVSs. Earners in this case indicating all operators and their delegated stakers. Undelegated stake is not rewarded from this RewardsSubmission. This interface is only callable by the token hopper contract from the Eigen Foundation\"},\"createRewardsForAllSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"notice\":\"similar to `createAVSRewardsSubmission` except the rewards are split amongst *all* stakers rather than just those delegated to operators who are registered to a single avs and is a permissioned call based on isRewardsForAllSubmitter mapping.\"},\"cumulativeClaimed(address,address)\":{\"notice\":\"Returns the total claimed amount for an `earner` for a given `token`.\"},\"currRewardsCalculationEndTimestamp()\":{\"notice\":\"Timestamp for last submitted DistributionRoot\"},\"defaultOperatorSplitBips()\":{\"notice\":\"the default split for all operators across all avss in bips.\"},\"delegationManager()\":{\"notice\":\"The DelegationManager contract for EigenLayer\"},\"disableRoot(uint32)\":{\"notice\":\"allow the rewardsUpdater to disable/cancel a pending root submission in case of an error\"},\"getCurrentClaimableDistributionRoot()\":{\"notice\":\"loop through the distribution roots from reverse and get latest root that is not disabled and activated i.e. a root that can be claimed against\"},\"getCurrentDistributionRoot()\":{\"notice\":\"returns the current distributionRoot\"},\"getDistributionRootAtIndex(uint256)\":{\"notice\":\"returns the distributionRoot at the specified index\"},\"getDistributionRootsLength()\":{\"notice\":\"returns the number of distribution roots posted\"},\"getOperatorAVSSplit(address,address)\":{\"notice\":\"the split for a specific `operator` for a specific `avs`\"},\"getOperatorPISplit(address)\":{\"notice\":\"the split for a specific `operator` for Programmatic Incentives\"},\"getOperatorSetSplit(address,(address,uint32))\":{\"notice\":\"Returns the split for a specific `operator` for a given `operatorSet`\"},\"getRootIndexFromHash(bytes32)\":{\"notice\":\"loop through distribution roots from reverse and return index from hash\"},\"isAVSRewardsSubmissionHash(address,bytes32)\":{\"notice\":\"Returns whether a `hash` is a `valid` rewards submission hash for a given `avs`.\"},\"isOperatorDirectedAVSRewardsSubmissionHash(address,bytes32)\":{\"notice\":\"Returns whether a `hash` is a `valid` operator set performance rewards submission hash for a given `avs`.\"},\"isOperatorDirectedOperatorSetRewardsSubmissionHash(address,bytes32)\":{\"notice\":\"Returns whether a `hash` is a `valid` operator set performance rewards submission hash for a given `avs`.\"},\"isRewardsForAllSubmitter(address)\":{\"notice\":\"Returns whether a `submitter` is a `valid` rewards for all submitter.\"},\"isRewardsSubmissionForAllEarnersHash(address,bytes32)\":{\"notice\":\"Returns whether a `hash` is a `valid` rewards submission for all earners hash for a given `avs`.\"},\"isRewardsSubmissionForAllHash(address,bytes32)\":{\"notice\":\"Returns whether a `hash` is a `valid` rewards submission for all hash for a given `avs`.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"permissionController()\":{\"notice\":\"Pointer to the permission controller contract.\"},\"processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)\":{\"notice\":\"Claim rewards against a given root (read from _distributionRoots[claim.rootIndex]). Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for, they can simply claim against the latest root and the contract will calculate the difference between their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to recipient address.\"},\"processClaims((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[])[],address)\":{\"notice\":\"Batch claim rewards against a given root (read from _distributionRoots[claim.rootIndex]). Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for, they can simply claim against the latest root and the contract will calculate the difference between their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to recipient address.\"},\"rewardsUpdater()\":{\"notice\":\"Slot 2The address of the entity that can update the contract with new merkle roots\"},\"setActivationDelay(uint32)\":{\"notice\":\"Sets the delay in timestamp before a posted root can be claimed against\"},\"setClaimerFor(address)\":{\"notice\":\"Sets the address of the entity that can call `processClaim` on ehalf of an earner\"},\"setClaimerFor(address,address)\":{\"notice\":\"Sets the address of the entity that can call `processClaim` on behalf of an earner\"},\"setDefaultOperatorSplit(uint16)\":{\"notice\":\"Sets the default split for all operators across all avss.\"},\"setOperatorAVSSplit(address,address,uint16)\":{\"notice\":\"Sets the split for a specific operator for a specific avs\"},\"setOperatorPISplit(address,uint16)\":{\"notice\":\"Sets the split for a specific operator for Programmatic Incentives.\"},\"setOperatorSetSplit(address,(address,uint32),uint16)\":{\"notice\":\"Sets the split for a specific operator for a specific operatorSet.\"},\"setRewardsForAllSubmitter(address,bool)\":{\"notice\":\"Sets the permissioned `rewardsForAllSubmitter` address which can submit createRewardsForAllSubmission\"},\"setRewardsUpdater(address)\":{\"notice\":\"Sets the permissioned `rewardsUpdater` address which can post new roots\"},\"strategyManager()\":{\"notice\":\"The StrategyManager contract for EigenLayer\"},\"submissionNonce(address)\":{\"notice\":\"Returns the submission `nonce` for an `avs`.\"},\"submitRoot(bytes32,uint32)\":{\"notice\":\"Creates a new distribution root. activatedAt is set to block.timestamp + activationDelay\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"version()\":{\"notice\":\"Returns the semantic version string of the contract.\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceThis is the contract for rewards in EigenLayer. The main functionalities of this contract are - enabling any ERC20 rewards from AVSs to their operators and stakers for a given time range - allowing stakers and operators to claim their earnings including a split bips for operators - allowing the protocol to provide ERC20 tokens to stakers over a specified time range\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/core/RewardsCoordinator.sol\":\"RewardsCoordinator\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol\":{\"keccak256\":\"0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de\",\"dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"src/contracts/core/RewardsCoordinator.sol\":{\"keccak256\":\"0xee6fb63f972bf2ca1bf3412944ff2170a2ce75361e76ac257c80a5906e3a0a34\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4eb78f8133bbbf6522832fa68b56e707853ab2be1ddf80c9500eabf8859ceaa6\",\"dweb:/ipfs/QmbEFoWPMeier42bPDZd8jtyyCPAWUFNPC817c2px6XcvH\"]},\"src/contracts/core/RewardsCoordinatorStorage.sol\":{\"keccak256\":\"0xd1950ed69fb26cfbb71f461c2e78500c5049746946d535237203ede148ea7f0b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d74bd10ed4eee5d11c021ee514cd34bc3b6b7d60d925d23d3649ce954b205c58\",\"dweb:/ipfs/QmWPChFKQNjY45MjgrRiJx84eqEPa1oPa7wCvJWissryYX\"]},\"src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc\",\"dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm\"]},\"src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0xc0d272c84e3c67c6398f73cb3676ba752d17d5db12cbd831a6ffaed1851b6343\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b445b5ea97ca59cf7d10f48b50ee36b3af6588a8f5ed3960f6e55d70e8a0d651\",\"dweb:/ipfs/QmUpmdkpqL8swHauqvoowfLN5xePtRNfefeFeBogFbQV5R\"]},\"src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xb1ef3d6c53eb535f01fb07c8f0247f8b3f9d31a88e5f397c8074363c73251f0f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f3cab7243290d74aaf382ee5e8c820f4a2dab99841fa7d48ff13c01a5a2f7cc3\",\"dweb:/ipfs/QmXq16ZQwHijHSFbcA54vniRBkn7z7WMmAQ6nSDQzhSirF\"]},\"src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0x41e514abc6261d000f7fd43871f65566d680ae59cc26032c16fc961cdcee0886\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://74273fdb045eabc885393b68d1663ddd47b6546e1bd55bb6a083d621914b235f\",\"dweb:/ipfs/QmUoG1m1zxdRHZKz3535SUNhEqjRYjHGbVAXYPHv1Sf56P\"]},\"src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0xa2e18dbfd63c3211158f916b669bd74066388564a2f019e952953bc5390e1466\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c86e9d4426aa20892ffc660793e8ce6e881de02cc6a0b483efaa06f14a7df864\",\"dweb:/ipfs/QmQbvkto6g9EeRMfU4bPcuAh1Tz3ohGFpHyHS8GA8mZiFN\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/IPermissionController.sol\":{\"keccak256\":\"0x5642a146907a9302553a6cf92d96d417ff90c679dd24eaf7c3408f831e4d838f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a661e690160100dc11646f9011275c996c571d4b7876ac2bdf9b05309c63096f\",\"dweb:/ipfs/QmXJfg7u89XUZ3DYcbo3zTyvWwCKuaUn26DDwFTmsgDoPg\"]},\"src/contracts/interfaces/IRewardsCoordinator.sol\":{\"keccak256\":\"0xfa8f0688093663d0e9799b3cd605535cd80f60d952ecdb1c49f7692a926519ea\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://80fe6da83c0ec4e2e9c553680f4825537b05f65591f990b47356aca6a478ad04\",\"dweb:/ipfs/QmYDqev7tUhYut2xzSbNRmwPoDEBDKuwqXt3d3t8x4uv6t\"]},\"src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e\",\"dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa\"]},\"src/contracts/interfaces/IShareManager.sol\":{\"keccak256\":\"0x411d30d9408ec9302c66e4485069e9c822de2360929edfddc8b644b61b1b3346\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9e9b998ae71f0de2282a4b5969f99dfb26e9a7a00df9f21e836f6515071da482\",\"dweb:/ipfs/QmXCkEJ55TV42m8Wf8Wi7muepd1LJsqmj6ckkRMr47CNvq\"]},\"src/contracts/interfaces/ISignatureUtilsMixin.sol\":{\"keccak256\":\"0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10\",\"dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xabf10614af348e518e14b29de1ae88d79a2567b705edba118f2bf1ce28bd90b5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://af2f7e00fe655b10402be84898ef83cdb5a6f8e3d466513f3fce71554782dc9e\",\"dweb:/ipfs/QmbQsEFf2Mgxuv75HVssgeFeprAbdFnwjWbAWd8Wn9ETXe\"]},\"src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0x11f098af7dd67c9b9b5ecdb737a1a2e6542f24c5635717dff4461d8bf1be50a0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3adfc1635cf03ea1f85136196486b031e5bf2d8444a30c74d8ad70b9160a0525\",\"dweb:/ipfs/QmXVtK5Cicu4U2fiSGL3iEFSnXiRX7EzA7zHp2hsnpNJiH\"]},\"src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x34e826f1bf623fdf06e838dcfae454bd0998c6bd1f59472bdd23a654c7f0382b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9e29ad715a58f94ca25d66d145a688e864ba8ead40d526c43c4fe56a03b00acb\",\"dweb:/ipfs/QmfSjncaRmF75JCZ3Mynrfd2LKpE65zWmwFUyYyhhScvX3\"]},\"src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e\",\"dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX\"]},\"src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0xfea37c052df354d4bd9a1f312dfec81abc8718de41d7cd0c8bd22241887ed246\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5bdc6ab1ef26a39e7db1219e5ecfbbf137473ef4d531a31eed4827b5099c063\",\"dweb:/ipfs/QmVgSDqpMH5dP3rwR1fL59syT9o2tTuwaT7BfWjRY3YhPZ\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]},\"src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0x65cdf662fb8842bcd8296d37e0ffb8e3f319645538f7031bf92288c36c21a469\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://18cf145d9bf509c85b148400e83e689dff62d47508121f1f78db5bed3ace5add\",\"dweb:/ipfs/QmZiso1MD1JtCVkBgVC7zy4gZ598bNt2re9YGkF5JfAM6L\"]},\"src/contracts/mixins/PermissionControllerMixin.sol\":{\"keccak256\":\"0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0\",\"dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva\"]},\"src/contracts/mixins/SemVerMixin.sol\":{\"keccak256\":\"0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546\",\"dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xd9a4094bdef1792abb5aa6a106146295ca723654cf43d1c19e65a29e09960446\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f092e2e9d1e210b603ed534b94ba316a65aef2999445fa317b96ef5021287d99\",\"dweb:/ipfs/QmTcawZWGyCKykm6D61BrfSR8NLEj2YscK5sxQcKZ2mRvA\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.27+commit.40a35a09" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsCoordinatorConstructorParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IDelegationManager",
                  "name": "delegationManager",
                  "type": "address"
                },
                {
                  "internalType": "contract IStrategyManager",
                  "name": "strategyManager",
                  "type": "address"
                },
                {
                  "internalType": "contract IAllocationManager",
                  "name": "allocationManager",
                  "type": "address"
                },
                {
                  "internalType": "contract IPauserRegistry",
                  "name": "pauserRegistry",
                  "type": "address"
                },
                {
                  "internalType": "contract IPermissionController",
                  "name": "permissionController",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "CALCULATION_INTERVAL_SECONDS",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "MAX_REWARDS_DURATION",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "MAX_RETROACTIVE_LENGTH",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "MAX_FUTURE_LENGTH",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "GENESIS_REWARDS_TIMESTAMP",
                  "type": "uint32"
                },
                {
                  "internalType": "string",
                  "name": "version",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "AmountExceedsMax" },
        { "inputs": [], "type": "error", "name": "AmountIsZero" },
        { "inputs": [], "type": "error", "name": "CurrentlyPaused" },
        { "inputs": [], "type": "error", "name": "DurationExceedsMax" },
        { "inputs": [], "type": "error", "name": "DurationIsZero" },
        {
          "inputs": [],
          "type": "error",
          "name": "EarningsNotGreaterThanClaimed"
        },
        { "inputs": [], "type": "error", "name": "InputAddressZero" },
        { "inputs": [], "type": "error", "name": "InputArrayLengthMismatch" },
        { "inputs": [], "type": "error", "name": "InputArrayLengthZero" },
        { "inputs": [], "type": "error", "name": "InvalidAddressZero" },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCalculationIntervalSecondsRemainder"
        },
        { "inputs": [], "type": "error", "name": "InvalidClaimProof" },
        { "inputs": [], "type": "error", "name": "InvalidDurationRemainder" },
        { "inputs": [], "type": "error", "name": "InvalidEarner" },
        { "inputs": [], "type": "error", "name": "InvalidEarnerLeafIndex" },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidGenesisRewardsTimestampRemainder"
        },
        { "inputs": [], "type": "error", "name": "InvalidNewPausedStatus" },
        { "inputs": [], "type": "error", "name": "InvalidOperatorSet" },
        { "inputs": [], "type": "error", "name": "InvalidPermissions" },
        { "inputs": [], "type": "error", "name": "InvalidProofLength" },
        { "inputs": [], "type": "error", "name": "InvalidRoot" },
        { "inputs": [], "type": "error", "name": "InvalidRootIndex" },
        { "inputs": [], "type": "error", "name": "InvalidShortString" },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidStartTimestampRemainder"
        },
        { "inputs": [], "type": "error", "name": "InvalidTokenLeafIndex" },
        {
          "inputs": [],
          "type": "error",
          "name": "NewRootMustBeForNewCalculatedPeriod"
        },
        { "inputs": [], "type": "error", "name": "OnlyPauser" },
        { "inputs": [], "type": "error", "name": "OnlyUnpauser" },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorsNotInAscendingOrder"
        },
        { "inputs": [], "type": "error", "name": "PreviousSplitPending" },
        {
          "inputs": [],
          "type": "error",
          "name": "RewardsEndTimestampNotElapsed"
        },
        { "inputs": [], "type": "error", "name": "RootAlreadyActivated" },
        { "inputs": [], "type": "error", "name": "RootDisabled" },
        { "inputs": [], "type": "error", "name": "RootNotActivated" },
        { "inputs": [], "type": "error", "name": "SplitExceedsMax" },
        {
          "inputs": [],
          "type": "error",
          "name": "StartTimestampTooFarInFuture"
        },
        { "inputs": [], "type": "error", "name": "StartTimestampTooFarInPast" },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategiesNotInAscendingOrder"
        },
        { "inputs": [], "type": "error", "name": "StrategyNotWhitelisted" },
        {
          "inputs": [
            { "internalType": "string", "name": "str", "type": "string" }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        { "inputs": [], "type": "error", "name": "SubmissionNotRetroactive" },
        { "inputs": [], "type": "error", "name": "UnauthorizedCaller" },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "submissionNonce",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "rewardsSubmissionHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission",
              "name": "rewardsSubmission",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AVSRewardsSubmissionCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "oldActivationDelay",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "newActivationDelay",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ActivationDelaySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "earner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "oldClaimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ClaimerForSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "oldDefaultOperatorSplitBips",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "newDefaultOperatorSplitBips",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultOperatorSplitBipsSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "rootIndex",
              "type": "uint32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DistributionRootDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "rootIndex",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "rewardsCalculationEndTimestamp",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "activatedAt",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DistributionRootSubmitted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "activatedAt",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "oldOperatorAVSSplitBips",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "newOperatorAVSSplitBips",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorAVSSplitBipsSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "operatorDirectedRewardsSubmissionHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "submissionNonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission",
              "name": "operatorDirectedRewardsSubmission",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.OperatorReward[]",
                  "name": "operatorRewards",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorDirectedAVSRewardsSubmissionCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "operatorDirectedRewardsSubmissionHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "avs", "type": "address" },
                { "internalType": "uint32", "name": "id", "type": "uint32" }
              ],
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "submissionNonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission",
              "name": "operatorDirectedRewardsSubmission",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.OperatorReward[]",
                  "name": "operatorRewards",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorDirectedOperatorSetRewardsSubmissionCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "activatedAt",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "oldOperatorPISplitBips",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "newOperatorPISplitBips",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorPISplitBipsSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "avs", "type": "address" },
                { "internalType": "uint32", "name": "id", "type": "uint32" }
              ],
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "activatedAt",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "oldOperatorSetSplitBips",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "newOperatorSetSplitBips",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSetSplitBipsSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "earner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "claimedAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "rewardsForAllSubmitter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "oldValue",
              "type": "bool",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "newValue",
              "type": "bool",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RewardsForAllSubmitterSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "submitter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "submissionNonce",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "rewardsSubmissionHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission",
              "name": "rewardsSubmission",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsSubmissionForAllCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenHopper",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "submissionNonce",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "rewardsSubmissionHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission",
              "name": "rewardsSubmission",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsSubmissionForAllEarnersCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldRewardsUpdater",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newRewardsUpdater",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RewardsUpdaterSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALCULATION_INTERVAL_SECONDS",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GENESIS_REWARDS_TIMESTAMP",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_FUTURE_LENGTH",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_RETROACTIVE_LENGTH",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_REWARDS_DURATION",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "activationDelay",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allocationManager",
          "outputs": [
            {
              "internalType": "contract IAllocationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "beaconChainETHStrategy",
          "outputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
              "name": "leaf",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earner",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "earnerTokenRoot",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateEarnerLeafHash",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf",
              "name": "leaf",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "cumulativeEarnings",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateTokenLeafHash",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsMerkleClaim",
              "name": "claim",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "rootIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "earnerIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes",
                  "name": "earnerTreeProof",
                  "type": "bytes"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
                  "name": "earnerLeaf",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "earner",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "earnerTokenRoot",
                      "type": "bytes32"
                    }
                  ]
                },
                {
                  "internalType": "uint32[]",
                  "name": "tokenIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "tokenTreeProofs",
                  "type": "bytes[]"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]",
                  "name": "tokenLeaves",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "cumulativeEarnings",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkClaim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "earner", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "claimerFor",
          "outputs": [
            { "internalType": "address", "name": "claimer", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
              "name": "rewardsSubmissions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAVSRewardsSubmission"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "avs", "type": "address" },
            {
              "internalType": "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission[]",
              "name": "operatorDirectedRewardsSubmissions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.OperatorReward[]",
                  "name": "operatorRewards",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createOperatorDirectedAVSRewardsSubmission"
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "avs", "type": "address" },
                { "internalType": "uint32", "name": "id", "type": "uint32" }
              ]
            },
            {
              "internalType": "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission[]",
              "name": "operatorDirectedRewardsSubmissions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.OperatorReward[]",
                  "name": "operatorRewards",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createOperatorDirectedOperatorSetRewardsSubmission"
        },
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
              "name": "rewardsSubmissions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createRewardsForAllEarners"
        },
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
              "name": "rewardsSubmissions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
                  "name": "strategiesAndMultipliers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IStrategy",
                      "name": "strategy",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "multiplier",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "duration",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createRewardsForAllSubmission"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "earner", "type": "address" },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cumulativeClaimed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalClaimed",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currRewardsCalculationEndTimestamp",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultOperatorSplitBips",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegationManager",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint32", "name": "rootIndex", "type": "uint32" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableRoot"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentClaimableDistributionRoot",
          "outputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.DistributionRoot",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "rewardsCalculationEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "activatedAt",
                  "type": "uint32"
                },
                { "internalType": "bool", "name": "disabled", "type": "bool" }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentDistributionRoot",
          "outputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.DistributionRoot",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "rewardsCalculationEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "activatedAt",
                  "type": "uint32"
                },
                { "internalType": "bool", "name": "disabled", "type": "bool" }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "index", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDistributionRootAtIndex",
          "outputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.DistributionRoot",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "rewardsCalculationEndTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "activatedAt",
                  "type": "uint32"
                },
                { "internalType": "bool", "name": "disabled", "type": "bool" }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDistributionRootsLength",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "address", "name": "avs", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorAVSSplit",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorPISplit",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "avs", "type": "address" },
                { "internalType": "uint32", "name": "id", "type": "uint32" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorSetSplit",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "rootHash", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRootIndexFromHash",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_rewardsUpdater",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_activationDelay",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "_defaultSplitBips",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "avs", "type": "address" },
            { "internalType": "bytes32", "name": "hash", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAVSRewardsSubmissionHash",
          "outputs": [
            { "internalType": "bool", "name": "valid", "type": "bool" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "avs", "type": "address" },
            { "internalType": "bytes32", "name": "hash", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorDirectedAVSRewardsSubmissionHash",
          "outputs": [
            { "internalType": "bool", "name": "valid", "type": "bool" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "avs", "type": "address" },
            { "internalType": "bytes32", "name": "hash", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorDirectedOperatorSetRewardsSubmissionHash",
          "outputs": [
            { "internalType": "bool", "name": "valid", "type": "bool" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "submitter",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRewardsForAllSubmitter",
          "outputs": [
            { "internalType": "bool", "name": "valid", "type": "bool" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "avs", "type": "address" },
            { "internalType": "bytes32", "name": "hash", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRewardsSubmissionForAllEarnersHash",
          "outputs": [
            { "internalType": "bool", "name": "valid", "type": "bool" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "avs", "type": "address" },
            { "internalType": "bytes32", "name": "hash", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRewardsSubmissionForAllHash",
          "outputs": [
            { "internalType": "bool", "name": "valid", "type": "bool" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            { "internalType": "uint8", "name": "index", "type": "uint8" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permissionController",
          "outputs": [
            {
              "internalType": "contract IPermissionController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsMerkleClaim",
              "name": "claim",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "rootIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "earnerIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes",
                  "name": "earnerTreeProof",
                  "type": "bytes"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
                  "name": "earnerLeaf",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "earner",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "earnerTokenRoot",
                      "type": "bytes32"
                    }
                  ]
                },
                {
                  "internalType": "uint32[]",
                  "name": "tokenIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "tokenTreeProofs",
                  "type": "bytes[]"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]",
                  "name": "tokenLeaves",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "cumulativeEarnings",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "processClaim"
        },
        {
          "inputs": [
            {
              "internalType": "struct IRewardsCoordinatorTypes.RewardsMerkleClaim[]",
              "name": "claims",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "rootIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "earnerIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes",
                  "name": "earnerTreeProof",
                  "type": "bytes"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
                  "name": "earnerLeaf",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "earner",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "earnerTokenRoot",
                      "type": "bytes32"
                    }
                  ]
                },
                {
                  "internalType": "uint32[]",
                  "name": "tokenIndices",
                  "type": "uint32[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "tokenTreeProofs",
                  "type": "bytes[]"
                },
                {
                  "internalType": "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]",
                  "name": "tokenLeaves",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "cumulativeEarnings",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "processClaims"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardsUpdater",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_activationDelay",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setActivationDelay"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "claimer", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimerFor"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "earner", "type": "address" },
            { "internalType": "address", "name": "claimer", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimerFor"
        },
        {
          "inputs": [
            { "internalType": "uint16", "name": "split", "type": "uint16" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultOperatorSplit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "address", "name": "avs", "type": "address" },
            { "internalType": "uint16", "name": "split", "type": "uint16" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorAVSSplit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "uint16", "name": "split", "type": "uint16" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorPISplit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "avs", "type": "address" },
                { "internalType": "uint32", "name": "id", "type": "uint32" }
              ]
            },
            { "internalType": "uint16", "name": "split", "type": "uint16" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorSetSplit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_submitter",
              "type": "address"
            },
            { "internalType": "bool", "name": "_newValue", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardsForAllSubmitter"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_rewardsUpdater",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardsUpdater"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyManager",
          "outputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "avs", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "submissionNonce",
          "outputs": [
            { "internalType": "uint256", "name": "nonce", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "root", "type": "bytes32" },
            {
              "internalType": "uint32",
              "name": "rewardsCalculationEndTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitRoot"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "Sets the immutable variables for the contract"
          },
          "createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])": {
            "details": "Expected to be called by the ServiceManager of the AVS on behalf of which the submission is being madeThe duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`The duration of the `rewardsSubmission` cannot be 0 and must be a multiple of `CALCULATION_INTERVAL_SECONDS`The tokens are sent to the `RewardsCoordinator` contractStrategies must be in ascending order of addresses to check for duplicatesThis function will revert if the `rewardsSubmission` is malformed, e.g. if the `strategies` and `weights` arrays are of non-equal lengths",
            "params": {
              "rewardsSubmissions": "The rewards submissions being created"
            }
          },
          "createOperatorDirectedAVSRewardsSubmission(address,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])": {
            "details": "Expected to be called by the ServiceManager of the AVS on behalf of which the submission is being madeThe duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`The duration of the `rewardsSubmission` cannot be 0 and must be a multiple of `CALCULATION_INTERVAL_SECONDS`The tokens are sent to the `RewardsCoordinator` contractThe `RewardsCoordinator` contract needs a token approval of sum of all `operatorRewards` in the `operatorDirectedRewardsSubmissions`, before calling this function.Strategies must be in ascending order of addresses to check for duplicatesOperators must be in ascending order of addresses to check for duplicates.This function will revert if the `operatorDirectedRewardsSubmissions` is malformed.",
            "params": {
              "avs": "The AVS on behalf of which the reward is being submitted",
              "operatorDirectedRewardsSubmissions": "The operator-directed rewards submissions being created"
            }
          },
          "createOperatorDirectedOperatorSetRewardsSubmission((address,uint32),((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])": {
            "details": "Expected to be called by the AVS that created the operator setThe duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`The duration of the `rewardsSubmission` cannot be 0 and must be a multiple of `CALCULATION_INTERVAL_SECONDS`The tokens are sent to the `RewardsCoordinator` contractThe `RewardsCoordinator` contract needs a token approval of sum of all `operatorRewards` in the `operatorDirectedRewardsSubmissions`, before calling this functionStrategies must be in ascending order of addresses to check for duplicatesOperators must be in ascending order of addresses to check for duplicatesThis function will revert if the `operatorDirectedRewardsSubmissions` is malformed",
            "params": {
              "operatorDirectedRewardsSubmissions": "The operator-directed rewards submissions being created",
              "operatorSet": "The operator set for which the rewards are being submitted"
            }
          },
          "createRewardsForAllEarners(((address,uint96)[],address,uint256,uint32,uint32)[])": {
            "params": {
              "rewardsSubmissions": "The rewards submissions being created"
            }
          },
          "createRewardsForAllSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])": {
            "params": {
              "rewardsSubmissions": "The rewards submissions being created"
            }
          },
          "disableRoot(uint32)": {
            "params": { "rootIndex": "The index of the root to be disabled" }
          },
          "initialize(address,uint256,address,uint32,uint16)": {
            "details": "Initializes the addresses of the initial owner, pauser registry, rewardsUpdater and configures the initial paused status, activationDelay, and defaultOperatorSplitBips."
          },
          "owner()": { "details": "Returns the address of the current owner." },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)": {
            "details": "only callable by the valid claimer, that is if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only claimerFor[claim.earner] can claim the rewards.",
            "params": {
              "claim": "The RewardsMerkleClaim to be processed. Contains the root index, earner, token leaves, and required proofs",
              "recipient": "The address recipient that receives the ERC20 rewards"
            }
          },
          "processClaims((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[])[],address)": {
            "details": "only callable by the valid claimer, that is if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only claimerFor[claim.earner] can claim the rewards.This function may fail to execute with a large number of claims due to gas limits. Use a smaller array of claims if necessary.",
            "params": {
              "claims": "The RewardsMerkleClaims to be processed. Contains the root index, earner, token leaves, and required proofs",
              "recipient": "The address recipient that receives the ERC20 rewards"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setActivationDelay(uint32)": {
            "details": "Only callable by the contract owner",
            "params": {
              "_activationDelay": "The new value for activationDelay"
            }
          },
          "setClaimerFor(address)": {
            "details": "Assumes msg.sender is the earner",
            "params": {
              "claimer": "The address of the entity that can call `processClaim` on behalf of the earner"
            }
          },
          "setClaimerFor(address,address)": {
            "details": "Only callable by operators or AVSs. We define an AVS that has created at least one      operatorSet in the `AllocationManager`",
            "params": {
              "claimer": "The address of the entity that can call `processClaim` on behalf of the earner",
              "earner": "The address to set the claimer for"
            }
          },
          "setDefaultOperatorSplit(uint16)": {
            "details": "Only callable by the contract owner.",
            "params": {
              "split": "The default split for all operators across all avss in bips."
            }
          },
          "setOperatorAVSSplit(address,address,uint16)": {
            "details": "Only callable by the operatorSplit has to be between 0 and 10000 bips (inclusive)The split will be activated after the activation delay",
            "params": {
              "avs": "The avs for which the split is being set by the operator",
              "operator": "The operator who is setting the split",
              "split": "The split for the operator for the specific avs in bips."
            }
          },
          "setOperatorPISplit(address,uint16)": {
            "details": "Only callable by the operatorSplit has to be between 0 and 10000 bips (inclusive)The split will be activated after the activation delay",
            "params": {
              "operator": "The operator on behalf of which the split is being set.",
              "split": "The split for the operator for Programmatic Incentives in bips."
            }
          },
          "setOperatorSetSplit(address,(address,uint32),uint16)": {
            "details": "Only callable by the operatorSplit has to be between 0 and 10000 bips (inclusive)The split will be activated after the activation delay",
            "params": {
              "operator": "The operator who is setting the split.",
              "operatorSet": "The operatorSet for which the split is being set by the operator.",
              "split": "The split for the operator for the specific operatorSet in bips."
            }
          },
          "setRewardsForAllSubmitter(address,bool)": {
            "details": "Only callable by the contract owner",
            "params": {
              "_newValue": "The new value for isRewardsForAllSubmitter",
              "_submitter": "The address of the rewardsForAllSubmitter"
            }
          },
          "setRewardsUpdater(address)": {
            "details": "Only callable by the contract owner",
            "params": {
              "_rewardsUpdater": "The address of the new rewardsUpdater"
            }
          },
          "submitRoot(bytes32,uint32)": {
            "details": "Only callable by the rewardsUpdater",
            "params": {
              "rewardsCalculationEndTimestamp": "The timestamp until which rewards have been calculated",
              "root": "The merkle root of the distribution"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "version()": {
            "returns": {
              "_0": "The version string in SemVer format (e.g., \"1.1.1\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "CALCULATION_INTERVAL_SECONDS()": {
            "notice": "The interval in seconds at which the calculation for rewards distribution is done."
          },
          "GENESIS_REWARDS_TIMESTAMP()": {
            "notice": "absolute min timestamp (seconds) that a rewards submission can start at"
          },
          "MAX_FUTURE_LENGTH()": {
            "notice": "max amount of time (seconds) that a rewards submission can start in the future"
          },
          "MAX_RETROACTIVE_LENGTH()": {
            "notice": "max amount of time (seconds) that a rewards submission can start in the past"
          },
          "MAX_REWARDS_DURATION()": {
            "notice": "The maximum amount of time (seconds) that a rewards submission can span over"
          },
          "activationDelay()": {
            "notice": "Delay in timestamp (seconds) before a posted root can be claimed against"
          },
          "allocationManager()": {
            "notice": "The AllocationManager contract for EigenLayer"
          },
          "beaconChainETHStrategy()": {
            "notice": "Canonical, virtual beacon chain ETH strategy"
          },
          "calculateEarnerLeafHash((address,bytes32))": {
            "notice": "return the hash of the earner's leaf"
          },
          "calculateTokenLeafHash((address,uint256))": {
            "notice": "returns the hash of the earner's token leaf"
          },
          "checkClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))": {
            "notice": "returns 'true' if the claim would currently pass the check in `processClaims` but will revert if not valid"
          },
          "claimerFor(address)": {
            "notice": "Returns the `claimer` for a given `earner`."
          },
          "createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])": {
            "notice": "Creates a new rewards submission on behalf of an AVS, to be split amongst the set of stakers delegated to operators who are registered to the `avs`"
          },
          "createOperatorDirectedAVSRewardsSubmission(address,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])": {
            "notice": "Creates a new operator-directed rewards submission on behalf of an AVS, to be split amongst the operators and set of stakers delegated to operators who are registered to the `avs`."
          },
          "createOperatorDirectedOperatorSetRewardsSubmission((address,uint32),((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])": {
            "notice": "Creates a new operator-directed rewards submission for an operator set, to be split amongst the operators and set of stakers delegated to operators who are part of the operator set."
          },
          "createRewardsForAllEarners(((address,uint96)[],address,uint256,uint32,uint32)[])": {
            "notice": "Creates a new rewards submission for all earners across all AVSs. Earners in this case indicating all operators and their delegated stakers. Undelegated stake is not rewarded from this RewardsSubmission. This interface is only callable by the token hopper contract from the Eigen Foundation"
          },
          "createRewardsForAllSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])": {
            "notice": "similar to `createAVSRewardsSubmission` except the rewards are split amongst *all* stakers rather than just those delegated to operators who are registered to a single avs and is a permissioned call based on isRewardsForAllSubmitter mapping."
          },
          "cumulativeClaimed(address,address)": {
            "notice": "Returns the total claimed amount for an `earner` for a given `token`."
          },
          "currRewardsCalculationEndTimestamp()": {
            "notice": "Timestamp for last submitted DistributionRoot"
          },
          "defaultOperatorSplitBips()": {
            "notice": "the default split for all operators across all avss in bips."
          },
          "delegationManager()": {
            "notice": "The DelegationManager contract for EigenLayer"
          },
          "disableRoot(uint32)": {
            "notice": "allow the rewardsUpdater to disable/cancel a pending root submission in case of an error"
          },
          "getCurrentClaimableDistributionRoot()": {
            "notice": "loop through the distribution roots from reverse and get latest root that is not disabled and activated i.e. a root that can be claimed against"
          },
          "getCurrentDistributionRoot()": {
            "notice": "returns the current distributionRoot"
          },
          "getDistributionRootAtIndex(uint256)": {
            "notice": "returns the distributionRoot at the specified index"
          },
          "getDistributionRootsLength()": {
            "notice": "returns the number of distribution roots posted"
          },
          "getOperatorAVSSplit(address,address)": {
            "notice": "the split for a specific `operator` for a specific `avs`"
          },
          "getOperatorPISplit(address)": {
            "notice": "the split for a specific `operator` for Programmatic Incentives"
          },
          "getOperatorSetSplit(address,(address,uint32))": {
            "notice": "Returns the split for a specific `operator` for a given `operatorSet`"
          },
          "getRootIndexFromHash(bytes32)": {
            "notice": "loop through distribution roots from reverse and return index from hash"
          },
          "isAVSRewardsSubmissionHash(address,bytes32)": {
            "notice": "Returns whether a `hash` is a `valid` rewards submission hash for a given `avs`."
          },
          "isOperatorDirectedAVSRewardsSubmissionHash(address,bytes32)": {
            "notice": "Returns whether a `hash` is a `valid` operator set performance rewards submission hash for a given `avs`."
          },
          "isOperatorDirectedOperatorSetRewardsSubmissionHash(address,bytes32)": {
            "notice": "Returns whether a `hash` is a `valid` operator set performance rewards submission hash for a given `avs`."
          },
          "isRewardsForAllSubmitter(address)": {
            "notice": "Returns whether a `submitter` is a `valid` rewards for all submitter."
          },
          "isRewardsSubmissionForAllEarnersHash(address,bytes32)": {
            "notice": "Returns whether a `hash` is a `valid` rewards submission for all earners hash for a given `avs`."
          },
          "isRewardsSubmissionForAllHash(address,bytes32)": {
            "notice": "Returns whether a `hash` is a `valid` rewards submission for all hash for a given `avs`."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": { "notice": "Alias for `pause(type(uint256).max)`." },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "permissionController()": {
            "notice": "Pointer to the permission controller contract."
          },
          "processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)": {
            "notice": "Claim rewards against a given root (read from _distributionRoots[claim.rootIndex]). Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for, they can simply claim against the latest root and the contract will calculate the difference between their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to recipient address."
          },
          "processClaims((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[])[],address)": {
            "notice": "Batch claim rewards against a given root (read from _distributionRoots[claim.rootIndex]). Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for, they can simply claim against the latest root and the contract will calculate the difference between their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to recipient address."
          },
          "rewardsUpdater()": {
            "notice": "Slot 2The address of the entity that can update the contract with new merkle roots"
          },
          "setActivationDelay(uint32)": {
            "notice": "Sets the delay in timestamp before a posted root can be claimed against"
          },
          "setClaimerFor(address)": {
            "notice": "Sets the address of the entity that can call `processClaim` on ehalf of an earner"
          },
          "setClaimerFor(address,address)": {
            "notice": "Sets the address of the entity that can call `processClaim` on behalf of an earner"
          },
          "setDefaultOperatorSplit(uint16)": {
            "notice": "Sets the default split for all operators across all avss."
          },
          "setOperatorAVSSplit(address,address,uint16)": {
            "notice": "Sets the split for a specific operator for a specific avs"
          },
          "setOperatorPISplit(address,uint16)": {
            "notice": "Sets the split for a specific operator for Programmatic Incentives."
          },
          "setOperatorSetSplit(address,(address,uint32),uint16)": {
            "notice": "Sets the split for a specific operator for a specific operatorSet."
          },
          "setRewardsForAllSubmitter(address,bool)": {
            "notice": "Sets the permissioned `rewardsForAllSubmitter` address which can submit createRewardsForAllSubmission"
          },
          "setRewardsUpdater(address)": {
            "notice": "Sets the permissioned `rewardsUpdater` address which can post new roots"
          },
          "strategyManager()": {
            "notice": "The StrategyManager contract for EigenLayer"
          },
          "submissionNonce(address)": {
            "notice": "Returns the submission `nonce` for an `avs`."
          },
          "submitRoot(bytes32,uint32)": {
            "notice": "Creates a new distribution root. activatedAt is set to block.timestamp + activationDelay"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "version()": {
            "notice": "Returns the semantic version string of the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "src/contracts/core/RewardsCoordinator.sol": "RewardsCoordinator"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ShortStringsUpgradeable.sol": {
        "keccak256": "0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822",
        "urls": [
          "bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de",
          "dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "src/contracts/core/RewardsCoordinator.sol": {
        "keccak256": "0xee6fb63f972bf2ca1bf3412944ff2170a2ce75361e76ac257c80a5906e3a0a34",
        "urls": [
          "bzz-raw://4eb78f8133bbbf6522832fa68b56e707853ab2be1ddf80c9500eabf8859ceaa6",
          "dweb:/ipfs/QmbEFoWPMeier42bPDZd8jtyyCPAWUFNPC817c2px6XcvH"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/core/RewardsCoordinatorStorage.sol": {
        "keccak256": "0xd1950ed69fb26cfbb71f461c2e78500c5049746946d535237203ede148ea7f0b",
        "urls": [
          "bzz-raw://d74bd10ed4eee5d11c021ee514cd34bc3b6b7d60d925d23d3649ce954b205c58",
          "dweb:/ipfs/QmWPChFKQNjY45MjgrRiJx84eqEPa1oPa7wCvJWissryYX"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAVSRegistrar.sol": {
        "keccak256": "0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d",
        "urls": [
          "bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc",
          "dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAllocationManager.sol": {
        "keccak256": "0xc0d272c84e3c67c6398f73cb3676ba752d17d5db12cbd831a6ffaed1851b6343",
        "urls": [
          "bzz-raw://b445b5ea97ca59cf7d10f48b50ee36b3af6588a8f5ed3960f6e55d70e8a0d651",
          "dweb:/ipfs/QmUpmdkpqL8swHauqvoowfLN5xePtRNfefeFeBogFbQV5R"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0xb1ef3d6c53eb535f01fb07c8f0247f8b3f9d31a88e5f397c8074363c73251f0f",
        "urls": [
          "bzz-raw://f3cab7243290d74aaf382ee5e8c820f4a2dab99841fa7d48ff13c01a5a2f7cc3",
          "dweb:/ipfs/QmXq16ZQwHijHSFbcA54vniRBkn7z7WMmAQ6nSDQzhSirF"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0x41e514abc6261d000f7fd43871f65566d680ae59cc26032c16fc961cdcee0886",
        "urls": [
          "bzz-raw://74273fdb045eabc885393b68d1663ddd47b6546e1bd55bb6a083d621914b235f",
          "dweb:/ipfs/QmUoG1m1zxdRHZKz3535SUNhEqjRYjHGbVAXYPHv1Sf56P"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0xa2e18dbfd63c3211158f916b669bd74066388564a2f019e952953bc5390e1466",
        "urls": [
          "bzz-raw://c86e9d4426aa20892ffc660793e8ce6e881de02cc6a0b483efaa06f14a7df864",
          "dweb:/ipfs/QmQbvkto6g9EeRMfU4bPcuAh1Tz3ohGFpHyHS8GA8mZiFN"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3",
        "urls": [
          "bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8",
          "dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc",
        "urls": [
          "bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72",
          "dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPermissionController.sol": {
        "keccak256": "0x5642a146907a9302553a6cf92d96d417ff90c679dd24eaf7c3408f831e4d838f",
        "urls": [
          "bzz-raw://a661e690160100dc11646f9011275c996c571d4b7876ac2bdf9b05309c63096f",
          "dweb:/ipfs/QmXJfg7u89XUZ3DYcbo3zTyvWwCKuaUn26DDwFTmsgDoPg"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IRewardsCoordinator.sol": {
        "keccak256": "0xfa8f0688093663d0e9799b3cd605535cd80f60d952ecdb1c49f7692a926519ea",
        "urls": [
          "bzz-raw://80fe6da83c0ec4e2e9c553680f4825537b05f65591f990b47356aca6a478ad04",
          "dweb:/ipfs/QmYDqev7tUhYut2xzSbNRmwPoDEBDKuwqXt3d3t8x4uv6t"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISemVerMixin.sol": {
        "keccak256": "0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791",
        "urls": [
          "bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e",
          "dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IShareManager.sol": {
        "keccak256": "0x411d30d9408ec9302c66e4485069e9c822de2360929edfddc8b644b61b1b3346",
        "urls": [
          "bzz-raw://9e9b998ae71f0de2282a4b5969f99dfb26e9a7a00df9f21e836f6515071da482",
          "dweb:/ipfs/QmXCkEJ55TV42m8Wf8Wi7muepd1LJsqmj6ckkRMr47CNvq"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISignatureUtilsMixin.sol": {
        "keccak256": "0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b",
        "urls": [
          "bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10",
          "dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xabf10614af348e518e14b29de1ae88d79a2567b705edba118f2bf1ce28bd90b5",
        "urls": [
          "bzz-raw://af2f7e00fe655b10402be84898ef83cdb5a6f8e3d466513f3fce71554782dc9e",
          "dweb:/ipfs/QmbQsEFf2Mgxuv75HVssgeFeprAbdFnwjWbAWd8Wn9ETXe"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0x11f098af7dd67c9b9b5ecdb737a1a2e6542f24c5635717dff4461d8bf1be50a0",
        "urls": [
          "bzz-raw://3adfc1635cf03ea1f85136196486b031e5bf2d8444a30c74d8ad70b9160a0525",
          "dweb:/ipfs/QmXVtK5Cicu4U2fiSGL3iEFSnXiRX7EzA7zHp2hsnpNJiH"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x34e826f1bf623fdf06e838dcfae454bd0998c6bd1f59472bdd23a654c7f0382b",
        "urls": [
          "bzz-raw://9e29ad715a58f94ca25d66d145a688e864ba8ead40d526c43c4fe56a03b00acb",
          "dweb:/ipfs/QmfSjncaRmF75JCZ3Mynrfd2LKpE65zWmwFUyYyhhScvX3"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Endian.sol": {
        "keccak256": "0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136",
        "urls": [
          "bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e",
          "dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Merkle.sol": {
        "keccak256": "0xfea37c052df354d4bd9a1f312dfec81abc8718de41d7cd0c8bd22241887ed246",
        "urls": [
          "bzz-raw://c5bdc6ab1ef26a39e7db1219e5ecfbbf137473ef4d531a31eed4827b5099c063",
          "dweb:/ipfs/QmVgSDqpMH5dP3rwR1fL59syT9o2tTuwaT7BfWjRY3YhPZ"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812",
        "urls": [
          "bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41",
          "dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/SlashingLib.sol": {
        "keccak256": "0x65cdf662fb8842bcd8296d37e0ffb8e3f319645538f7031bf92288c36c21a469",
        "urls": [
          "bzz-raw://18cf145d9bf509c85b148400e83e689dff62d47508121f1f78db5bed3ace5add",
          "dweb:/ipfs/QmZiso1MD1JtCVkBgVC7zy4gZ598bNt2re9YGkF5JfAM6L"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/PermissionControllerMixin.sol": {
        "keccak256": "0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67",
        "urls": [
          "bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0",
          "dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SemVerMixin.sol": {
        "keccak256": "0xbc950c1589c05a76d7c0fec82ad11d15567e2cf8d98770a19963461603f99648",
        "urls": [
          "bzz-raw://d483b91672739d608ea510bc1b0f486c13264a50c001c0fa9c909b0282e22546",
          "dweb:/ipfs/QmdByvG58PAG44LWhXKxyrLpHdsr8epaTcEGhfzhH7ssHc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xd9a4094bdef1792abb5aa6a106146295ca723654cf43d1c19e65a29e09960446",
        "urls": [
          "bzz-raw://f092e2e9d1e210b603ed534b94ba316a65aef2999445fa317b96ef5021287d99",
          "dweb:/ipfs/QmTcawZWGyCKykm6D61BrfSR8NLEj2YscK5sxQcKZ2mRvA"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 126
}
